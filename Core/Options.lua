local ElvUI_EltreumUI, E, L, V, P, G = unpack(select(2, ...))
local sort = sort
local pairs = pairs
local tinsert = table.insert
local tconcat = table.concat
local ReloadUI = ReloadUI
local PlaySoundFile = PlaySoundFile

--Author list
local AUTHORS = {
	'|cff82B4ffEltreum|r',
}

-- Credits and Thank yous list
local THANKYOU = {
	'|cff0070DEAzilroka|r',
	'|cffC41F3BKringel|r',
	'|cFF99CCFFAftermathh|r',
	'|cffF58CBARepooc|r Especially for the huge helps',
	'Blazeflack',
	'Botanica',
	'|T134297:15:15:0:0:64:64:5:59:5:59|t |cffff7d0aMerathilis|r',
	'|cff9482c9Darth Predator|r',
	'Caedis',
	'Elv',
	E:TextGradient('Simpy but his name might be shorter sometimes even though he fixes a lot of things', 1,.42,.78, 1,.56,.68, .66,.99,.98, .77,.52,1, 1,.48,.81, .98,.95,.68),
	'Tukui Community',
	'Shrom',
	'Pat',
	'|cff00c0faBenik|r',
	'|T136012:15:15:0:0:64:64:5:59:5:59|t |cff006fdcRubgrsch|r |T656558:15:15:0:0:64:64:5:59:5:59|t',
	'|TInterface/AddOns/ElvUI/Media/ChatLogos/FoxWarlock:15:15:0:0:64:64:5:59:5:59|t |cff8788EENihilistzsche|r',
	'|TInterface/AddOns/ElvUI/Media/ChatLogos/Clover:15:15:0:0:64:64:5:59:5:59|t |cffFF7D0ALuckyone|r Especially for allowing the usage of his installer/plugin as a model',
	'AcidWeb |TInterface/AddOns/ElvUI/Media/ChatLogos/Gem:15:15:-1:2:64:64:6:60:8:60|t',
}

-- SortList
local function SortList(a, b)
	return E:StripString(a) < E:StripString(b)
end

sort(AUTHORS, SortList)
sort(THANKYOU, SortList)

-- Author table
for _, name in pairs(AUTHORS) do
	tinsert(ElvUI_EltreumUI.CreditsList, name)
end
local AUTHORS_STRING = tconcat(AUTHORS, '|n')

-- Thank you table
for _, name in pairs(THANKYOU) do
	tinsert(ElvUI_EltreumUI.CreditsList, name)
end
local THANKYOU_STRING = tconcat(THANKYOU, '|n')

-- EltreumUI ingame options Retail
if ElvUI_EltreumUI.Retail then
	function ElvUI_EltreumUI:Configtable()
		-- Add EltreumUI version on top of the ElvUI config
		E.Options.name = E.Options.name .. " + " .. ElvUI_EltreumUI.Name .. format(" |cffffffff%s|r", ElvUI_EltreumUI.Version)
		E.Options.args.ElvUI_EltreumUI = {
			order = 6,
			type = 'group',
			name = ElvUI_EltreumUI.Name,
			args = {
				logo = {
					type = 'description',
					name = "",
					order = 6,
					image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\logohq', 320, 80 end,
				},
				installer = {
					order = 7,
					type = 'group',
					name = 'Installer',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\install',
					args = {
						install = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Reinstall the plugin to reset settings',
							args = {
								pluginagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() E:GetModule('PluginInstaller'):Queue(ElvUI_EltreumUI.InstallerData) E:ToggleOptionsUI() end,
								},
							},
						},
						resetnameplates = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Reset nameplates to Eltruism settings',
							args = {
								nameplatesagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() ElvUI_EltreumUI:SetupNamePlates('ElvUI') ElvUI_EltreumUI:ResolutionOutline() end,
								},
							},
						},
					},
				},
				aurafilters = {
					type = 'group',
					name = 'Aura Filters',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\aurafilter',
					order = 85,
					args = {
						headerline1 = {
							order = 11,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						auradesc = {
							order = 2,
							type = 'header',
							name = 'Aura Filters',
						},
						listofauras = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'For Shadowlands, import aura filters by copying the code below and going into Profiles > Import Profile.',
							get = function() return '' end,
						},
						header24 = {
							order = 4,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc = {
							order = 5,
							type = 'description',
							name = 'Setup Aura Filters to show all',
						},
						playerallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Buffs',
							desc = 'Set filters to show more buffs on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Everything') end,
						},
						playeralldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Debuffs',
							desc = 'Set filters to show more debuffs on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Everything') end,
						},
						targetalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Debuffs',
							desc = 'Set filters to show more debuffs on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Everything') end,
						},
						targetallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Buffs',
							desc = 'Set filters to show more buffs on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Everything') end,
						},
						focusallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Buffs',
							desc = 'Set filters to show more buffs on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Everything') end,
						},
						focusalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Debuffs',
							desc = 'Set filters to show more debuffs on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Everything') end,
						},
						bossallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Buffs',
							desc = 'Set filters to show more buffs on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Everything') end,
						},
						bossalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Debuffs',
							desc = 'Set filters to show more debuffs on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Everything') end,
						},
						nameplateallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Buffs',
							desc = 'Set filters to show more buffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Everything') end,
						},
						nameplatealldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Debuffs',
							desc = 'Set filters to show more debuffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Everything') end,
						},
						header25 = {
							order = 7,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc2 = {
							order = 8,
							type = 'description',
							name = 'Setup Aura Filters to be Eltruism/ElvUI defaults',
						},
						playerEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Eltruism') end,
						},
						playerEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Eltruism') end,
						},
						targetEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Eltruism') end,
						},
						targetEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Eltruism') end,
						},
						focusEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Eltruism') end,
						},
						focusEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Eltruism') end,
						},
						bossEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Eltruism') end,
						},
						bossEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Eltruism') end,
						},
						nameplateEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Eltruism') end,
						},
						nameplateEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Eltruism') end,
						},
					},
				},
				profiles = {
					type = 'group',
					name = 'Addons',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\addon',
					order = 85,
					args = {
						header1 = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						plugins = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'ElvUI Plugins',
							args = {
								addonskins = {
									order = 1,
									type = 'execute',
									name = '|cff16C3F2AddOn|r|cFFFFFFFFSkins|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupAS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								projectazilroka = {
									order = 2,
									type = 'execute',
									name = '|cFF16C3F2Project|r|cFFFFFFFFAzilroka|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupPA() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header2 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						bossmods = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'BossMods Profiles',
							args = {
								bigwigs = {
									order = 1,
									type = 'execute',
									name = 'BigWigs',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupBW() E:StaticPopup_Show('CONFIG_RL') end,
								},
								dbm = {
									order = 2,
									type = 'execute',
									name = 'DBM',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDBM() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						addons = {
							order = 4,
							type = 'group',
							inline = true,
							name = 'Addon Profiles',
							args = {
								dynamiccam = {
									order = 1,
									type = 'execute',
									name = 'Dynamic Cam',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDynamicCam() E:StaticPopup_Show('CONFIG_RL') end,
								},
								immersion = {
									order = 2,
									type = 'execute',
									name = 'Immersion',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupImmersion() E:StaticPopup_Show('CONFIG_RL') end,
								},
								gladiusex = {
									order = 3,
									type = 'execute',
									name = 'Gladius Ex',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupGladiusEx() E:StaticPopup_Show('CONFIG_RL') end,
								},
								exorsus = {
									order = 4,
									type = 'execute',
									name = 'Exorsus Raid Tools',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupExRT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								nameplatesct = {
									order = 5,
									type = 'execute',
									name = 'NameplateSCT',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupNameplateSCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								fct = {
									order = 6,
									type = 'execute',
									name = 'Floating Combat Text',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupFCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								details = {
									order = 7,
									type = 'execute',
									name = 'Details',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDT() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				actionbars = {
					type = 'group',
					name = 'Custom Glow',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\customglow',
					order = 85,
					args = {
						glow = {
							type = 'group',
							name = 'Replace Blizzards Default Glow with a Custom Glow',
							guiInline = true,
							order = 10,
							args = {
								enable = {
									type = 'toggle',
									name = 'Enable',
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.glow.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.glow.enable = value end,
								},
								headerline1 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								procselection = {
									order = 2,
									type = 'group',
									name = 'Select a Type',
										args = {
											autocast = {
												type = 'toggle',
												name = 'Autocast',
												order = 10,
												desc = 'Adds an autocast style glow using class color',
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.pixel or E.db.ElvUI_EltreumUI.glow.blizzard end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.autocast end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.autocast = value E:StaticPopup_Show('CONFIG_RL') end,
											},
											pixel = {
												type = 'toggle',
												name = 'Pixel',
												order = 10,
												desc = 'Adds a pixel style glow using class color',
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.blizzard end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.pixel end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.pixel = value E:StaticPopup_Show('CONFIG_RL') end,
											},
											blizzard = {
												type = 'toggle',
												name = 'Blizzard',
												order = 10,
												desc = 'Adds a Blizzard style glow using class color',
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.pixel end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.blizzard end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.blizzard = value E:StaticPopup_Show('CONFIG_RL') end,
											},
										},
								},
								headerline2 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customoptionsglow = {
									order = 5,
									type = 'group',
									name = 'Glow Colors',
									args = {
										classcolor = {
											type = 'toggle',
											name = 'Use Class Colors',
											order = 3,
											desc = 'Toggle Class Colored glows',
											get = function() return E.db.ElvUI_EltreumUI.glow.colorclass end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.colorclass = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										color = {
											order = 4,
											type = 'color',
											name = "Custom Color",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.glow.colorclass end,
											get = function()
												local glowcustomcolor = E.db.ElvUI_EltreumUI.glowcustomcolor
												local d = P.ElvUI_EltreumUI.glowcustomcolor
												return glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b, glowcustomcolor.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local glowcustomcolor = E.db.ElvUI_EltreumUI.glowcustomcolor
												glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
											end,
										},
										headerline24 = {
											order = 5,
											type = "description",
											name = "Pixel Glow",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										addagapherepixel = {
											order = 6,
											type = "description",
											name = "",
										},
										borderpixel = {
											type = 'toggle',
											name = 'Pixel Border',
											desc = 'Enable a border for the Pixel Glow',
											order = 7,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.borderpixel end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.borderpixel = value end,
										},
										numberpixel = {
											type = 'range',
											name = 'Number of Pixels (Default is 9)',
											desc = 'Set the number of pixels in pixel glow',
											order = 7,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.numberpixel end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.numberpixel = value end,
										},
										frequencypixel = {
											type = 'range',
											name = 'Pixel Frequency (Default is 1)',
											desc = 'Set the frequency pixel glow',
											order = 7,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.frequencypixel end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.frequencypixel = value end,
										},
										lengthpixel = {
											type = 'range',
											name = 'Pixel Length (Default is 3)',
											desc = 'Set the length of pixels',
											order = 7,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.lengthpixel end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.lengthpixel = value end,
										},
										thicknesspixel = {
											type = 'range',
											name = 'Pixel Thickness (Default is 5)',
											desc = 'Set the thickness of pixels',
											order = 7,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.thicknesspixel end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.thicknesspixel = value end,
										},
										pixelxOffset = {
											type = 'range',
											name = 'Pixel Horizontal Offset (Default is 5)',
											desc = 'Set the horizontal offset of pixels',
											order = 8,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.pixelxOffset end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.pixelxOffset = value end,
										},
										pixelyOffset = {
											type = 'range',
											name = 'Pixel Vertical Offset (Default is 5)',
											desc = 'Set the vertical offset of pixels',
											order = 8,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.pixelyOffset end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.pixelyOffset = value end,
										},
										headerline32 = {
											order = 9,
											type = "description",
											name = "Autocast Glow",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										numberauto = {
											type = 'range',
											name = 'Autocast Particle Groups (Default is 8)',
											desc = 'Set the number of groups for autocast, for each group you get 4 particles',
											order = 10,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.numberauto end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.numberauto = value end,
										},
										frequencyauto = {
											type = 'range',
											name = 'Autocast Frequency (Default is 0.8)',
											desc = 'Speed for Autocast, set to negative to inverse direction of rotation',
											order = 10,
											min = -3,
											max = 3,
											step = 0.1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.frequencyauto end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.frequencyauto = value end,
										},
										autoscale = {
											type = 'range',
											name = 'Autocast Scale (Default is 2)',
											desc = 'Change the size of Autocast',
											order = 10,
											min = -3,
											max = 3,
											step = 0.1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.autoscale end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.autoscale = value end,
										},
										autoxOffset = {
											type = 'range',
											name = 'Autocast Horizontal Offset (Default is 5)',
											desc = 'Set the horizontal offset of autocast',
											order = 11,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.autoxOffset end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.autoxOffset = value end,
										},
										autoyOffset = {
											type = 'range',
											name = 'Autocast Vertical Offset (Default is 5)',
											desc = 'Set the vertical offset of autocast',
											order = 11,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.autoyOffset end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.autoyOffset = value end,
										},
										headerline39 = {
											order = 12,
											type = "description",
											name = "Blizzard Glow",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										frequencyblizz = {
											type = 'range',
											name = 'Autocast Frequency (Default is 0.5)',
											desc = 'Speed for Blizzard glow',
											order = 13,
											min = 0.1,
											max = 3,
											step = 0.1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.glow.frequencyblizz end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.frequencyblizz = value end,
										},
									},
								},
							},
						},
					},
				},
				cvars = {
					order = 85,
					type = 'group',
					name = 'CVars',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cvar',
					args = {
						setup = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup CVars',
							args = {
								generalVars = {
									order = 1,
									type = 'execute',
									name = 'General CVars',
									func = function() ElvUI_EltreumUI:SetupCVars() ElvUI_EltreumUI:NameplateCVars() end,
									confirm = true,
								},
							},
						},
						generalDesc = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'It will set these CVars:',
							args = {
								cvars = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = '- autoLootDefault 1\n- ShowClassColorInFriendlyNameplate 1\n- removeChatDelay 1\n- autoQuestWatch 1\n- cameraDistanceMaxZoomFactor 2.6\n- nameplateLargerScale 1.2\n- nameplateMaxDistance 60\n- nameplateMinAlpha 1\n- nameplateMinScale 1\n- nameplateMotion 1\n- nameplateOccludedAlphaMult 0\n- nameplateOverlapH 0.8\n- nameplateOverlapV 1.1\n- nameplateSelectedScale 1\n- nameplateSelfAlpha 1\n- nameplateShowFriendlyMinions 0\n- nameplateOtherBottomInset 0.02\n- nameplateOtherTopInset 0.1\n- nameplateTargetRadialPosition 1\n- nameplateTargetBehindMaxDistance 40\n- UnitNameEnemyGuardianName 0\n- UnitNameEnemyMinionName 0\n- UnitNameEnemyPetName 0\n- UnitNameEnemyPlayerName 1\n- UnitNameEnemyTotemName 1\n- UnitNameNPC 1',
								},
							},
						},
					},
				},
				partyraidsettings = {
					type = 'group',
					name = 'Party/Raid',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\party',
					order = 85,
					args = {
						partyraiddeath = {
							type = 'group',
							name = 'Play a sound when someone dies in Party or Raid',
							guiInline = true,
							order = 10,
								args = {
									enable = {
										type = 'toggle',
										name = 'Enable Sound',
										order = 1,
										get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
										--disabled = function() return E.db.ElvUI_EltreumUI.partyraiddeath.customenable end,
										set = function(_, value) E.db.ElvUI_EltreumUI.partyraiddeath.enable = value end,
									},
									addagaphere = {
										order = 2,
										type = "description",
										name = "",
									},
									addanothergapforfun = {
										order = 2,
										type = "description",
										name = "",
									},
									soundselection = {
										order = 2,
										type = 'group',
										name = 'Select a Sound',
											args = {
												yetanothergap = {
												order = 2,
												type = "description",
												name = "",
												},
												bruh = {
													type = 'toggle',
													name = 'Bruh',
													order = 5,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.bruh end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.bruh = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\bruh.mp3", "Dialog") end,
												},
												robloxoof = {
													type = 'toggle',
													name = 'Oof',
													order = 6,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\oof.mp3", "Dialog") end,
												},
												shame = {
													type = 'toggle',
													name = 'Shame',
													order = 13,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.shame end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.shame = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\shame.mp3", "Dialog") end,
												},
												wowsound = {
													type = 'toggle',
													name = 'Wow',
													order = 14,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.wow end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.wow = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\wow.mp3", "Dialog") end,
												},
												mariosound = {
													type = 'toggle',
													name = 'Mario',
													order = 14,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.mario = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\mariodeath.mp3", "Dialog") end,
												},
												ionsound = {
													type = 'toggle',
													name = 'Ion',
													order = 14,
													disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
													get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
													set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.ion = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\ionskillissue.mp3", "Dialog") end,
												},
											},
									},
									--[[addagaphere = {
									order = 3,
									type = "description",
									name = "",
									},
									enablecustom = {
									type = 'toggle',
									name = 'Enable Custom Sound',
									order = 4,
									disabled = function() return E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
									get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.customenable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.partyraiddeath.customenable = value end,
									},
									addagaphere = {
									order = 5,
									type = "description",
									name = "",
									},
									sharedmediadeath = {
									     order = 15,
									     type = 'select',
									     width = "double",
									     dialogControl = 'LSM30_Sound',
									     name = "Choose a sound:",
									     desc = 'Choose a different sound from the preselected ones',
									     values = AceGUIWidgetLSMlists.sound,
									     disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.customenable or E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
									     get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.playerdeathsound end,
									     set = function(self,soundvalue)
									          E.db.ElvUI_EltreumUI.partyraiddeath.playerdeathsound = soundvalue E:StaticPopup_Show('profile_RL')
									          --ElvUI_EltreumUI:RaidDeath(soundvalue)
									          --PlaySoundFile(soundvalue)
									          --confirm = true
									     end,
									     confirm = true,
									},]]--
							},
						},
						headergaphere = {
									order = 11,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						grouplayout = {
							type = 'group',
							name = 'Alternative unitframe layouts',
							guiInline = true,
							order = 12,
							args = {
								layoutdescription = {
										order = 1,
										type = 'description',
										fontSize = 'medium',
										name = 'DPS/Tank layouts were created with pure dps classes in mind, if you play a class with more raid cooldowns like a Shaman, Druid or Paladin you might want to use the alternative layout in order to make it easier for you to use your cooldowns on the members of your group',
								},
								alternativegroups = {
									order = 2,
									type = 'execute',
									name = 'Alternative Layout',
									func = function() ElvUI_EltreumUI:AlternativeGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								originalgroups = {
									order = 3,
									type = 'execute',
									name = 'Original Layout',
									func = function() ElvUI_EltreumUI:OriginalGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				quests = {
					type = 'group',
					name = 'Quests',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\quest',
					order = 85,
					args = {
						questsettings = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Collapse Quests during Encounters/Boss Fights',
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.enable end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.enable = value end,
							args = {
								enable = {
									order = 5,
									type = 'toggle',
									name = 'Enable',
									desc = 'Collapse Quests when the boss fight starts',
								},
							},
						},
					},
				},
				cursor = {
					type = 'group',
					name = 'Cursor',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cursor',
					order = 85,
					args = {
						cursorsize = {
							order = 1,
							type = 'group',
							inline = true,
							name= 'Change the size of the World of Warcraft Cursor',
							width = 'full',
							args = {
								setsize = {
									order = 7,
									type = 'select',
									name = 'Select a size',
									desc = 'Choose this size',
									values = {
										['-1'] = 'Autodetect',
										['0'] = '32x32',
										['1'] = '48x48',
										['2'] = '64x64',
										['3'] = '128x128',
									},
					                style = 'radio',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.size end,
  									set = function(info,value) ElvUI_EltreumUI:CursorSize(value) end,
								},
							},
						},
						header1 = {
							order = 2,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						cursorsettings = {
							order = 3,
							type = 'group',
							inline = true,
							name = 'Add a gcd and cast ring to the cursor',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable cursors for Casts, GCD and Combat',
									desc = 'Add a rings around the mouse cursor for GCD, casts and combat',
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header1 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ringtexture = {
									order = 7,
									type = 'group',
									inline = true,
									name = 'Choose a type of cursor by clicking it',
									width = 'full',
									args = {
										currentring = {
											order = 0,
											type = 'description',
											name = function() return 'Currently selected cursor: '..ElvUI_EltreumUI:CurrentTypeofCursor() end,
											desc = ''
										},
										showring1 = {
											order = 1,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1',
											name = 'Type 1',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring2 = {
											order = 2,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2',
											name = 'Type 2',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring3 = {
											order = 3,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3',
											name = 'Type 3',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring4 = {
											order = 4,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4',
											name = 'Type 4',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring5 = {
											order = 5,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5',
											name = 'Type 5',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring6 = {
											order = 6,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6',
											name = 'Type 6',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring7 = {
											order = 7,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7',
											name = 'Type 7',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring8 = {
											order = 8,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8',
											name = 'Type 8',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring9 = {
											order = 9,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9',
											name = 'Type 9',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring10 = {
											order = 10,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10',
											name = 'Type 10',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										nicegap17 = {
											order = 11,
											type = "description",
											name = "Cursor Colors |cffff0000(Requires a Reload)|r",
											width = 'full',
										},
										header12 = {
											order = 11,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										castclasscolor = {
											type = 'toggle',
											name = 'Class Colored Casts',
											order = 12,
											desc = 'Use Class Colors for Cast',
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorcast = {
											order = 13,
											type = 'color',
											name = "Custom Color Cast",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											get = function()
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												local d = P.ElvUI_EltreumUI.cursorcast
												return cursorcast.r, cursorcast.g, cursorcast.b, cursorcast.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												cursorcast.r, cursorcast.g, cursorcast.b = r, g, b
											end,
										},
										nicegap1 = {
											order = 14,
											type = "description",
											name = "",
											width = 'full',
										},
										gcdclasscolor = {
											type = 'toggle',
											name = 'Class Colored GCD',
											order = 14,
											desc = 'Use Class Colors for GCD',
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorgcd = {
											order = 15,
											type = 'color',
											name = "Custom Color GCD",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											get = function()
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												local d = P.ElvUI_EltreumUI.cursorgcd
												return cursorgcd.r, cursorgcd.g, cursorgcd.b, cursorgcd.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												cursorgcd.r, cursorgcd.g, cursorgcd.b = r, g, b
											end,
										},
										nicegap2 = {
											order = 16,
											type = "description",
											name = "",
											width = 'full',
										},
										cursorcursorclasscolor = {
											type = 'toggle',
											name = 'Class Colored Combat',
											order = 16,
											desc = 'Use Class Colors for Cursor',
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										cursorcursorcolor = {
											order = 17,
											type = 'color',
											name = "Custom Color Combat",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											get = function()
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												local d = P.ElvUI_EltreumUI.cursorcursor
												return cursorcursor.r, cursorcursor.g, cursorcursor.b, cursorcursor.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												cursorcursor.r, cursorcursor.g, cursorcursor.b = r, g, b
											end,
										},
										header1 = {
											order = 18,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										nicegap3 = {
											order = 18,
											type = "description",
											name = "Cursor Settings |cffff0000(Requires a reload)|r",
											width = 'full',
										},
										castradius = {
											type = 'range',
											name = 'Cast Radius (Default: 25)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.radius = value end,
										},
										castthickness = {
											type = 'range',
											name = 'Cast Thickness (Default: 5)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.thickness = value end,
										},
										gcdradius = {
											type = 'range',
											name = 'GCD Radius (Default: 20)',
											desc = 'Set the radius of the gcd cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.radius = value end,
										},
										gcdthickness = {
											type = 'range',
											name = 'GCD Thickness (Default: 5)',
											desc = 'Set the thickness of the gcd cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.thickness = value end,
										},
										cursorcursorradius = {
											type = 'range',
											name = 'Combat Cursor Radius (Default: 15)',
											desc = 'Set the radius of the combat cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.radius = value end,
										},
										cursorcursorthickness = {
											type = 'range',
											name = 'Combat Cursor Thickness (Default: 5)',
											desc = 'Set the thickness of the combat cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.thickness = value end,
										},
									},
								},
							},
						},

					},
				},
				combatmusic = {
					type = 'group',
					name = 'Combat Music',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
					order = 85,
					args = {
						moremusicsettings = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music during combat',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable music during combat',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								instancemusic = {
									order = 2,
									type = 'toggle',
									name = 'Disable in Instances',
									desc = 'Disable music during combat in instances',
									width = 'full',
									disabled = function() return not E.private.ElvUI_EltreumUI.combatmusic.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.disableinstance end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.disableinstance = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								pathtofile = {
									order = 6,
									type = 'group',
									inline = true,
									name = "Path to file",
									args = {
										howtomusic = {
										order = 2,
										type = "description",
										name = "Example: Interface\\Addons\\mymusic.mp3",
										},
										somegap = {
											order = 3,
											type = "description",
											name = "",
										},
										soundpath = {
											order = 6,
											icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
											type = 'input',
											name = '',
											desc = '',
											width = 'full',
											get = function() return E.private.ElvUI_EltreumUI.combatmusic.musicfile end,
											set = function(_, value) E.private.ElvUI_EltreumUI.combatmusic.musicfile = value E:StaticPopup_Show('PRIVATE_RL') end,
										}
									}
								},
							},
						},
					},
				},
				maps = {
					type = 'group',
					name = 'Maps',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\map',
					order = 85,
					args = {
						waypointetasetting = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Add a time to arrive below the waypoint',
							args = {
								explainer = {
									order = 1,
									type = "description",
									name = 'The time will be calculated based on player speed and distance',
								},
								explainer2 = {
									order = 2,
									type = "description",
									name = 'If the player is not moving then *** will show up since time cannot be calculated',
								},
								explainer3 = {
									order = 3,
									type = "description",
									name = 'If you move away from the waypoint the time will just increase',
								},
								explainer4 = {
									order = 4,
									type = "description",
									name = '',
								},
								enable = {
									order = 5,
									type = 'toggle',
									name = 'Enable',
									desc = 'Add an ETA to waypoints',
									get = function(info) return E.db.ElvUI_EltreumUI.waypointetasetting.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.waypointetasetting.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						waytext = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Enable the /way and /waypoint commands',
							args = {
								explainer = {
									order = 1,
									type = "description",
									name = 'You can type /way or /waypoint',
								},
								explainer2 = {
									order = 2,
									type = "description",
									name = 'Use formats such as:',
								},
								explainer3 = {
									order = 3,
									type = "description",
									name = 'XX YY, XX.XX YY.YY, XX,XX YY,YY and XXX YYY',
								},
								explainer4 = {
									order = 4,
									type = "description",
									name = 'Other Formats can end up causing errors',
								},
								enable = {
									order = 5,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable the /way and /waypoint commands',
									get = function(info) return E.db.ElvUI_EltreumUI.waytext.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.waytext.enable = value end,
								},
							},
						},
					},
				},
				media = {
					type = 'group',
					name = 'Media',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\media',
					order = 85,
					args = {
						mediaoptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup Media',
							width = 'full',
							args = {
								private = {
									order = 1,
									type = 'execute',
									name = 'Reset all Media',
									desc = 'Reset Fonts, Textures, Skins to Eltreum UI defaults.',
									width = 'full',
									func = function() ElvUI_EltreumUI:SetupPrivate() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header1 = {
								order = 3,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontdescription= {
								order = 3,
								type = "description",
								name = "Set the fonts used in Eltruism. Kimberley is the default font",
								},
								kimberley = {
									order = 4,
									type = 'execute',
									name = 'Kimberley',
									desc = 'This will set all ElvUI fonts as Kimberley',
									func = function() ElvUI_EltreumUI:SetupFontsKimberley() E:StaggeredUpdateAll(nil, true)  end,
									confirm = true,
								},
								exo2 = {
									order = 5,
									type = 'execute',
									name = 'Exo2',
									desc = 'This will set all ElvUI fonts as Exo2',
									func = function() ElvUI_EltreumUI:SetupFontsExo2() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforfonts = {
								order = 6,
								type = "description",
								name = "",
								--width = "full",
								},
								gotham = {
									order = 7,
									type = 'execute',
									name = 'Gotham',
									desc = 'This will set all ElvUI fonts as Gotham',
									func = function() ElvUI_EltreumUI:SetupFontsGotham() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},

								roboto = {
									order = 7,
									type = 'execute',
									name = 'Roboto',
									desc = 'This will set all ElvUI fonts as Roboto',
									func = function() ElvUI_EltreumUI:SetupFontsRoboto() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforcustom = {
								order = 8,
								type = "description",
								name = "",
								},
								sharedmediafont = {
								     order = 8,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Or choose a custom font",
								     desc = 'Choose a different font from the preselected ones',
								     values = AceGUIWidgetLSMlists.font,
								     get = function()
								          return E.db.ElvUI_EltreumUI.fonts.playerfont
								     end,
								     set = function(self,fontvalue)
								          E.db.ElvUI_EltreumUI.fonts.playerfont = fontvalue
								          ElvUI_EltreumUI:SetupCustomFont(fontvalue)
								     end,
								},
								addagaphereforoutlines = {
									order = 9,
									type = "description",
									name = "",
								},
								addagaphereagain = {
									order = 9,
									type = "description",
									name = "",
								},
								header3 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontoutline = {
									order = 11,
									type = "description",
									name = "Set the Font Outlines everywhere. Use Default to return to Eltruism default settings",
									width = "full",
								},
								default = {
									order = 12,
									type = 'execute',
									name = 'Defaults',
									desc = 'This will set fonts to Eltruism defaults, recommended for 4K',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineDefault() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								none = {
									order = 12,
									type = 'execute',
									name = 'None',
									desc = 'This will set fonts to no outline',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineNone() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								outlinegap = {
								order = 13,
								type = "description",
								name = "",
								},
								outline = {
									order = 13,
									type = 'execute',
									name = 'Outline',
									desc = 'This will set fonts to use outline, recommended for 1440p and 1080p',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineOutline() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								thick = {
									order = 13,
									type = 'execute',
									name = 'Thick Outline',
									desc = 'This will set fonts to use thick outline, similar to Eltruism defaults',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineThick() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header4 = {
									order = 14,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								darklightmode = {
									order = 15,
									type = "description",
									name = "Change the look of frames to Dark or Light mode",
									width = "full",
								},
								dark = {
									order = 16,
									type = 'execute',
									name = 'Dark Mode',
									desc = 'This will set colors to black with class colors when losing health',
									func = function() ElvUI_EltreumUI:DarkMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								light = {
									order = 16,
									type = 'execute',
									name = 'Light Mode',
									desc = 'This will set colors to class based with black backgrounds when losing health',
									func = function() ElvUI_EltreumUI:LightMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								header5 = {
									order = 17,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								levelbossskins = {
									order = 18,
									type = "description",
									name = "Skin Level Up, Boss Loot and Instance Entrance frames to be class colored",
									width = "full",
								},
								skinenable = {
									order = 19,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable the Skins',
									get = function(info) return E.db.ElvUI_EltreumUI.skins.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				nameplates = {
					type = 'group',
					name = 'Nameplates',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\nameplate',
					order = 85,
					args = {
						header = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplateOptions = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Class Colored Nameplate Options',
							args = {
								classhover = {
									order = 1,
									type = 'toggle',
									name = 'Hover',
									desc = 'Change the color of the hover to be class colored',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow = value end,
								},
								classborder = {
									order = 2,
									type = 'toggle',
									name = 'Border',
									desc = 'Change the color of the border glow to be class bordered in nameplates',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate = value end,
								},
								classtexture = {
									order = 2,
									type = 'toggle',
									name = 'Target Texture',
									desc = 'Change the texture of the nameplate to be a class gradient',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture = value end,
								},
							},
						},
						addsomegap = {
								order = 3,
								type = "description",
								name = "",
						},
						header2 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						friendlynameplate = {
							order = 5,
							type = 'group',
							inline = true,
							name = 'Control how Nameplates behave',
							args = {
								hidehealthinsideinstances = {
									order = 1,
									type = 'toggle',
									name = 'Show Friendly Nameplates but Hide Healthbar',
									desc = 'Show Friendly Nameplates but Hide Healthbar',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								nofriendlyinstances = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates inside Instances',
									desc = 'Hide Friendly Nameplates inside Instances',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								dontshowfriendlyatall = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates everywhere',
									desc = 'Hide Friendly Nameplates everywhere',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 6,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						verywidenameplate = {
							order = 7,
							type = 'group',
							inline = true,
							name = 'Wide nameplate debuffs and buffs',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Make Buffs and Debuffs Wide on Nameplates',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.widenameplate.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.enable = value end,
								},
							}
						},
						header4 = {
									order = 8,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						dynamiclevel = {
							order = 9,
							type = 'group',
							inline = true,
							name = 'Enemy Nameplate Level',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Hide level on enemy nameplates when you are max level',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.nameplatelevel.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.nameplatelevel.enable = value end,
								},
							}
						},
						header5 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplatepower = {
							order = 11,
							type = 'group',
							inline = true,
							name = 'Nameplate Power Bar',
							args = {
								enablepowerbar = {
									order = 1,
									type = 'toggle',
									name = 'Enable Nameplate Power Bar',
									desc = 'Enable an extra Power Bar on Nameplates for missing powers',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								enableadjust = {
									order = 2,
									type = 'toggle',
									name = 'Enable Autoadjusting Buffs/Debuffs',
									desc = 'Enable autoadjusting the position of Buffs/Debuffs',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.adjust end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.adjust = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								addagapforspace4 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace5 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace6 = {
									order = 3,
									type = "description",
									name = "",
								},
								describethis = {
									order = 4,
									type = "description",
									name = "Select the power types to be displayed:",
								},
								addagapforspace7 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace8 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace9 = {
									order = 5,
									type = "description",
									name = "",
								},
								mana = {
									type = 'toggle',
									name = 'Mana',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.mana end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.mana = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								rage = {
									type = 'toggle',
									name = 'Rage',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.rage end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.rage = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								energy = {
									type = 'toggle',
									name = 'Energy',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.energy end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.energy = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								astral = {
									type = 'toggle',
									name = 'Astral power',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.astral end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.astral = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								runic = {
									type = 'toggle',
									name = 'Runic power',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.runic end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.runic = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								insanity = {
									type = 'toggle',
									name = 'Insanity',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.insanity end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.insanity = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								maelstrom = {
									type = 'toggle',
									name = 'Maelstrom',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.maelstrom end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.maelstrom = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								fury = {
									type = 'toggle',
									name = 'Fury',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.fury end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.fury = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								focus = {
									type = 'toggle',
									name = 'Focus',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.focus end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.focus = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
							}
						},
					},
				},
				loottext = {
					type = 'group',
					name = 'Loot',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\loot',
					order = 85,
					args = {
						lootsetting = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Show a floating loot text',
							args = {
								desc = {
									type = 'toggle',
									name = 'Enable',
									desc = 'Toggle On and Off',
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.loottext.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								addagaphere = {
									order = 2,
									type = "description",
									name = "",
								},
								addanothergapforfun = {
									order = 2,
									type = "description",
									name = "",
								},
								suboptions = {
									order = 2,
									type = 'group',
									name = 'Choose which types of text:',
										args = {
											yetanothergap = {
											order = 2,
											type = "description",
											name = "",
											},
											honor = {
												type = 'toggle',
												name = 'Honor',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.honor end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.honor = value end,
											},
											currency = {
												type = 'toggle',
												name = 'Currency',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.currency end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.currency = value end,
											},
											pet = {
												type = 'toggle',
												name = 'Pets',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.pet end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.pet = value end,
											},
										}
								},
								header1 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscale = {
									type = 'range',
									name = 'Change the scale of LootText',
									desc = 'Set the size of LootText',
									order = 4,
									min = .1,
									max = 1.5,
									step = .05,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.scale end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.scale = value end,
								},
								addgaptobenice = {
									order = 5,
									type = "description",
									name = "",
								},
								lootscalereset = {
									type = 'execute',
									name = 'Reset Scale',
									desc = 'Return LootText to its default scale',
									order = 9,
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									func = function() E.db.ElvUI_EltreumUI.loottext.scale = 0.65 end,
								},
								header2 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootstrata = {
									type = 'select',
									name = 'Change the strata of the Loot Text',
									desc = 'Set the level that LootText will be drawn to this',
									order = 11,
									values = {
					                    ['BACKGROUND'] = 'Background',
					                    ['LOW'] = 'Low',
					                    ['MEDIUM'] = 'Medium',
					                    ['HIGH'] = 'High',
					                    ['DIALOG'] = 'Dialog',
					                },
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.loottext.strata end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.strata = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header99 = {
									order = 12,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscalex = {
									type = 'range',
									name = 'Change the Horizontal Position of LootText (Default = 0)',
									desc = 'Set X offset',
									order = 13,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.xOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.xOffset = value end,
									--confirm = true,
								},
								lootscaley = {
									type = 'range',
									name = 'Change the Vertical Position of LootText (Default = 200)',
									desc = 'Set Y offset',
									order = 14,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.yOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.yOffset = value end,
									--confirm = true,
								},
								header98 = {
									order = 15,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customfontlootgap = {
									type = 'description',
									name = '',
									width = 'full',
									order = 16,
								},
								customfontlootdesc = {
									type = 'description',
									name = 'Change the font of LootText to be that the ElvUI Default Font found in General',
									width = 'full',
									order = 17,
								},
								customfontloot = {
									type = 'toggle',
									name = 'Use ElvUI General Font',
									desc = 'Change the font of LootText',
									order = 18,
									get = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.fontsetting = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								--[[loottextlsmfont = {
								     order = 17,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Choose a Custom Font",
								     desc = 'Choose one of the fonts available111:',
								     values = AceGUIWidgetLSMlists.font,
								     --disabled = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting == false end,
								     get = function() return E.db.ElvUI_EltreumUI.loottext.font end,
								     set = function(self,fontvalue) E.db.ElvUI_EltreumUI.loottext.font = fontvalue end,
								},]]--
							},
						},
					},
				},
				stealth = {
					type = 'group',
					name = 'Stealth Vignette',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\stealth',
					order = 85,
					args = {
						stealthOptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Toggle a Stealth Effect',
							args = {
								stealthframeoptions = {
									order = 1,
									type = 'toggle',
									name = 'Add a vignette effect while in stealth',
									width = 'full',
									desc = 'Turn the effect on',
									get = function(info) return E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect end,
									set = function(info, value) E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect = value end,
								},
							},
						},
					},
				},
				afk = {
					type = 'group',
					name = 'A.F.K',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\afk',
					order = 85,
					args = {
						afkmusic = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music while you are AFK',
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.afkmusic.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.afkmusic.enable = value end,
								},
								addagaphere = {
								order = 2,
								type = "description",
								name = "",
								},
								addanothergapforfun = {
								order = 2,
								type = "description",
								name = "",
								},
								afksoundtype = {
								order = 2,
								type = 'group',
								name = 'Select a type of music',
									args = {
										yetanothergap = {
										order = 2,
										type = "description",
										name = "",
										},
										racial = {
											type = 'toggle',
											name = 'Racial Music',
											order = 5,
											disabled = function() return not E.db.ElvUI_EltreumUI.afkmusic.enable or E.db.ElvUI_EltreumUI.afkmusic.playerclass end,
											get = function(info) return E.db.ElvUI_EltreumUI.afkmusic.racial end,
											set = function(info, value) E.db.ElvUI_EltreumUI.afkmusic.racial = value end,
										},
										playerclass = {
											type = 'toggle',
											name = 'Class Music',
											order = 5,
											disabled = function() return not E.db.ElvUI_EltreumUI.afkmusic.enable or E.db.ElvUI_EltreumUI.afkmusic.racial end,
											get = function(info) return E.db.ElvUI_EltreumUI.afkmusic.playerclass end,
											set = function(info, value) E.db.ElvUI_EltreumUI.afkmusic.playerclass = value end,
										},
									}
								}
							}
						},
					},
				},
				weakauras = {
					type = 'group',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\weakauras',
					name = 'WeakAuras',
					order = 95,
					args = {
						header1 = {
							order = 1,
							type = 'header',
							name = 'WeakAuras',
						},
						explain1 = {
							order = 2,
							type = "description",
							name = "You can set your Weakauras to anchor to custom locations making it easier to move them",
						},
						explain2 = {
							order = 3,
							type = "description",
							name = "In order to use this feature, simply go to your Weakaura, and go to its Group options, scroll down to Position Settings and set the Anchored To Select Frame, then type either |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r to anchor the weakaura to the preset location",
						},
						explain3 = {
							order = 4,
							type = "description",
							name = "Setting |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r as the anchor will move them to the locations, keep in mind you might need to change the X and Y offset of the weakaura to zero",
						},
						explainer1 = {
							order = 5,
							type = "group",
							name = 'WeakAuras',
							inline = true,
							args = {
								addaspaceher544e = {
									order = 86,
									type = "description",
									name = '',
								},
								explainer7 = {
									order = 87,
									type = "description",
									name = 'My WeakAuras are available here, but are not focused on one class. Consider them more like upcoming features.',
								},
								addaspacehere = {
									order = 88,
									type = "description",
									name = '',
								},
								wago = {
									order = 89,
									type = 'input',
									width = 'normal',
									name = 'All weakauras',
									get = function() return 'wago.io/p/Eltreum' end,
								},
								addsomegap = {
										order = 90,
										type = "description",
										name = "",
								},
								nameplatepowerbar = {
									order = 91,
									type = 'input',
									width = 'full',
									name = 'Nameplate Power Bar',
									get = function() return 'https://wago.io/MHkYMit7S' end,
								},
								addsomegap2 = {
										order = 92,
										type = "description",
										name = "",
								},
								bossnameplate = {
									order = 93,
									type = 'input',
									width = 'full',
									name = 'Boss nameplate at base',
									get = function() return 'https://wago.io/M7yrCgMnE' end,
								},
								addsomegap3 = {
										order = 94,
										type = "description",
										name = "",
								},
								executenameplate = {
									order = 95,
									type = 'input',
									width = 'full',
									name = 'Executes next to nameplates',
									get = function() return 'https://wago.io/afJKwFwAX' end,
								},
							},
						},
					},
				},
				discord = {
					type = 'group',
					name = 'Discord',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\discord',
					order = 96,
					args = {
						logodiscord = {
							type = 'description',
							name = "",
							order = 1,
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\disc', 256, 128 end,
						},
						explainer8 = {
							order = 2,
							type = "description",
							name = 'Join the Discord if you have any questions or issues',
						},
						addaspacehere4 = {
							order = 3,
							type = "description",
							name = '',
						},
						discordinvitelink = {
							order = 19,
							type = 'input',
							width = 'full',
							name = '',
							get = function() return 'https://discord.gg/cXfA56gmYW' end,
						},
					},
				},
				changelog = {
					type = 'group',
					name = 'Changelog',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\changelog',
					order = 97,
					args = {
						changelogchoice = {
						     order = 18,
						     type = 'select',
						     width = "double",
						     style = 'dropdown',
						     name = "Select a version:",
						     desc = 'Choose a version to see its changelog',
						     values = {
								["2.0.0"] = "2.0.0",
								["1.0.0"] = "1.0.0",
							},
						     get = function() return E.db.ElvUI_EltreumUI.changelog.version end,
						     set = function(self,value) E.db.ElvUI_EltreumUI.changelog.version = value end,
						},
						changelogtext = {
							order = 19,
							type = 'description',
							width = 'full',
							name = function() return ElvUI_EltreumUI:Changelog() end,
						},
					},
				},
				credits = {
					type = 'group',
					name = 'Credits',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\credits',
					order = 97,
					args = {
						author = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Author',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = AUTHORS_STRING,
								},
							},
						},
						thankyou = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Credits and Thank yous',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = THANKYOU_STRING,
								},
							},
						},
						licensewarning = {
							order = 99,
							type = 'group',
							inline = true,
							name = 'License',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = 'Icons8 (www.icons8.com) for some of the icons. List in license.txt\nLootText is licensed under GNU GPLv3 and is a fork of SLoTe from xavjer\nCursor is licended under GNU GPLv3 and is a fork of CastCursor by michaelsp',
								},
							},
						},
					},
				},
				support = {
					type = 'group',
					name = 'Support',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\support',
					order = 98,
					args = {
						gitlink = {
							order = 1,
							type = 'input',
							width = 'full',
							name = 'New commits, basically a preview of fixes or upcoming features',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/commits/main' end,
						},
						issues = {
							order = 2,
							type = 'input',
							width = 'full',
							name = 'Report issues and problems here:',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/issues' end,
						},
						tukui = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'Addon on tukui:',
							get = function() return 'https://www.tukui.org/addons.php?id=209' end,
						},
						curse = {
							order = 4,
							type = 'input',
							width = 'full',
							name = 'Addon on curse:',
							get = function() return 'https://www.curseforge.com/wow/addons/elvui-eltruism' end,
						},
					},
				},
			},
		}
		for _, func in pairs(ElvUI_EltreumUI.Config) do
			func()
		end
	end
end

-- EltreumUI ingame options Classic
if ElvUI_EltreumUI.Classic then
	function ElvUI_EltreumUI:Configtable()
		-- Add EltreumUI version on top of the ElvUI config
		E.Options.name = E.Options.name .. " + " .. ElvUI_EltreumUI.Name .. format(" |cffffffff%s|r", ElvUI_EltreumUI.Version)
		E.Options.args.ElvUI_EltreumUI = {
			order = 6,
			type = 'group',
			name = ElvUI_EltreumUI.Name,
			args = {
				logo = {
					type = 'description',
					name = "",
					order = 6,
					image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\logohq', 320, 80 end,
				},
				installer = {
					order = 7,
					type = 'group',
					name = 'Installer',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\install',
					args = {
						install = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Reinstall the plugin to reset settings',
							args = {
								pluginagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() E:GetModule('PluginInstaller'):Queue(ElvUI_EltreumUI.InstallerData) E:ToggleOptionsUI() end,
								},
							},
						},
						resetnameplates = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Reset nameplates to Eltruism settings',
							args = {
								nameplateagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() ElvUI_EltreumUI:SetupNamePlates('ElvUI') ElvUI_EltreumUI:ResolutionOutline() end,
								},
							},
						},
					},
				},
				afk = {
					type = 'group',
					name = 'A.F.K',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\afk',
					order = 85,
					args = {
						afkmusic = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music while you are AFK',
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.afkmusic.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.afkmusic.enable = value end,
								},
							},
						},
					},
				},
				cursor = {
					type = 'group',
					name = 'Cursor',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cursor',
					order = 85,
					args = {
						cursorsize = {
							order = 1,
							type = 'group',
							inline = true,
							name= 'Change the size of the World of Warcraft Cursor',
							width = 'full',
							args = {
								setsize = {
									order = 7,
									type = 'select',
									name = 'Select a size',
									desc = 'Choose this size',
									values = {
										['-1'] = 'Autodetect',
										['0'] = '32x32',
										['1'] = '48x48',
										['2'] = '64x64',
										['3'] = '128x128',
									},
					                style = 'radio',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.size end,
  									set = function(info,value) ElvUI_EltreumUI:CursorSize(value) end,
								},
							},
						},
						header1 = {
							order = 2,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						cursorsettings = {
							order = 3,
							type = 'group',
							inline = true,
							name = 'Add a gcd and cast ring to the cursor',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable cursors for Casts, GCD and Combat',
									desc = 'Add a rings around the mouse cursor for GCD, casts and combat',
									width = 'full',
									confirm = true,
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.enable = value end,
								},
								header1 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ringtexture = {
									order = 7,
									type = 'group',
									inline = true,
									name = 'Choose a type of cursor by clicking it',
									width = 'full',
									args = {
										currentring = {
											order = 0,
											type = 'description',
											name = function() return 'Currently selected cursor: '..ElvUI_EltreumUI:CurrentTypeofCursor() end,
											desc = ''
										},
										showring1 = {
											order = 1,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1',
											name = 'Type 1',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring2 = {
											order = 2,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2',
											name = 'Type 2',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring3 = {
											order = 3,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3',
											name = 'Type 3',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring4 = {
											order = 4,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4',
											name = 'Type 4',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring5 = {
											order = 5,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5',
											name = 'Type 5',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring6 = {
											order = 6,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6',
											name = 'Type 6',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring7 = {
											order = 7,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7',
											name = 'Type 7',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring8 = {
											order = 8,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8',
											name = 'Type 8',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring9 = {
											order = 9,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9',
											name = 'Type 9',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring10 = {
											order = 10,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10',
											name = 'Type 10',
											desc = 'The Cursor will use this type as its texture',
											confirm = true,
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										nicegap17 = {
											order = 11,
											type = "description",
											name = "Cursor Colors |cffff0000(Requires a Reload)|r",
											width = 'full',
										},
										header12 = {
											order = 11,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										castclasscolor = {
											type = 'toggle',
											name = 'Class Colored Casts',
											order = 12,
											desc = 'Use Class Colors for Cast',
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorcast = {
											order = 13,
											type = 'color',
											name = "Custom Color Cast",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											get = function()
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												local d = P.ElvUI_EltreumUI.cursorcast
												return cursorcast.r, cursorcast.g, cursorcast.b, cursorcast.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												cursorcast.r, cursorcast.g, cursorcast.b = r, g, b
											end,
										},
										nicegap1 = {
											order = 14,
											type = "description",
											name = "",
											width = 'full',
										},
										gcdclasscolor = {
											type = 'toggle',
											name = 'Class Colored GCD',
											order = 14,
											desc = 'Use Class Colors for GCD',
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorgcd = {
											order = 15,
											type = 'color',
											name = "Custom Color GCD",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											get = function()
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												local d = P.ElvUI_EltreumUI.cursorgcd
												return cursorgcd.r, cursorgcd.g, cursorgcd.b, cursorgcd.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												cursorgcd.r, cursorgcd.g, cursorgcd.b = r, g, b
											end,
										},
										nicegap2 = {
											order = 16,
											type = "description",
											name = "",
											width = 'full',
										},
										cursorcursorclasscolor = {
											type = 'toggle',
											name = 'Class Colored Combat',
											order = 16,
											desc = 'Use Class Colors for Cursor',
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										cursorcursorcolor = {
											order = 17,
											type = 'color',
											name = "Custom Color Combat",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											get = function()
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												local d = P.ElvUI_EltreumUI.cursorcursor
												return cursorcursor.r, cursorcursor.g, cursorcursor.b, cursorcursor.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												cursorcursor.r, cursorcursor.g, cursorcursor.b = r, g, b
											end,
										},
										header1 = {
											order = 18,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										nicegap3 = {
											order = 18,
											type = "description",
											name = "Cursor Settings |cffff0000(Requires a reload)|r",
											width = 'full',
										},
										castradius = {
											type = 'range',
											name = 'Cast Radius (Default: 25)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.radius = value end,
										},
										castthickness = {
											type = 'range',
											name = 'Cast Thickness (Default: 5)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.thickness = value end,
										},
										gcdradius = {
											type = 'range',
											name = 'GCD Radius (Default: 20)',
											desc = 'Set the radius of the gcd cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.radius = value end,
										},
										gcdthickness = {
											type = 'range',
											name = 'GCD Thickness (Default: 5)',
											desc = 'Set the thickness of the gcd cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.thickness = value end,
										},
										cursorcursorradius = {
											type = 'range',
											name = 'Combat Cursor Radius (Default: 15)',
											desc = 'Set the radius of the combat cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.radius = value end,
										},
										cursorcursorthickness = {
											type = 'range',
											name = 'Combat Cursor Thickness (Default: 5)',
											desc = 'Set the thickness of the combat cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.thickness = value end,
										},
									},
								},
							},
						},

					},
				},
				aurafilters = {
					type = 'group',
					name = 'Aura Filters',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\aurafilter',
					order = 85,
					args = {
						headerline1 = {
							order = 11,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						auradesc = {
							order = 2,
							type = 'header',
							name = 'Aura Filters',
						},
						listofauras = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'For Shadowlands, import aura filters by copying the code below and going into Profiles > Import Profile.',
							get = function() return '' end,
						},
						header24 = {
							order = 4,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc = {
							order = 5,
							type = 'description',
							name = 'Setup Aura Filters to show all',
						},
						playerallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Buffs',
							desc = 'Set filters to show more buffs on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Everything') end,
						},
						playeralldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Debuffs',
							desc = 'Set filters to show more debuffs on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Everything') end,
						},
						targetalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Debuffs',
							desc = 'Set filters to show more debuffs on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Everything') end,
						},
						targetallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Buffs',
							desc = 'Set filters to show more buffs on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Everything') end,
						},
						focusallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Buffs',
							desc = 'Set filters to show more buffs on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Everything') end,
						},
						focusalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Debuffs',
							desc = 'Set filters to show more debuffs on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Everything') end,
						},
						bossallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Buffs',
							desc = 'Set filters to show more buffs on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Everything') end,
						},
						bossalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Debuffs',
							desc = 'Set filters to show more debuffs on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Everything') end,
						},
						nameplateallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Buffs',
							desc = 'Set filters to show more buffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Everything') end,
						},
						nameplatealldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Debuffs',
							desc = 'Set filters to show more debuffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Everything') end,
						},
						header25 = {
							order = 7,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc2 = {
							order = 8,
							type = 'description',
							name = 'Setup Aura Filters to be Eltruism/ElvUI defaults',
						},
						playerEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Eltruism') end,
						},
						playerEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Eltruism') end,
						},
						targetEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Eltruism') end,
						},
						targetEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Eltruism') end,
						},
						focusEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Eltruism') end,
						},
						focusEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Eltruism') end,
						},
						bossEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Eltruism') end,
						},
						bossEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Eltruism') end,
						},
						nameplateEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Eltruism') end,
						},
						nameplateEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Eltruism') end,
						},
					},
				},
				profiles = {
					type = 'group',
					name = 'Addons',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\addon',
					order = 85,
					args = {
						header1 = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						plugins = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'ElvUI Plugins',
							args = {
								addonskins = {
									order = 1,
									type = 'execute',
									name = '|cff16C3F2AddOn|r|cFFFFFFFFSkins|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupAS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								projectazilroka = {
									order = 2,
									type = 'execute',
									name = '|cFF16C3F2Project|r|cFFFFFFFFAzilroka|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupPA() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header2 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						bossmods = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'BossMods Profiles',
							args = {
								bigwigs = {
									order = 1,
									type = 'execute',
									name = 'BigWigs',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupBW() E:StaticPopup_Show('CONFIG_RL') end,
								},
								dbm = {
									order = 2,
									type = 'execute',
									name = 'DBM',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDBM() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						addons = {
							order = 4,
							type = 'group',
							inline = true,
							name = 'Addon Profiles',
							args = {
								dynamiccam = {
									order = 1,
									type = 'execute',
									name = 'Dynamic Cam',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDynamicCam() E:StaticPopup_Show('CONFIG_RL') end,
								},
								questie = {
									order = 9,
									type = 'execute',
									name = 'Questie',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupQuestie() E:StaticPopup_Show('CONFIG_RL') end,
								},
								immersion = {
									order = 2,
									type = 'execute',
									name = 'Immersion',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupImmersion() E:StaticPopup_Show('CONFIG_RL') end,
								},
								nameplatesct = {
									order = 5,
									type = 'execute',
									name = 'NameplateSCT',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupNameplateSCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								details = {
									order = 7,
									type = 'execute',
									name = 'Details',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDT() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				combatmusic = {
					type = 'group',
					name = 'Combat Music',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
					order = 85,
					args = {
						moremusicsettings = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music during combat',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable music during combat',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								instancemusic = {
									order = 2,
									type = 'toggle',
									name = 'Disable in Instances',
									desc = 'Disable music during combat in instances',
									width = 'full',
									disabled = function() return not E.private.ElvUI_EltreumUI.combatmusic.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.disableinstance end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.disableinstance = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								pathtofile = {
									order = 6,
									type = 'group',
									inline = true,
									name = "Path to file",
									args = {
										howtomusic = {
										order = 2,
										type = "description",
										name = "Example: Interface\\Addons\\mymusic.mp3",
										},
										somegap = {
											order = 3,
											type = "description",
											name = "",
										},
										soundpath = {
											order = 6,
											icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
											type = 'input',
											name = '',
											desc = '',
											width = 'full',
											get = function() return E.private.ElvUI_EltreumUI.combatmusic.musicfile end,
											set = function(_, value) E.private.ElvUI_EltreumUI.combatmusic.musicfile = value E:StaticPopup_Show('PRIVATE_RL') end,
										}
									}
								},
							},
						},
					},
				},
				cvars = {
					order = 85,
					type = 'group',
					name = 'CVars',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cvar',
					args = {
						setup = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup CVars',
							args = {
								generalVars = {
									order = 1,
									type = 'execute',
									name = 'General CVars',
									func = function() ElvUI_EltreumUI:SetupCVars() ElvUI_EltreumUI:NameplateCVars() end,
									confirm = true,
								},
							},
						},
						generalDesc = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'It will set these CVars:',
							args = {
								cvars = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = '- autoLootDefault 1\n- ShowClassColorInFriendlyNameplate 1\n- removeChatDelay 1\n- autoQuestWatch 1\n- cameraDistanceMaxZoomFactor 2.6\n- nameplateLargerScale 1.2\n- nameplateMaxDistance 60\n- nameplateMinAlpha 1\n- nameplateMinScale 1\n- nameplateMotion 1\n- nameplateOccludedAlphaMult 0\n- nameplateOverlapH 0.8\n- nameplateOverlapV 1.1\n- nameplateSelectedScale 1\n- nameplateSelfAlpha 1\n- nameplateShowFriendlyMinions 0\n- nameplateOtherBottomInset 0.02\n- nameplateOtherTopInset 0.1\n- nameplateTargetRadialPosition 1\n- nameplateTargetBehindMaxDistance 40\n- UnitNameEnemyGuardianName 0\n- UnitNameEnemyMinionName 0\n- UnitNameEnemyPetName 0\n- UnitNameEnemyPlayerName 1\n- UnitNameEnemyTotemName 1\n- UnitNameNPC 1',
								},
							},
						},
					},
				},
				partyraidsettings = {
					type = 'group',
					name = 'Party/Raid',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\party',
					order = 85,
					args = {
						partyraiddeath = {
							type = 'group',
							name = 'Play a sound when someone dies in Party or Raid',
							guiInline = true,
							order = 10,
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.partyraiddeath.enable = value end,
								},
								addagaphere = {
								order = 2,
								type = "description",
								name = "",
								},
								addanothergapforfun = {
								order = 2,
								type = "description",
								name = "",
								},
								soundselection = {
								order = 2,
								type = 'group',
								name = 'Select a Sound',
									args = {
										yetanothergap = {
										order = 2,
										type = "description",
										name = "",
										},
										bruh = {
											type = 'toggle',
											name = 'Bruh',
											order = 5,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.bruh end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.bruh = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\bruh.mp3", "Dialog") end,
										},
										robloxoof = {
											type = 'toggle',
											name = 'Oof',
											order = 6,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\oof.mp3", "Dialog") end,
										},
										shame = {
											type = 'toggle',
											name = 'Shame',
											order = 13,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.shame end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.shame = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\shame.mp3", "Dialog") end,
										},
										wowsound = {
											type = 'toggle',
											name = 'Wow',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.wow end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.wow = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\wow.mp3", "Dialog") end,
										},
										mariosound = {
											type = 'toggle',
											name = 'Mario',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.mario = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\mariodeath.mp3", "Dialog") end,
										},
										ionsound = {
											type = 'toggle',
											name = 'Ion',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.ion = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\ionskillissue.mp3", "Dialog") end,
										},
									},
								},
							},
						},
						headergaphere = {
									order = 11,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						grouplayout = {
							type = 'group',
							name = 'Alternative unitframe layouts',
							guiInline = true,
							order = 12,
							args = {
								layoutdescription = {
										order = 1,
										type = 'description',
										fontSize = 'medium',
										name = 'DPS/Tank layouts were created with pure dps classes in mind, if you play a class with more raid cooldowns like a Shaman, Druid or Paladin you might want to use the alternative layout in order to make it easier for you to use your cooldowns on the members of your group',
								},
								alternativegroups = {
									order = 2,
									type = 'execute',
									name = 'Alternative Layout',
									func = function() ElvUI_EltreumUI:AlternativeGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								originalgroups = {
									order = 3,
									type = 'execute',
									name = 'Original Layout',
									func = function() ElvUI_EltreumUI:OriginalGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				media = {
					type = 'group',
					name = 'Media',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\media',
					order = 85,
					args = {
						mediaoptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup Media',
							width = 'full',
							args = {
								private = {
									order = 1,
									type = 'execute',
									name = 'Reset all Media',
									desc = 'Reset Fonts, Textures, Skins to Eltreum UI defaults.',
									width = 'full',
									func = function() ElvUI_EltreumUI:SetupPrivate() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header1 = {
								order = 3,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontdescription= {
								order = 3,
								type = "description",
								name = "Set the fonts used in Eltruism. Kimberley is the default font",
								},
								kimberley = {
									order = 4,
									type = 'execute',
									name = 'Kimberley',
									desc = 'This will set all ElvUI fonts as Kimberley',
									func = function() ElvUI_EltreumUI:SetupFontsKimberley() E:StaggeredUpdateAll(nil, true)  end,
									confirm = true,
								},
								exo2 = {
									order = 5,
									type = 'execute',
									name = 'Exo2',
									desc = 'This will set all ElvUI fonts as Exo2',
									func = function() ElvUI_EltreumUI:SetupFontsExo2() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforfonts = {
								order = 6,
								type = "description",
								name = "",
								--width = "full",
								},
								gotham = {
									order = 7,
									type = 'execute',
									name = 'Gotham',
									desc = 'This will set all ElvUI fonts as Gotham',
									func = function() ElvUI_EltreumUI:SetupFontsGotham() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},

								roboto = {
									order = 7,
									type = 'execute',
									name = 'Roboto',
									desc = 'This will set all ElvUI fonts as Roboto',
									func = function() ElvUI_EltreumUI:SetupFontsRoboto() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforcustom = {
								order = 8,
								type = "description",
								name = "",
								},
								sharedmediafont = {
								     order = 8,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Or choose a custom font",
								     desc = 'Choose a different font from the preselected ones',
								     values = AceGUIWidgetLSMlists.font,
								     get = function()
								          return E.db.ElvUI_EltreumUI.fonts.playerfont
								     end,
								     set = function(self,fontvalue)
								          E.db.ElvUI_EltreumUI.fonts.playerfont = fontvalue
								          ElvUI_EltreumUI:SetupCustomFont(fontvalue)
								     end,
								},
								addagaphereforoutlines = {
								order = 9,
								type = "description",
								name = "",
								},
								addagaphereagain = {
								order = 9,
								type = "description",
								name = "",
								},
								header3 = {
								order = 10,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontoutline = {
								order = 11,
								type = "description",
								name = "Set the Font Outlines everywhere. Use Default to return to Eltruism default settings",
								width = "full",
								},
								default = {
									order = 12,
									type = 'execute',
									name = 'Defaults',
									desc = 'This will set fonts to Eltruism defaults, recommended for 4K',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineDefault() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								none = {
									order = 12,
									type = 'execute',
									name = 'None',
									desc = 'This will set fonts to no outline',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineNone() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								outlinegap = {
								order = 13,
								type = "description",
								name = "",
								},
								outline = {
									order = 13,
									type = 'execute',
									name = 'Outline',
									desc = 'This will set fonts to use outline, recommended for 1440p and 1080p',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineOutline() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								thick = {
									order = 13,
									type = 'execute',
									name = 'Thick Outline',
									desc = 'This will set fonts to use thick outline, similar to Eltruism defaults',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineThick() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header4 = {
								order = 14,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								darklightmode = {
								order = 15,
								type = "description",
								name = "Change the look of frames to Dark or Light mode",
								width = "full",
								},
								dark = {
									order = 16,
									type = 'execute',
									name = 'Dark Mode',
									desc = 'This will set colors to black with class colors when losing health',
									func = function() ElvUI_EltreumUI:DarkMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								light = {
									order = 16,
									type = 'execute',
									name = 'Light Mode',
									desc = 'This will set colors to class based with black backgrounds when losing health',
									func = function() ElvUI_EltreumUI:LightMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								header5 = {
								order = 17,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								dynamicdatatext = {
								order = 18,
								type = "description",
								name = "Dynamic Datatext that changes according to class to show Ammo or Soul Shards when playing Hunter or Warlock",
								width = "full",
								},
								dynamicenable = {
									order = 19,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable the Dynamic Datatext',
									get = function(info) return E.db.ElvUI_EltreumUI.dynamicdatatext.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.dynamicdatatext.enable = value end,
								},
								header6 = {
									order = 20,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								tbctalentinfo = {
									order = 21,
									type = "description",
									name = "Expand the Talents to show the entire tree",
									width = "full",
								},
								tbctalents = {
									order = 22,
									type = 'toggle',
									name = 'Expanded Talents',
									desc = 'Expand Talents to cover the full tree',
									get = function(info) return E.db.ElvUI_EltreumUI.tbctalents.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.tbctalents.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				nameplates = {
					type = 'group',
					name = 'Nameplates',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\nameplate',
					order = 85,
					args = {
						header = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplateOptions = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Class Colored Nameplate Options',
							args = {
								classhover = {
									order = 1,
									type = 'toggle',
									name = 'Hover',
									desc = 'Change the color of the hover to be class colored',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow = value end,
								},
								classborder = {
									order = 2,
									type = 'toggle',
									name = 'Border',
									desc = 'Change the color of the border glow to be class bordered in nameplates',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate = value end,
								},
								classtexture = {
									order = 2,
									type = 'toggle',
									name = 'Target Texture',
									desc = 'Change the texture of the nameplate to be a class gradient',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture = value end,
								},
							},
						},
						addsomegap = {
								order = 3,
								type = "description",
								name = "",
						},
						header2 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						friendlynameplate = {
							order = 5,
							type = 'group',
							inline = true,
							name = 'Control how Nameplates behave',
							args = {
								hidehealthinsideinstances = {
									order = 1,
									type = 'toggle',
									name = 'Show Friendly Nameplates but Hide Healthbar',
									desc = 'Show Friendly Nameplates but Hide Healthbar',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								nofriendlyinstances = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates inside Instances',
									desc = 'Hide Friendly Nameplates inside Instances',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								dontshowfriendlyatall = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates everywhere',
									desc = 'Hide Friendly Nameplates everywhere',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 6,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						verywidenameplate = {
							order = 7,
							type = 'group',
							inline = true,
							name = 'Wide nameplate debuffs and buffs',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Make Buffs and Debuffs Wide on Nameplates',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.widenameplate.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.enable = value end,
								},
							}
						},
						header4 = {
									order = 8,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						dynamiclevel = {
							order = 9,
							type = 'group',
							inline = true,
							name = 'Enemy Nameplate Level',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Hide level on enemy nameplates when you are max level',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.nameplatelevel.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.nameplatelevel.enable = value end,
								},
							}
						},
						header5 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplatepower = {
							order = 11,
							type = 'group',
							inline = true,
							name = 'Nameplate Power Bar',
							args = {
								enablepowerbar = {
									order = 1,
									type = 'toggle',
									name = 'Enable Nameplate Power Bar',
									desc = 'Enable an extra Power Bar on Nameplates for missing powers',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								enableadjust = {
									order = 2,
									type = 'toggle',
									name = 'Enable Autoadjusting Buffs/Debuffs',
									desc = 'Enable autoadjusting the position of Buffs/Debuffs',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.adjust end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.adjust = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								addagapforspace4 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace5 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace6 = {
									order = 3,
									type = "description",
									name = "",
								},
								describethis = {
									order = 4,
									type = "description",
									name = "Select the power types to be displayed:",
								},
								addagapforspace7 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace8 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace9 = {
									order = 5,
									type = "description",
									name = "",
								},
								mana = {
									type = 'toggle',
									name = 'Mana',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.mana end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.mana = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								rage = {
									type = 'toggle',
									name = 'Rage',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.rage end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.rage = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								energy = {
									type = 'toggle',
									name = 'Energy',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.energy end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.energy = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
							}
						},
					},
				},
				loottext = {
					type = 'group',
					name = 'Loot',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\loot',
					order = 85,
					args = {
						lootsetting = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Show a floating loot text',
							args = {
								desc = {
									type = 'toggle',
									name = 'Enable',
									desc = 'Toggle On and Off',
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.loottext.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								addagaphere = {
									order = 2,
									type = "description",
									name = "",
								},
								addanothergapforfun = {
									order = 2,
									type = "description",
									name = "",
								},
								suboptions = {
									order = 2,
									type = 'group',
									name = 'Choose which types of text:',
										args = {
											yetanothergap = {
											order = 2,
											type = "description",
											name = "",
											},
											honor = {
												type = 'toggle',
												name = 'Honor',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.honor end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.honor = value end,
											},
											currency = {
												type = 'toggle',
												name = 'Currency',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.currency end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.currency = value end,
											},
											pet = {
												type = 'toggle',
												name = 'Pets',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.pet end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.pet = value end,
											},
										}
								},
								header1 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscale = {
									type = 'range',
									name = 'Change the scale of LootText',
									desc = 'Set the size of LootText',
									order = 4,
									min = .1,
									max = 1.5,
									step = .05,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.scale end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.scale = value end,
								},
								addgaptobenice = {
									order = 5,
									type = "description",
									name = "",
								},
								lootscalereset = {
									type = 'execute',
									name = 'Reset Scale',
									desc = 'Return LootText to its default scale',
									order = 9,
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									func = function() E.db.ElvUI_EltreumUI.loottext.scale = 0.65 end,
								},
								header2 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootstrata = {
									type = 'select',
									name = 'Change the strata of the Loot Text',
									desc = 'Set the level that LootText will be drawn to this',
									order = 11,
									values = {
					                    ['BACKGROUND'] = 'Background',
					                    ['LOW'] = 'Low',
					                    ['MEDIUM'] = 'Medium',
					                    ['HIGH'] = 'High',
					                    ['DIALOG'] = 'Dialog',
					                },
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.loottext.strata end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.strata = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header99 = {
									order = 12,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscalex = {
									type = 'range',
									name = 'Change the Horizontal Position of LootText (Default = 0)',
									desc = 'Set X offset',
									order = 13,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.xOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.xOffset = value end,
									--confirm = true,
								},
								lootscaley = {
									type = 'range',
									name = 'Change the Vertical Position of LootText (Default = 200)',
									desc = 'Set Y offset',
									order = 14,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.yOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.yOffset = value end,
									--confirm = true,
								},
								header98 = {
									order = 15,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customfontlootgap = {
									type = 'description',
									name = '',
									width = 'full',
									order = 16,
								},
								customfontlootdesc = {
									type = 'description',
									name = 'Change the font of LootText to be that the ElvUI Default Font found in General',
									width = 'full',
									order = 17,
								},
								customfontloot = {
									type = 'toggle',
									name = 'Use ElvUI General Font',
									desc = 'Change the font of LootText',
									order = 18,
									get = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.fontsetting = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								--[[loottextlsmfont = {
								     order = 17,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Choose a Custom Font",
								     desc = 'Choose one of the fonts available111:',
								     values = AceGUIWidgetLSMlists.font,
								     --disabled = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting == false end,
								     get = function() return E.db.ElvUI_EltreumUI.loottext.font end,
								     set = function(self,fontvalue) E.db.ElvUI_EltreumUI.loottext.font = fontvalue end,
								},]]--
							},
						},
					},
				},
				stealth = {
					type = 'group',
					name = 'Stealth Vignette',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\stealth',
					order = 85,
					args = {
						stealthOptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Toggle a Stealth Effect',
							args = {
								stealthframeoptions = {
									order = 1,
									type = 'toggle',
									name = 'Add a vignette effect while in stealth',
									width = 'full',
									desc = 'Turn the effect on',
									get = function(info) return E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect end,
									set = function(info, value) E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect = value end,
								},
							},
						},
					},
				},
				weakauras = {
					type = 'group',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\weakauras',
					name = 'WeakAuras',
					order = 95,
					args = {
						header1 = {
							order = 1,
							type = 'header',
							name = 'WeakAuras',
						},
						explain1 = {
							order = 2,
							type = "description",
							name = "You can set your Weakauras to anchor to custom locations making it easier to move them",
						},
						explain2 = {
							order = 3,
							type = "description",
							name = "In order to use this feature, simply go to your Weakaura, and go to its Group options, scroll down to Position Settings and set the Anchored To Select Frame, then type either |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r to anchor the weakaura to the preset location",
						},
						explain3 = {
							order = 4,
							type = "description",
							name = "Setting |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r as the anchor will move them to the locations, keep in mind you might need to change the X and Y offset of the weakaura to zero",
						},
						explainer1 = {
							order = 5,
							type = "group",
							name = 'WeakAuras',
							inline = true,
							args = {
								addaspaceher544e = {
									order = 86,
									type = "description",
									name = '',
								},
								explainer7 = {
									order = 87,
									type = "description",
									name = 'My WeakAuras are available here, but are not focused on one class. Consider them more like upcoming features.',
								},
								addaspacehere = {
									order = 88,
									type = "description",
									name = '',
								},
								wago = {
									order = 89,
									type = 'input',
									width = 'normal',
									name = 'All weakauras',
									get = function() return 'wago.io/p/Eltreum' end,
								},
								addsomegap = {
										order = 90,
										type = "description",
										name = "",
								},
								nameplatepowerbar = {
									order = 91,
									type = 'input',
									width = 'full',
									name = 'Nameplate Power Bar',
									get = function() return 'https://wago.io/HJ7YjUVgo' end,
								},
								addsomegap2 = {
										order = 92,
										type = "description",
										name = "",
								},
								bossnameplate = {
									order = 93,
									type = 'input',
									width = 'full',
									name = 'Boss nameplate at base',
									get = function() return 'https://wago.io/M7yrCgMnE' end,
								},
								addsomegap3 = {
										order = 94,
										type = "description",
										name = "",
								},
								executenameplate = {
									order = 95,
									type = 'input',
									width = 'full',
									name = 'Executes next to nameplates',
									get = function() return 'https://wago.io/afJKwFwAX' end,
								},
							},
						},
					},
				},
				discord = {
					type = 'group',
					name = 'Discord',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\discord',
					order = 96,
					args = {
						logodiscord = {
							type = 'description',
							name = "",
							order = 1,
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\disc', 256, 128 end,
						},
						explainer8 = {
							order = 2,
							type = "description",
							name = 'Join the Discord if you have any questions or issues',
						},
						addaspacehere4 = {
							order = 3,
							type = "description",
							name = '',
						},
						discordinvitelink = {
							order = 19,
							type = 'input',
							width = 'full',
							name = '',
							get = function() return 'https://discord.gg/cXfA56gmYW' end,
						},
					},
				},
				changelog = {
					type = 'group',
					name = 'Changelog',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\changelog',
					order = 97,
					args = {
						changelogchoice = {
						     order = 18,
						     type = 'select',
						     width = "double",
						     style = 'dropdown',
						     name = "Select a version:",
						     desc = 'Choose a version to see its changelog',
						     values = {
								["2.0.0"] = "2.0.0",
								["1.0.0"] = "1.0.0",
							},
						     get = function() return E.db.ElvUI_EltreumUI.changelog.version end,
						     set = function(self,value) E.db.ElvUI_EltreumUI.changelog.version = value end,
						},
						changelogtext = {
							order = 19,
							type = 'description',
							width = 'full',
							name = function() return ElvUI_EltreumUI:Changelog() end,
						},
					},
				},
				credits = {
					type = 'group',
					name = 'Credits',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\credits',
					order = 97,
					args = {
						author = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Author',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = AUTHORS_STRING,
								},
							},
						},
						thankyou = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Credits and Thank yous',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = THANKYOU_STRING,
								},
							},
						},
						licensewarning = {
							order = 99,
							type = 'group',
							inline = true,
							name = 'License',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = 'Icons8 (www.icons8.com) for some of the icons. List in license.txt\nLootText is licensed under GNU GPLv3 and is a fork of SLoTe from xavjer\nCursor is licended under GNU GPLv3 and is a fork of CastCursor by michaelsp',
								},
							},
						},
					},
				},
				support = {
					type = 'group',
					name = 'Support',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\support',
					order = 98,
					args = {
						gitlink = {
							order = 1,
							type = 'input',
							width = 'full',
							name = 'New commits, basically a preview of fixes or upcoming features',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/commits/main' end,
						},
						issues = {
							order = 2,
							type = 'input',
							width = 'full',
							name = 'Report issues and problems here:',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/issues' end,
						},
						tukui = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'Addon on tukui:',
							get = function() return 'https://www.tukui.org/addons.php?id=49' end,
						},
						curse = {
							order = 4,
							type = 'input',
							width = 'full',
							name = 'Addon on curse:',
							get = function() return 'https://www.curseforge.com/wow/addons/elvui-eltruism' end,
						},
					},
				},
			},
		}

		for _, func in pairs(ElvUI_EltreumUI.Config) do
			func()
		end
	end
end

-- EltreumUI ingame options TBC
if ElvUI_EltreumUI.TBC then
	function ElvUI_EltreumUI:Configtable()
		-- Add EltreumUI version on top of the ElvUI config
		E.Options.name = E.Options.name .. " + " .. ElvUI_EltreumUI.Name .. format(" |cffffffff%s|r", ElvUI_EltreumUI.Version)
		E.Options.args.ElvUI_EltreumUI = {
			order = 6,
			type = 'group',
			name = ElvUI_EltreumUI.Name,
			args = {
				logo = {
					type = 'description',
					name = "",
					order = 6,
					image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\logohq', 320, 80 end,
				},
				installer = {
					order = 7,
					type = 'group',
					name = 'Installer',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\install',
					args = {
						install = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Reinstall the plugin to reset settings',
							args = {
								pluginagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() E:GetModule('PluginInstaller'):Queue(ElvUI_EltreumUI.InstallerData) E:ToggleOptionsUI() end,
								},
							},
						},
						resetnameplates = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Reset nameplates to Eltruism settings',
							args = {
								nameplateagain = {
									order = 1,
									type = 'execute',
									name = 'Install',
									func = function() ElvUI_EltreumUI:SetupNamePlates('ElvUI') ElvUI_EltreumUI:ResolutionOutline() end,
								},
							},
						},
					},
				},
				afk = {
					type = 'group',
					name = 'A.F.K',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\afk',
					order = 85,
					args = {
						afkmusic = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music while you are AFK',
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.afkmusic.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.afkmusic.enable = value end,
								},
							},
						},
					},
				},
				cursor = {
					type = 'group',
					name = 'Cursor',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cursor',
					order = 85,
					args = {
						cursorsize = {
							order = 1,
							type = 'group',
							inline = true,
							name= 'Change the size of the World of Warcraft Cursor',
							width = 'full',
							args = {
								setsize = {
									order = 7,
									type = 'select',
									name = 'Select a size',
									desc = 'Choose this size',
									values = {
										['-1'] = 'Autodetect',
										['0'] = '32x32',
										['1'] = '48x48',
										['2'] = '64x64',
										['3'] = '128x128',
									},
					                style = 'radio',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.size end,
  									set = function(info,value) ElvUI_EltreumUI:CursorSize(value) end,
								},
							},
						},
						header1 = {
							order = 2,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						cursorsettings = {
							order = 3,
							type = 'group',
							inline = true,
							name = 'Add a gcd and cast ring to the cursor',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable cursors for Casts, GCD and Combat',
									desc = 'Add a rings around the mouse cursor for GCD, casts and combat',
									width = 'full',
									confirm = true,
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header1 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ringtexture = {
									order = 7,
									type = 'group',
									inline = true,
									name = 'Choose a type of cursor by clicking it',
									width = 'full',
									args = {
										currentring = {
											order = 0,
											type = 'description',
											name = function() return 'Currently selected cursor: '..ElvUI_EltreumUI:CurrentTypeofCursor() end,
											desc = ''
										},
										showring1 = {
											order = 1,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1',
											name = 'Type 1',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring2 = {
											order = 2,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2',
											name = 'Type 2',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring3 = {
											order = 3,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3',
											name = 'Type 3',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring4 = {
											order = 4,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4',
											name = 'Type 4',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring5 = {
											order = 5,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5',
											name = 'Type 5',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring6 = {
											order = 6,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6',
											name = 'Type 6',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring7 = {
											order = 7,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7',
											name = 'Type 7',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring8 = {
											order = 8,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8',
											name = 'Type 8',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring9 = {
											order = 9,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9',
											name = 'Type 9',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										showring10 = {
											order = 10,
											type = "execute",
											image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10',
											name = 'Type 10',
											desc = 'The Cursor will use this type as its texture',
											func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10.tga' E:StaticPopup_Show('CONFIG_RL') end,
										},
										nicegap17 = {
											order = 11,
											type = "description",
											name = "Cursor Colors |cffff0000(Requires a Reload)|r",
											width = 'full',
										},
										header12 = {
											order = 11,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										castclasscolor = {
											type = 'toggle',
											name = 'Class Colored Casts',
											order = 12,
											desc = 'Use Class Colors for Cast',
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorcast = {
											order = 13,
											type = 'color',
											name = "Custom Color Cast",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
											get = function()
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												local d = P.ElvUI_EltreumUI.cursorcast
												return cursorcast.r, cursorcast.g, cursorcast.b, cursorcast.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
												cursorcast.r, cursorcast.g, cursorcast.b = r, g, b
											end,
										},
										nicegap1 = {
											order = 14,
											type = "description",
											name = "",
											width = 'full',
										},
										gcdclasscolor = {
											type = 'toggle',
											name = 'Class Colored GCD',
											order = 14,
											desc = 'Use Class Colors for GCD',
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorgcd = {
											order = 15,
											type = 'color',
											name = "Custom Color GCD",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
											get = function()
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												local d = P.ElvUI_EltreumUI.cursorgcd
												return cursorgcd.r, cursorgcd.g, cursorgcd.b, cursorgcd.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
												cursorgcd.r, cursorgcd.g, cursorgcd.b = r, g, b
											end,
										},
										nicegap2 = {
											order = 16,
											type = "description",
											name = "",
											width = 'full',
										},
										cursorcursorclasscolor = {
											type = 'toggle',
											name = 'Class Colored Combat',
											order = 16,
											desc = 'Use Class Colors for Cursor',
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										cursorcursorcolor = {
											order = 17,
											type = 'color',
											name = "Custom Color Combat",
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
											get = function()
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												local d = P.ElvUI_EltreumUI.cursorcursor
												return cursorcursor.r, cursorcursor.g, cursorcursor.b, cursorcursor.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
												cursorcursor.r, cursorcursor.g, cursorcursor.b = r, g, b
											end,
										},
										header1 = {
											order = 18,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										nicegap3 = {
											order = 18,
											type = "description",
											name = "Cursor Settings |cffff0000(Requires a reload)|r",
											width = 'full',
										},
										castradius = {
											type = 'range',
											name = 'Cast Radius (Default: 25)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.radius = value end,
										},
										castthickness = {
											type = 'range',
											name = 'Cast Thickness (Default: 5)',
											desc = 'Set the radius of the cast cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcast.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.thickness = value end,
										},
										gcdradius = {
											type = 'range',
											name = 'GCD Radius (Default: 20)',
											desc = 'Set the radius of the gcd cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.radius = value end,
										},
										gcdthickness = {
											type = 'range',
											name = 'GCD Thickness (Default: 5)',
											desc = 'Set the thickness of the gcd cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorgcd.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.thickness = value end,
										},
										cursorcursorradius = {
											type = 'range',
											name = 'Combat Cursor Radius (Default: 15)',
											desc = 'Set the radius of the combat cursor',
											order = 19,
											min = 10,
											max = 50,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.radius end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.radius = value end,
										},
										cursorcursorthickness = {
											type = 'range',
											name = 'Combat Cursor Thickness (Default: 5)',
											desc = 'Set the thickness of the combat cursor',
											order = 19,
											min = 1,
											max = 10,
											step = 1,
											width = "full",
											get = function() return E.db.ElvUI_EltreumUI.cursorcursor.thickness end,
											set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.thickness = value end,
										},
									},
								},
							},
						},

					},
				},
				aurafilters = {
					type = 'group',
					name = 'Aura Filters',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\aurafilter',
					order = 85,
					args = {
						headerline1 = {
							order = 11,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						auradesc = {
							order = 2,
							type = 'header',
							name = 'Aura Filters',
						},
						listofauras = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'For Shadowlands, import aura filters by copying the code below and going into Profiles > Import Profile.',
							get = function() return '' end,
						},
						header24 = {
							order = 4,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc = {
							order = 5,
							type = 'description',
							name = 'Setup Aura Filters to show all',
						},
						playerallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Buffs',
							desc = 'Set filters to show more buffs on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Everything') end,
						},
						playeralldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Player Debuffs',
							desc = 'Set filters to show more debuffs on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Everything') end,
						},
						targetalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Debuffs',
							desc = 'Set filters to show more debuffs on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Everything') end,
						},
						targetallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Target Buffs',
							desc = 'Set filters to show more buffs on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Everything') end,
						},
						focusallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Buffs',
							desc = 'Set filters to show more buffs on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Everything') end,
						},
						focusalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Focus Debuffs',
							desc = 'Set filters to show more debuffs on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Everything') end,
						},
						bossallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Buffs',
							desc = 'Set filters to show more buffs on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Everything') end,
						},
						bossalldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Boss Debuffs',
							desc = 'Set filters to show more debuffs on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Everything') end,
						},
						nameplateallbuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Buffs',
							desc = 'Set filters to show more buffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Everything') end,
						},
						nameplatealldebuffs = {
							order = 6,
							type = 'execute',
							name = 'All Nameplate Debuffs',
							desc = 'Set filters to show more debuffs on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Everything') end,
						},
						header25 = {
							order = 7,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						aurasetupdesc2 = {
							order = 8,
							type = 'description',
							name = 'Setup Aura Filters to be Eltruism/ElvUI defaults',
						},
						playerEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Eltruism') end,
						},
						playerEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Player Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Player',
							func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Eltruism') end,
						},
						targetEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Eltruism') end,
						},
						targetEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Target Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Target',
							func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Eltruism') end,
						},
						focusEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Eltruism') end,
						},
						focusEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Focus Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Focus',
							func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Eltruism') end,
						},
						bossEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Boss',
							func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Eltruism') end,
						},
						bossEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Boss Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Bosss',
							func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Eltruism') end,
						},
						nameplateEltruismbuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Buffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Eltruism') end,
						},
						nameplateEltruismdebuffs = {
							order = 9,
							type = 'execute',
							name = 'Eltruism Nameplate Debuffs',
							desc = 'Set filters to be Eltruism/ElvUI defaults on Nameplates',
							func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Eltruism') end,
						},
					},
				},
				profiles = {
					type = 'group',
					name = 'Addons',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\addon',
					order = 85,
					args = {
						header1 = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						plugins = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'ElvUI Plugins',
							args = {
								addonskins = {
									order = 1,
									type = 'execute',
									name = '|cff16C3F2AddOn|r|cFFFFFFFFSkins|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupAS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								projectazilroka = {
									order = 2,
									type = 'execute',
									name = '|cFF16C3F2Project|r|cFFFFFFFFAzilroka|r',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupPA() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header2 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						bossmods = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'BossMods Profiles',
							args = {
								bigwigs = {
									order = 1,
									type = 'execute',
									name = 'BigWigs',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupBW() E:StaticPopup_Show('CONFIG_RL') end,
								},
								dbm = {
									order = 2,
									type = 'execute',
									name = 'DBM',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDBM() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						addons = {
							order = 4,
							type = 'group',
							inline = true,
							name = 'Addon Profiles',
							args = {
								immersion = {
									order = 2,
									type = 'execute',
									name = 'Immersion',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupImmersion() E:StaticPopup_Show('CONFIG_RL') end,
								},
								dynamiccam = {
									order = 1,
									type = 'execute',
									name = 'Dynamic Cam',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDynamicCam() E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								--[[gladiusex = {
									order = 3,
									type = 'execute',
									name = 'Gladius Ex',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupGladiusEx() E:StaticPopup_Show('CONFIG_RL') end,
								},
								exorsus = {
									order = 4,
									type = 'execute',
									name = 'Exorsus Raid Tools',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupExRT() E:StaticPopup_Show('CONFIG_RL') end,
								},]]--
								questie = {
									order = 9,
									type = 'execute',
									name = 'Questie',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupQuestie() E:StaticPopup_Show('CONFIG_RL') end,
								},
								nameplatesct = {
									order = 5,
									type = 'execute',
									name = 'NameplateSCT',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupNameplateSCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								fct = {
									order = 6,
									type = 'execute',
									name = 'Floating Combat Text',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupFCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								details = {
									order = 7,
									type = 'execute',
									name = 'Details',
									desc = 'Reset to Eltreum UI defaults.',
									func = function() ElvUI_EltreumUI:AddonSetupDT() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				--[[actionbars = {
					type = 'group',
					name = 'Custom Glow',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\customglow',
					order = 85,
					args = {
						glow = {
							type = 'group',
							name = 'Replace Blizzards Default Glow with a Custom class colored Glow',
							guiInline = true,
							order = 10,
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.private.ElvUI_EltreumUI.glow.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.glow.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								addagaphere = {
								order = 2,
								type = "description",
								name = "",
								},
								addanothergapforfun = {
								order = 2,
								type = "description",
								name = "",
								},
								procselection = {
								order = 2,
								type = 'group',
								name = 'Select a Type',
									args = {
										yetanothergap = {
										order = 2,
										type = "description",
										name = "",
										},
										autocast = {
											type = 'toggle',
											name = 'Autocast',
											order = 10,
											desc = 'Adds an autocast style glow using class color',
											disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.pixel or E.db.ElvUI_EltreumUI.glow.blizzard end,
											get = function(info) return E.db.ElvUI_EltreumUI.glow.autocast end,
											set = function(info, value) E.db.ElvUI_EltreumUI.glow.autocast = value E:StaticPopup_Show('profile_RL') end,
										},
										pixel = {
											type = 'toggle',
											name = 'Pixel',
											order = 12,
											desc = 'Adds a pixel style glow using class color',
											disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.blizzard end,
											get = function(info) return E.db.ElvUI_EltreumUI.glow.pixel end,
											set = function(info, value) E.db.ElvUI_EltreumUI.glow.pixel = value E:StaticPopup_Show('profile_RL') end,
										},
										blizzard = {
											type = 'toggle',
											name = 'Blizzard',
											order = 11,
											desc = 'Adds a Blizzard style glow using class color',
											disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.pixel end,
											get = function(info) return E.db.ElvUI_EltreumUI.glow.blizzard end,
											set = function(info, value) E.db.ElvUI_EltreumUI.glow.blizzard = value E:StaticPopup_Show('profile_RL') end,
										},
									},
								},
							},
						},
					},
				},]]--
				cvars = {
					order = 85,
					type = 'group',
					name = 'CVars',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cvar',
					args = {
						setup = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup CVars',
							args = {
								generalVars = {
									order = 1,
									type = 'execute',
									name = 'General CVars',
									func = function() ElvUI_EltreumUI:SetupCVars() ElvUI_EltreumUI:NameplateCVars() end,
									confirm = true,
								},
							},
						},
						generalDesc = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'It will set these CVars:',
							args = {
								cvars = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = '- autoLootDefault 1\n- ShowClassColorInFriendlyNameplate 1\n- removeChatDelay 1\n- autoQuestWatch 1\n- cameraDistanceMaxZoomFactor 2.6\n- nameplateLargerScale 1.2\n- nameplateMaxDistance 60\n- nameplateMinAlpha 1\n- nameplateMinScale 1\n- nameplateMotion 1\n- nameplateOccludedAlphaMult 0\n- nameplateOverlapH 0.8\n- nameplateOverlapV 1.1\n- nameplateSelectedScale 1\n- nameplateSelfAlpha 1\n- nameplateShowFriendlyMinions 0\n- nameplateOtherBottomInset 0.02\n- nameplateOtherTopInset 0.1\n- nameplateTargetRadialPosition 1\n- nameplateTargetBehindMaxDistance 40\n- UnitNameEnemyGuardianName 0\n- UnitNameEnemyMinionName 0\n- UnitNameEnemyPetName 0\n- UnitNameEnemyPlayerName 1\n- UnitNameEnemyTotemName 1\n- UnitNameNPC 1',
								},
							},
						},
					},
				},
				partyraidsettings = {
					type = 'group',
					name = 'Party/Raid',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\party',
					order = 85,
					args = {
						partyraiddeath = {
							type = 'group',
							name = 'Play a sound when someone dies in Party or Raid',
							guiInline = true,
							order = 10,
							args = {
								enable = {
								type = 'toggle',
								name = 'Enable',
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.partyraiddeath.enable = value end,
								},
								addagaphere = {
								order = 2,
								type = "description",
								name = "",
								},
								addanothergapforfun = {
								order = 2,
								type = "description",
								name = "",
								},
								soundselection = {
								order = 2,
								type = 'group',
								name = 'Select a Sound',
									args = {
										yetanothergap = {
										order = 2,
										type = "description",
										name = "",
										},
										bruh = {
											type = 'toggle',
											name = 'Bruh',
											order = 5,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.bruh end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.bruh = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\bruh.mp3", "Dialog") end,
										},
										robloxoof = {
											type = 'toggle',
											name = 'Oof',
											order = 6,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\oof.mp3", "Dialog") end,
										},
										shame = {
											type = 'toggle',
											name = 'Shame',
											order = 13,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.shame end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.shame = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\shame.mp3", "Dialog") end,
										},
										wowsound = {
											type = 'toggle',
											name = 'Wow',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.wow end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.wow = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\wow.mp3", "Dialog") end,
										},
										mariosound = {
											type = 'toggle',
											name = 'Mario',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.mario = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\mariodeath.mp3", "Dialog") end,
										},
										ionsound = {
											type = 'toggle',
											name = 'Ion',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.ion = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\ionskillissue.mp3", "Dialog") end,
										},
									},
								},
							},
						},
						headergaphere = {
									order = 11,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						grouplayout = {
							type = 'group',
							name = 'Alternative unitframe layouts',
							guiInline = true,
							order = 12,
							args = {
								layoutdescription = {
										order = 1,
										type = 'description',
										fontSize = 'medium',
										name = 'DPS/Tank layouts were created with pure dps classes in mind, if you play a class with more raid cooldowns like a Shaman, Druid or Paladin you might want to use the alternative layout in order to make it easier for you to use your cooldowns on the members of your group',
								},
								alternativegroups = {
									order = 2,
									type = 'execute',
									name = 'Alternative Layout',
									func = function() ElvUI_EltreumUI:AlternativeGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								originalgroups = {
									order = 3,
									type = 'execute',
									name = 'Original Layout',
									func = function() ElvUI_EltreumUI:OriginalGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				combatmusic = {
					type = 'group',
					name = 'Combat Music',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
					order = 85,
					args = {
						moremusicsettings = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Play music during combat',
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable music during combat',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								instancemusic = {
									order = 2,
									type = 'toggle',
									name = 'Disable in Instances',
									desc = 'Disable music during combat in instances',
									width = 'full',
									disabled = function() return not E.private.ElvUI_EltreumUI.combatmusic.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.disableinstance end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.disableinstance = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								pathtofile = {
									order = 6,
									type = 'group',
									inline = true,
									name = "Path to file",
									args = {
										howtomusic = {
										order = 2,
										type = "description",
										name = "Example: Interface\\Addons\\mymusic.mp3",
										},
										somegap = {
											order = 3,
											type = "description",
											name = "",
										},
										soundpath = {
											order = 6,
											icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
											type = 'input',
											name = '',
											desc = '',
											width = 'full',
											get = function() return E.private.ElvUI_EltreumUI.combatmusic.musicfile end,
											set = function(_, value) E.private.ElvUI_EltreumUI.combatmusic.musicfile = value E:StaticPopup_Show('PRIVATE_RL') end,
										}
									}
								},
							},
						},
					},
				},
				media = {
					type = 'group',
					name = 'Media',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\media',
					order = 85,
					args = {
						mediaoptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Setup Media',
							width = 'full',
							args = {
								private = {
									order = 1,
									type = 'execute',
									name = 'Reset all Media',
									desc = 'Reset Fonts, Textures, Skins to Eltreum UI defaults.',
									width = 'full',
									func = function() ElvUI_EltreumUI:SetupPrivate() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header1 = {
								order = 3,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontdescription= {
								order = 3,
								type = "description",
								name = "Set the fonts used in Eltruism. Kimberley is the default font",
								},
								kimberley = {
									order = 4,
									type = 'execute',
									name = 'Kimberley',
									desc = 'This will set all ElvUI fonts as Kimberley',
									func = function() ElvUI_EltreumUI:SetupFontsKimberley() E:StaggeredUpdateAll(nil, true)  end,
									confirm = true,
								},
								exo2 = {
									order = 5,
									type = 'execute',
									name = 'Exo2',
									desc = 'This will set all ElvUI fonts as Exo2',
									func = function() ElvUI_EltreumUI:SetupFontsExo2() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforfonts = {
								order = 6,
								type = "description",
								name = "",
								--width = "full",
								},
								gotham = {
									order = 7,
									type = 'execute',
									name = 'Gotham',
									desc = 'This will set all ElvUI fonts as Gotham',
									func = function() ElvUI_EltreumUI:SetupFontsGotham() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},

								roboto = {
									order = 7,
									type = 'execute',
									name = 'Roboto',
									desc = 'This will set all ElvUI fonts as Roboto',
									func = function() ElvUI_EltreumUI:SetupFontsRoboto() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforcustom = {
								order = 8,
								type = "description",
								name = "",
								},
								sharedmediafont = {
								     order = 8,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Or choose a custom font",
								     desc = 'Choose a different font from the preselected ones',
								     values = AceGUIWidgetLSMlists.font,
								     get = function()
								          return E.db.ElvUI_EltreumUI.fonts.playerfont
								     end,
								     set = function(self,fontvalue)
								          E.db.ElvUI_EltreumUI.fonts.playerfont = fontvalue
								          ElvUI_EltreumUI:SetupCustomFont(fontvalue)
								     end,
								},
								addagaphereforoutlines = {
								order = 9,
								type = "description",
								name = "",
								},
								addagaphereagain = {
								order = 9,
								type = "description",
								name = "",
								},
								header3 = {
								order = 10,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontoutline = {
								order = 11,
								type = "description",
								name = "Set the Font Outlines everywhere. Use Default to return to Eltruism default settings",
								width = "full",
								},
								default = {
									order = 12,
									type = 'execute',
									name = 'Defaults',
									desc = 'This will set fonts to Eltruism defaults, recommended for 4K',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineDefault() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								none = {
									order = 12,
									type = 'execute',
									name = 'None',
									desc = 'This will set fonts to no outline',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineNone() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								outlinegap = {
								order = 13,
								type = "description",
								name = "",
								},
								outline = {
									order = 13,
									type = 'execute',
									name = 'Outline',
									desc = 'This will set fonts to use outline, recommended for 1440p and 1080p',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineOutline() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								thick = {
									order = 13,
									type = 'execute',
									name = 'Thick Outline',
									desc = 'This will set fonts to use thick outline, similar to Eltruism defaults',
									func = function() ElvUI_EltreumUI:SetupFontsOutlineThick() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header4 = {
								order = 14,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								darklightmode = {
								order = 15,
								type = "description",
								name = "Change the look of frames to Dark or Light mode",
								width = "full",
								},
								dark = {
									order = 16,
									type = 'execute',
									name = 'Dark Mode',
									desc = 'This will set colors to black with class colors when losing health',
									func = function() ElvUI_EltreumUI:DarkMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								light = {
									order = 16,
									type = 'execute',
									name = 'Light Mode',
									desc = 'This will set colors to class based with black backgrounds when losing health',
									func = function() ElvUI_EltreumUI:LightMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								header5 = {
									order = 17,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								dynamicdatatext = {
									order = 18,
									type = "description",
									name = "Dynamic Datatext that changes according to class to show Ammo or Soul Shards when playing Hunter or Warlock",
									width = "full",
								},
								dynamicenable = {
									order = 19,
									type = 'toggle',
									name = 'Enable',
									desc = 'Enable the Dynamic Datatext',
									get = function(info) return E.db.ElvUI_EltreumUI.dynamicdatatext.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.dynamicdatatext.enable = value end,
								},
								header6 = {
									order = 20,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								tbctalentinfo = {
									order = 21,
									type = "description",
									name = "Expand the Talents to show the entire tree",
									width = "full",
								},
								tbctalents = {
									order = 22,
									type = 'toggle',
									name = 'Expanded Talents',
									desc = 'Expand Talents to cover the full tree',
									get = function(info) return E.db.ElvUI_EltreumUI.tbctalents.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.tbctalents.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				nameplates = {
					type = 'group',
					name = 'Nameplates',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\nameplate',
					order = 85,
					args = {
						header = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplateOptions = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Class Colored Nameplate Options',
							args = {
								classhover = {
									order = 1,
									type = 'toggle',
									name = 'Hover',
									desc = 'Change the color of the hover to be class colored',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow = value end,
								},
								classborder = {
									order = 2,
									type = 'toggle',
									name = 'Border',
									desc = 'Change the color of the border glow to be class bordered in nameplates',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate = value end,
								},
								classtexture = {
									order = 2,
									type = 'toggle',
									name = 'Target Texture',
									desc = 'Change the texture of the nameplate to be a class gradient',
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture = value end,
								},
							},
						},
						addsomegap = {
								order = 3,
								type = "description",
								name = "",
						},
						header2 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						friendlynameplate = {
							order = 5,
							type = 'group',
							inline = true,
							name = 'Control how Nameplates behave',
							args = {
								hidehealthinsideinstances = {
									order = 1,
									type = 'toggle',
									name = 'Show Friendly Nameplates but Hide Healthbar',
									desc = 'Show Friendly Nameplates but Hide Healthbar',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								nofriendlyinstances = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates inside Instances',
									desc = 'Hide Friendly Nameplates inside Instances',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								dontshowfriendlyatall = {
									order = 1,
									type = 'toggle',
									name = 'Hide Friendly Nameplates everywhere',
									desc = 'Hide Friendly Nameplates everywhere',
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						header3 = {
									order = 6,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						verywidenameplate = {
							order = 7,
							type = 'group',
							inline = true,
							name = 'Wide nameplate debuffs and buffs',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Make Buffs and Debuffs Wide on Nameplates',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.widenameplate.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.enable = value end,
								},
							}
						},
						header4 = {
									order = 8,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						dynamiclevel = {
							order = 9,
							type = 'group',
							inline = true,
							name = 'Enemy Nameplate Level',
							args = {
								desc = {
									order = 1,
									type = 'toggle',
									name = 'Hide level on enemy nameplates when you are max level',
									desc = 'Toogle On and Off',
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.nameplatelevel.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.nameplatelevel.enable = value end,
								},
							}
						},
						header5 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplatepower = {
							order = 11,
							type = 'group',
							inline = true,
							name = 'Nameplate Power Bar',
							args = {
								enablepowerbar = {
									order = 1,
									type = 'toggle',
									name = 'Enable Nameplate Power Bar',
									desc = 'Enable an extra Power Bar on Nameplates for missing powers',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								enableadjust = {
									order = 2,
									type = 'toggle',
									name = 'Enable Autoadjusting Buffs/Debuffs',
									desc = 'Enable autoadjusting the position of Buffs/Debuffs',
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.adjust end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.adjust = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								addagapforspace4 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace5 = {
									order = 3,
									type = "description",
									name = "",
								},
								addagapforspace6 = {
									order = 3,
									type = "description",
									name = "",
								},
								describethis = {
									order = 4,
									type = "description",
									name = "Select the power types to be displayed:",
								},
								addagapforspace7 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace8 = {
									order = 5,
									type = "description",
									name = "",
								},
								addagapforspace9 = {
									order = 5,
									type = "description",
									name = "",
								},
								mana = {
									type = 'toggle',
									name = 'Mana',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.mana end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.mana = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								rage = {
									type = 'toggle',
									name = 'Rage',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.rage end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.rage = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								energy = {
									type = 'toggle',
									name = 'Energy',
									order = 6,
									disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.energy end,
									set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.energy = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
							}
						},
					},
				},
				loottext = {
					type = 'group',
					name = 'Loot',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\loot',
					order = 85,
					args = {
						lootsetting = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Show a floating loot text',
							args = {
								desc = {
									type = 'toggle',
									name = 'Enable',
									desc = 'Toggle On and Off',
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.loottext.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								addagaphere = {
									order = 2,
									type = "description",
									name = "",
								},
								addanothergapforfun = {
									order = 2,
									type = "description",
									name = "",
								},
								suboptions = {
									order = 2,
									type = 'group',
									name = 'Choose which types of text:',
										args = {
											yetanothergap = {
											order = 2,
											type = "description",
											name = "",
											},
											honor = {
												type = 'toggle',
												name = 'Honor',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.honor end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.honor = value end,
											},
											currency = {
												type = 'toggle',
												name = 'Currency',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.currency end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.currency = value end,
											},
											pet = {
												type = 'toggle',
												name = 'Pets',
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.pet end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.pet = value end,
											},
										}
								},
								header1 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscale = {
									type = 'range',
									name = 'Change the scale of LootText',
									desc = 'Set the size of LootText',
									order = 4,
									min = .1,
									max = 1.5,
									step = .05,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.scale end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.scale = value end,
								},
								addgaptobenice = {
									order = 5,
									type = "description",
									name = "",
								},
								lootscalereset = {
									type = 'execute',
									name = 'Reset Scale',
									desc = 'Return LootText to its default scale',
									order = 9,
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									func = function() E.db.ElvUI_EltreumUI.loottext.scale = 0.65 end,
								},
								header2 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootstrata = {
									type = 'select',
									name = 'Change the strata of the Loot Text',
									desc = 'Set the level that LootText will be drawn to this',
									order = 11,
									values = {
					                    ['BACKGROUND'] = 'Background',
					                    ['LOW'] = 'Low',
					                    ['MEDIUM'] = 'Medium',
					                    ['HIGH'] = 'High',
					                    ['DIALOG'] = 'Dialog',
					                },
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.loottext.strata end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.strata = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header99 = {
									order = 12,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscalex = {
									type = 'range',
									name = 'Change the Horizontal Position of LootText (Default = 0)',
									desc = 'Set X offset',
									order = 13,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.xOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.xOffset = value end,
									--confirm = true,
								},
								lootscaley = {
									type = 'range',
									name = 'Change the Vertical Position of LootText (Default = 200)',
									desc = 'Set Y offset',
									order = 14,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.yOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.yOffset = value end,
									--confirm = true,
								},
								header98 = {
									order = 15,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customfontlootgap = {
									type = 'description',
									name = '',
									width = 'full',
									order = 16,
								},
								customfontlootdesc = {
									type = 'description',
									name = 'Change the font of LootText to be that the ElvUI Default Font found in General',
									width = 'full',
									order = 17,
								},
								customfontloot = {
									type = 'toggle',
									name = 'Use ElvUI General Font',
									desc = 'Change the font of LootText',
									order = 18,
									get = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.fontsetting = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								--[[loottextlsmfont = {
								     order = 17,
								     type = 'select',
								     width = "double",
								     dialogControl = 'LSM30_Font',
								     name = "Choose a Custom Font",
								     desc = 'Choose one of the fonts available111:',
								     values = AceGUIWidgetLSMlists.font,
								     --disabled = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting == false end,
								     get = function() return E.db.ElvUI_EltreumUI.loottext.font end,
								     set = function(self,fontvalue) E.db.ElvUI_EltreumUI.loottext.font = fontvalue end,
								},]]--
							},
						},
					},
				},
				stealth = {
					type = 'group',
					name = 'Stealth Vignette',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\stealth',
					order = 85,
					args = {
						stealthOptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Toggle a Stealth Effect',
							args = {
								stealthframeoptions = {
									order = 1,
									type = 'toggle',
									name = 'Add a vignette effect while in stealth',
									width = 'full',
									desc = 'Turn the effect on',
									get = function(info) return E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect end,
									set = function(info, value) E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect = value end,
								},
							},
						},
					},
				},
				weakauras = {
					type = 'group',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\weakauras',
					name = 'WeakAuras',
					order = 95,
					args = {
						header1 = {
							order = 1,
							type = 'header',
							name = 'WeakAuras',
						},
						explain1 = {
							order = 2,
							type = "description",
							name = "You can set your Weakauras to anchor to custom locations making it easier to move them",
						},
						explain2 = {
							order = 3,
							type = "description",
							name = "In order to use this feature, simply go to your Weakaura, and go to its Group options, scroll down to Position Settings and set the Anchored To Select Frame, then type either |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r to anchor the weakaura to the preset location",
						},
						explain3 = {
							order = 4,
							type = "description",
							name = "Setting |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r as the anchor will move them to the locations, keep in mind you might need to change the X and Y offset of the weakaura to zero",
						},
						explainer1 = {
							order = 5,
							type = "group",
							name = 'WeakAuras',
							inline = true,
							args = {
								addaspacehere123 = {
									order = 86,
									type = "description",
									name = '',
								},
								explainer7 = {
									order = 87,
									type = "description",
									name = 'My WeakAuras are available here, but are not focused on one class. Consider them more like upcoming features.',
								},
								addaspacehere = {
									order = 88,
									type = "description",
									name = '',
								},
								wago = {
									order = 89,
									type = 'input',
									width = 'normal',
									name = 'All weakauras',
									get = function() return 'wago.io/p/Eltreum' end,
								},
								addsomegap = {
										order = 90,
										type = "description",
										name = "",
								},
								nameplatepowerbar = {
									order = 91,
									type = 'input',
									width = 'full',
									name = 'Nameplate Power Bar',
									get = function() return 'https://wago.io/HJ7YjUVgo' end,
								},
								addsomegap2 = {
										order = 92,
										type = "description",
										name = "",
								},
								bossnameplate = {
									order = 93,
									type = 'input',
									width = 'full',
									name = 'Boss nameplate at base',
									get = function() return 'https://wago.io/M7yrCgMnE' end,
								},
								addsomegap3 = {
										order = 94,
										type = "description",
										name = "",
								},
								executenameplate = {
									order = 95,
									type = 'input',
									width = 'full',
									name = 'Executes next to nameplates',
									get = function() return 'https://wago.io/afJKwFwAX' end,
								},
							},
						},
					},
				},
				discord = {
					type = 'group',
					name = 'Discord',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\discord',
					order = 96,
					args = {
						logodiscord = {
							type = 'description',
							name = "",
							order = 1,
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\disc', 256, 128 end,
						},
						explainer8 = {
							order = 2,
							type = "description",
							name = 'Join the Discord if you have any questions or issues',
						},
						addaspacehere4 = {
							order = 3,
							type = "description",
							name = '',
						},
						discordinvitelink = {
							order = 19,
							type = 'input',
							width = 'full',
							name = '',
							get = function() return 'https://discord.gg/cXfA56gmYW' end,
						},
					},
				},
				changelog = {
					type = 'group',
					name = 'Changelog',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\changelog',
					order = 97,
					args = {
						changelogchoice = {
						     order = 18,
						     type = 'select',
						     width = "double",
						     style = 'dropdown',
						     name = "Select a version:",
						     desc = 'Choose a version to see its changelog',
						     values = {
								["2.0.0"] = "2.0.0",
								["1.0.0"] = "1.0.0",
							},
						     get = function() return E.db.ElvUI_EltreumUI.changelog.version end,
						     set = function(self,value) E.db.ElvUI_EltreumUI.changelog.version = value end,
						},
						changelogtext = {
							order = 19,
							type = 'description',
							width = 'full',
							name = function() return ElvUI_EltreumUI:Changelog() end,
						},
					},
				},
				credits = {
					type = 'group',
					name = 'Credits',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\credits',
					order = 97,
					args = {
						author = {
							order = 1,
							type = 'group',
							inline = true,
							name = 'Author',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = AUTHORS_STRING,
								},
							},
						},
						thankyou = {
							order = 2,
							type = 'group',
							inline = true,
							name = 'Credits and Thank yous',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = THANKYOU_STRING,
								},
							},
						},
						licensewarning = {
							order = 99,
							type = 'group',
							inline = true,
							name = 'License',
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = 'Icons8 (www.icons8.com) for some of the icons. List in license.txt\nLootText is licensed under GNU GPLv3 and is a fork of SLoTe from xavjer\nCursor is licended under GNU GPLv3 and is a fork of CastCursor by michaelsp',
								},
							},
						},
					},
				},
				support = {
					type = 'group',
					name = 'Support',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\support',
					order = 98,
					args = {
						gitlink = {
							order = 1,
							type = 'input',
							width = 'full',
							name = 'New commits, basically a preview of fixes or upcoming features',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/commits/main' end,
						},
						issues = {
							order = 2,
							type = 'input',
							width = 'full',
							name = 'Report issues and problems here:',
							get = function() return 'https://git.tukui.org/eltreum/eltruism/-/issues' end,
						},
						tukui = {
							order = 3,
							type = 'input',
							width = 'full',
							name = 'Addon on tukui:',
							get = function() return 'https://www.tukui.org/addons.php?id=10' end,
						},
						curse = {
							order = 4,
							type = 'input',
							width = 'full',
							name = 'Addon on curse:',
							get = function() return 'https://www.curseforge.com/wow/addons/elvui-eltruism' end,
						},
					},
				},
			},
		}
		for _, func in pairs(ElvUI_EltreumUI.Config) do
			func()
		end
	end
end
