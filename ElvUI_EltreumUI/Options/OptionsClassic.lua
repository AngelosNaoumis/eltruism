local ElvUI_EltreumUI, E, L, V, P, G = unpack(select(2, ...))
local sort = sort
local pairs = pairs
local tinsert = table.insert
local tconcat = table.concat
local PlaySoundFile = PlaySoundFile

--Author list
local AUTHORS = {
	'|cff82B4ffEltreum|r',
}

-- Credits and Thank yous list
local THANKYOU = {
	'|cff0070DEAzilroka|r',
	'|cffC41F3BKringel|r',
	'|cFF99CCFFAftermathh|r',
	'|cffF58CBARepooc|r Especially for the huge helps',
	'Blazeflack',
	'Botanica',
	'|cffFFC44DHydra|r',
	'|T134297:15:15:0:0:64:64:5:59:5:59|t |cffff7d0aMerathilis|r',
	'|cff9482c9Darth Predator|r',
	'Caedis',
	'Elv',
	E:TextGradient('Simpy but his name might be shorter sometimes even though he fixes a lot of things', 1,.42,.78, 1,.56,.68, .66,.99,.98, .77,.52,1, 1,.48,.81, .98,.95,.68),
	'Tukui Community',
	'Shrom',
	'Pat',
	'|cff00c0faBenik|r',
	'|T136012:15:15:0:0:64:64:5:59:5:59|t |cff006fdcRubgrsch|r',
	'|cff8788EENihilistzsche|r',
	'|TInterface/AddOns/ElvUI/Core/Media/ChatLogos/Clover:15:15:0:0:64:64:5:59:5:59|t |cffFF7D0ALuckyone|r Especially for allowing the usage of his installer/plugin as a model',
	'|TInterface/AddOns/ElvUI_EltreumUI/Media/Textures/releaf:15:15:0:0:64:64:5:59:5:59|t |cffFF7D0AReleaf|r for the alternate class icons',
	'AcidWeb |TInterface/AddOns/ElvUI/Core/Media/ChatLogos/Gem:15:15:-1:2:64:64:6:60:8:60|t',
}

local SUPPORTER = {
	'|cffB50909Artan|r',
	'|cffB50909Brovenn|r',
	'|cffB50909Dreandor|r',
	'|cffB50909Morthart|r',
	'|cffB50909Nekator|r',
}

-- SortList
local function SortList(a, b)
	return E:StripString(a) < E:StripString(b)
end

sort(AUTHORS, SortList)
sort(THANKYOU, SortList)
sort(SUPPORTER, SortList)

-- Author table
for _, name in pairs(AUTHORS) do
	tinsert(ElvUI_EltreumUI.CreditsList, name)
end
local AUTHORS_STRING = tconcat(AUTHORS, '|n')

-- Thank you table
for _, name in pairs(THANKYOU) do
	tinsert(ElvUI_EltreumUI.CreditsList, name)
end
local THANKYOU_STRING = tconcat(THANKYOU, '|n')

-- Supporter table
for _, name in pairs(SUPPORTER) do
	tinsert(ElvUI_EltreumUI.CreditsList, name)
end
local SUPPORTER_STRING = tconcat(SUPPORTER, '|n')

-- EltreumUI ingame options Classic
if ElvUI_EltreumUI.Classic then
	function ElvUI_EltreumUI:Configtable()
		-- Add EltreumUI version on top of the ElvUI config
		E.Options.name = E.Options.name .. " + " .. ElvUI_EltreumUI.Name .. format(" |cffffffff%s|r", ElvUI_EltreumUI.Version)
		E.Options.args.ElvUI_EltreumUI = {
			order = 6,
			type = 'group',
			name = ElvUI_EltreumUI.Name,
			args = {
				logo = {
					type = 'description',
					name = "",
					order = 6,
					image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\logohq', 320, 80 end,
				},
				installer = {
					order = 7,
					type = 'group',
					name = L["Installer"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\install',
					args = {
						header5 = {
							order = 1,
							type = "description",
							name = "Eltruism Installer",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						install = {
							order = 2,
							type = 'group',
							inline = true,
							name = "",
							args = {
								pluginagain = {
									order = 1,
									type = 'execute',
									name = "Launch Eltruism Installer",
									width = 'double',
									func = function() E:GetModule('PluginInstaller'):Queue(ElvUI_EltreumUI.InstallerData) E:ToggleOptionsUI() end,
								},
							},
						},
						header6 = {
							order = 3,
							type = "description",
							name = L["Nameplates"],
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						resetnameplates = {
							order = 4,
							type = 'group',
							inline = true,
							name = "",
							args = {
								nameplateagain = {
									order = 1,
									type = 'execute',
									name = 'Reset nameplates to Eltruism settings',
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupNamePlates('ElvUI') ElvUI_EltreumUI:ResolutionOutline() end,
								},
							},
						},
						header7 = {
							order = 5,
							type = "description",
							name = L["Chat"],
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						resetchat = {
							order = 6,
							type = 'group',
							inline = true,
							name = "",
							args = {
								resetchatagain = {
									order = 1,
									type = 'execute',
									name = 'Reset Chat to ElvUI settings',
									width = 'double',
									func = function() E:SetupChat() ElvUI_EltreumUI:Print(L["ElvUI Chat has been Set"]) end,
								},
							},
						},
						header8 = {
							order = 7,
							type = "description",
							name = L["Layouts"],
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						resetlayout = {
							order = 8,
							type = 'group',
							inline = true,
							name = "",
							args = {
								resetdps = {
									order = 1,
									type = 'execute',
									name = 'Reset layout to Eltruism DPS/Tank',
									width = 'double',
									func = function() E.data:SetProfile('Eltreum DPS/Tank') ElvUI_EltreumUI:SetupGeneralLayout() ElvUI_EltreumUI:SetupLayoutDPS() end,
								},
								resethealer = {
									order = 1,
									type = 'execute',
									name = 'Reset layout to Eltruism Healer',
									width = 'double',
									func = function() E.data:SetProfile('Eltreum Healer') ElvUI_EltreumUI:SetupGeneralLayout() ElvUI_EltreumUI:SetupLayoutHealer() end,
								},
							},
						},
						header9 = {
							order = 9,
							type = "description",
							name = "Skip Plugins",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						skipplugin = {
							order = 10,
							type = 'group',
							inline = true,
							name = "",
							args = {
								resethealer = {
									order = 1,
									type = 'execute',
									name = 'Skip Plugins install message',
									desc = "Make the warnings to install profiles for other plugins stop",
									width = 'double',
									func = function()
										E.private.ElvUI_EltreumUI.isInstalled.sle = true
										E.private.ElvUI_EltreumUI.isInstalled.windtools = true
										E.private.ElvUI_EltreumUI.isInstalled.projectazilroka = true
									end,
								},
							},
						},
						header10 = {
							order = 11,
							type = "description",
							name = L["Clear Details! Damage Meter tables to free up memory"],
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						detailstable = {
							order = 12,
							type = 'group',
							name = "",
							width = "full",
							inline = true,
							args = {
								detailstableexecute = {
									order = 12,
									type = 'execute',
									name = L["Clear Details Tables"],
									desc = L["Set Details tables to be empty"],
									width = 'double',
									confirm = true,
									func = function() ElvUI_EltreumUI:EmptyDetailsTable() end,
								},
							},
						},
					},
				},
				afk = {
					type = 'group',
					name = L["A.F.K"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\afk',
					order = 85,
					args = {
						header7 = {
							order = 1,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						afkmusic = {
							order = 2,
							type = 'group',
							inline = true,
							name = L["Play music while you are AFK"],
							args = {
								enable = {
								type = 'toggle',
								name = L["Enable"],
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.afkmusic.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.afkmusic.enable = value end,
								},
							},
						},
					},
				},
				cursor = {
					type = 'group',
					name = L["Cursor"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cursor',
					order = 85,
					childGroups = "tab",
					args = {
						cursorgeneral = {
							order = 1,
							type = 'group',
							name = L["General"],
							args = {
								header1 = {
									order = 20,
									type = "description",
									name= L["Change the size of the World of Warcraft Cursor"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								setsize = {
									order = 21,
									type = 'select',
									name = L["Select a size"],
									desc = L["Choose this size"],
									values = {
										['-1'] = L["Autodetect"],
										['0'] = '32x32',
										['1'] = '48x48',
										['2'] = '64x64',
										['3'] = '128x128',
									},
									style = 'radio',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.size end,
									set = function(info,value) ElvUI_EltreumUI:CursorSize(value) end,
								},

								enable = {
									order = 1,
									type = 'toggle',
									name = L["Enable cursor rings for Casts, GCD and Combat"],
									desc = L["Add a rings around the mouse cursor for GCD, casts and combat"],
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.enable = value end,
								},
								enablecombat = {
									order = 2,
									type = 'toggle',
									name = L["Enable cursor only during combat"],
									desc = L["Cursor will only show during combat"],
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.combat end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.combat = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								enablecd = {
									order = 3,
									type = 'toggle',
									name = L["Enable cooldown tracking"],
									desc = L["Add a cooldown icon when trying to use skills that are on cooldown, and a cooldown flash when they are ready"],
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.cooldown end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.cooldown = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								fixlag = {
									order = 4,
									type = 'toggle',
									name = "Attempt to fix Cursor Lag",
									desc = "Disable Hardware cursor, returning the cursor to how it was before Battle for Azeroth",
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.cursor.fixlag end,
									set = function(info, value) E.db.ElvUI_EltreumUI.cursor.fixlag = value end,
								},
							},
						},
						cursorcolors = {
							order = 6,
							type = 'group',
							name = 'Cursor Colors',
							args = {
								nicegap17 = {
									order = 11,
									type = "description",
									name = L["Cursor Colors "]..'|cffff0000('..L["Requires a Reload"]..")|r",
									width = 'full',
								},
								header12 = {
									order = 11,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								castclasscolor = {
									type = 'toggle',
									name = L["Class Colored Casts"],
									order = 12,
									desc = L["Use Class Colors for Cast"],
									get = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								colorcast = {
									order = 13,
									type = 'color',
									name = L["Custom Color Cast"],
									hasAlpha = false,
									disabled = function() return E.db.ElvUI_EltreumUI.cursorcast.classcolor end,
									get = function()
										local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
										local d = P.ElvUI_EltreumUI.cursorcast
										return cursorcast.r, cursorcast.g, cursorcast.b, cursorcast.a, d.r, d.g, d.b, d.a
									end,
									set = function(_, r, g, b, a)
										local cursorcast = E.db.ElvUI_EltreumUI.cursorcast
										cursorcast.r, cursorcast.g, cursorcast.b = r, g, b
									end,
								},
								nicegap1 = {
									order = 14,
									type = "description",
									name = "",
									width = 'full',
								},
								gcdclasscolor = {
									type = 'toggle',
									name = L["Class Colored GCD"],
									order = 14,
									desc = L["Use Class Colors for GCD"],
									get = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								colorgcd = {
									order = 15,
									type = 'color',
									name = L["Custom Color GCD"],
									hasAlpha = false,
									disabled = function() return E.db.ElvUI_EltreumUI.cursorgcd.classcolor end,
									get = function()
										local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
										local d = P.ElvUI_EltreumUI.cursorgcd
										return cursorgcd.r, cursorgcd.g, cursorgcd.b, cursorgcd.a, d.r, d.g, d.b, d.a
									end,
									set = function(_, r, g, b, a)
										local cursorgcd = E.db.ElvUI_EltreumUI.cursorgcd
										cursorgcd.r, cursorgcd.g, cursorgcd.b = r, g, b
									end,
								},
								nicegap2 = {
									order = 16,
									type = "description",
									name = "",
									width = 'full',
								},
								cursorcursorclasscolor = {
									type = 'toggle',
									name = L["Class Colored Combat"],
									order = 16,
									desc = L["Use Class Colors for Cursor"],
									get = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								cursorcursorcolor = {
									order = 17,
									type = 'color',
									name = L["Custom Color Combat"],
									hasAlpha = false,
									disabled = function() return E.db.ElvUI_EltreumUI.cursorcursor.classcolor end,
									get = function()
										local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
										local d = P.ElvUI_EltreumUI.cursorcursor
										return cursorcursor.r, cursorcursor.g, cursorcursor.b, cursorcursor.a, d.r, d.g, d.b, d.a
									end,
									set = function(_, r, g, b, a)
										local cursorcursor = E.db.ElvUI_EltreumUI.cursorcursor
										cursorcursor.r, cursorcursor.g, cursorcursor.b = r, g, b
									end,
								},
							},
						},
						cursortype = {
							order = 7,
							type = 'group',
							name = "Cursor Type",
							args = {
								topbar = {
									order = 0,
									type = "description",
									name = "Choose a type of cursor by clicking it,",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								gap = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
								},
								gap2 = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
								},
								gap3 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
								},
								currentring = {
									order = 5,
									type = 'description',
									name = function() return L["Currently selected cursor: "]..ElvUI_EltreumUI:CurrentTypeofCursor() end,
									desc = 'Choose a type of cursor by clicking it,'
								},
								showring1 = {
									order = 90,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1',
									name = L["Type 1"],
									desc = L["The Cursor will use this type as its texture"],
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring1.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring2 = {
									order = 91,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2',
									name = L["Type 2"],
									desc = 'The Cursor will use this type as its texture',
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring2.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring3 = {
									order = 92,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3',
									name = L["Type 3"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring3.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring4 = {
									order = 93,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4',
									name = L["Type 4"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring4.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring5 = {
									order = 94,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5',
									name = L["Type 5"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring5.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring6 = {
									order = 95,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6',
									name = L["Type 6"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring6.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring7 = {
									order = 96,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7',
									name = L["Type 7"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring7.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring8 = {
									order = 97,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8',
									name = L["Type 8"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring8.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring9 = {
									order = 98,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9',
									name = L["Type 9"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring9.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
								showring10 = {
									order = 99,
									type = "execute",
									image = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10',
									name = L["Type 10"],
									desc = L["The Cursor will use this type as its texture"],
									confirm = true,
									func = function() E.db.ElvUI_EltreumUI.cursor.ring = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\Cursor\\ring10.tga' E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						cursorsize = {
							order = 3,
							type = 'group',
							name = L["Cursor Sizes"],
							args = {
								header1 = {
									order = 18,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								nicegap3 = {
									order = 18,
									type = "description",
									name = L["Cursor Sizes "]..'|cffff0000('..L["Requires a Reload"]..")|r",
									width = 'full',
								},
								castradius = {
									type = 'range',
									name = L["Cast Radius (Default: 25)"],
									desc = L["Set the radius of the cast cursor"],
									order = 19,
									min = 10,
									max = 50,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorcast.radius end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.radius = value end,
								},
								castthickness = {
									type = 'range',
									name = L["Cast Thickness (Default: 5)"],
									desc = L["Set the radius of the cast cursor"],
									order = 19,
									min = 1,
									max = 10,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorcast.thickness end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcast.thickness = value end,
								},
								gcdradius = {
									type = 'range',
									name = L["GCD Radius (Default: 20)"],
									desc = 'Set the radius of the gcd cursor',
									order = 19,
									min = 10,
									max = 50,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorgcd.radius end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.radius = value end,
								},
								gcdthickness = {
									type = 'range',
									name = L["GCD Thickness (Default: 5)"],
									desc = L["Set the thickness of the gcd cursor"],
									order = 19,
									min = 1,
									max = 10,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorgcd.thickness end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorgcd.thickness = value end,
								},
								cursorcursorradius = {
									type = 'range',
									name = L["Combat Cursor Radius (Default: 15)"],
									desc = L["Set the radius of the combat cursor"],
									order = 19,
									min = 10,
									max = 50,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorcursor.radius end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.radius = value end,
								},
								cursorcursorthickness = {
									type = 'range',
									name = L["Combat Cursor Thickness (Default: 5)"],
									desc = L["Set the thickness of the combat cursor"],
									order = 19,
									min = 1,
									max = 10,
									step = 1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.cursorcursor.thickness end,
									set = function(_, value) E.db.ElvUI_EltreumUI.cursorcursor.thickness = value end,
								},
							},
						},
					},
				},
				aurafilters = {
					type = 'group',
					name = L["Aura Filters"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\aurafilter',
					childGroups = "tab",
					order = 85,
					args = {
						player = {
							type = 'group',
							name = L["Player"],
							order = 2,
							args = {
								playerallbuffs = {
									order = 6,
									type = 'execute',
									name = L["All Player Buffs"],
									desc = L["Set filters to show more buffs on Player"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Everything') end,
								},
								playeralldebuffs = {
									order = 6,
									type = 'execute',
									name = L["All Player Debuffs"],
									desc = L["Set filters to show more debuffs on Player"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Everything') end,
								},
								playerEltruismbuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Player Buffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Player"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('player', 'Eltruism') end,
								},
								playerEltruismdebuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Player Debuffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Player"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('player', 'Eltruism') end,
								},
							},
						},
						target = {
							type = 'group',
							name = L["Target"],
							order = 2,
							args = {
								targetalldebuffs = {
									order = 6,
									type = 'execute',
									name = L["All Target Debuffs"],
									desc = L["Set filters to show more debuffs on Target"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Everything') end,
								},
								targetallbuffs = {
									order = 6,
									type = 'execute',
									name = L["All Target Buffs"],
									desc = L["Set filters to show more buffs on Target"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Everything') end,
								},
								targetEltruismdebuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Target Debuffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Target"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('target', 'Eltruism') end,
								},
								targetEltruismbuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Target Buffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Target"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('target', 'Eltruism') end,
								},
							},
						},
						focus= {
							type = 'group',
							name = L["Focus"],
							order = 2,
							args = {
								focusallbuffs = {
									order = 6,
									type = 'execute',
									name = L["All Focus Buffs"],
									desc = L["Set filters to show more buffs on Focus"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Everything') end,
								},
								focusalldebuffs = {
									order = 6,
									type = 'execute',
									name = L["All Focus Debuffs"],
									desc = L["Set filters to show more debuffs on Focus"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Everything') end,
								},
								focusEltruismbuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Focus Buffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Focus"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('focus', 'Eltruism') end,
								},
								focusEltruismdebuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Focus Debuffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Focus"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('focus', 'Eltruism') end,
								},
							}
						},
						boss= {
							type = 'group',
							name = L["Boss"],
							order = 2,
							args = {
								bossallbuffs = {
									order = 6,
									type = 'execute',
									name = L["All Boss Buffs"],
									desc = L["Set filters to show more buffs on Boss"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Everything') end,
								},
								bossalldebuffs = {
									order = 6,
									type = 'execute',
									name = L["All Boss Debuffs"],
									desc = L["Set filters to show more debuffs on Bosss"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Everything') end,
								},
								bossEltruismbuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Boss Buffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Boss"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('boss', 'Eltruism') end,
								},
								bossEltruismdebuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Boss Debuffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Boss"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('boss', 'Eltruism') end,
								},
							}
						},
						nameplate= {
							type = 'group',
							name = L["Nameplates"],
							order = 2,
							args = {
								nameplateallbuffs = {
									order = 6,
									type = 'execute',
									name = L["All Nameplate Buffs"],
									desc = L["Set filters to show more buffs on Nameplates"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Everything') end,
								},
								nameplatealldebuffs = {
									order = 6,
									type = 'execute',
									name = L["All Nameplate Debuffs"],
									desc = L["Set filters to show more debuffs on Nameplates"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Everything') end,
								},
								nameplateEltruismbuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Nameplate Buffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Nameplates"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupBuffs('nameplate', 'Eltruism') end,
								},
								nameplateEltruismdebuffs = {
									order = 9,
									type = 'execute',
									name = L["Eltruism Nameplate Debuffs"],
									desc = L["Set filters to be Eltruism/ElvUI defaults on Nameplates"],
									width = 'double',
									func = function() ElvUI_EltreumUI:SetupDebuffs('nameplate', 'Eltruism') end,
								},
							}
						},
					},
				},
				misc = {
					type = 'group',
					name = L["Misc"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\misc',
					order = 85,
					args = {
						header3 = {
							order = 5,
							type = "description",
							name = "Hide Raid Unitframes in battlegrounds due to addons like Battleground Enemies",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						bgUF = {
							type = 'toggle',
							name = L['Enable'],
							order = 6,
							get = function() return E.db.ElvUI_EltreumUI.otherstuff.bgunitframes end,
							set = function(_, value) E.db.ElvUI_EltreumUI.otherstuff.bgunitframes = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header122 = {
							order = 7,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						xpdatabar = {
							order = 8,
							type = "toggle",
							name = "Dynamically toggle the mouseover of the Experience Bar",
							desc = "Shows XP bar when below max level, makes it mouseover when max level",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.dynamicxpbar end,
							set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.dynamicxpbar = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header9 = {
							order = 26,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						combatextindicator = {
							order = 27,
							type = "toggle",
							name = "Enable Entering/Leaving Combat Indicator Texts",
							desc = "Adds a +Combat and -Combat for when entering and leaving combat",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.loottext.combatindicator end,
							set = function(info, value) E.db.ElvUI_EltreumUI.loottext.combatindicator = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header9987 = {
							order = 33,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						rollsound = {
							order = 34,
							type = "toggle",
							name = "Add Sounds to /roll when someone gets a 1 or a 100",
							desc = "Plays a sound if someone rolls 1 or 100 out 100",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.chat.rollsound end,
							set = function(info, value) E.db.ElvUI_EltreumUI.chat.rollsound = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\WillSmith-Ahaha.ogg", "Master") E:StaticPopup_Show('CONFIG_RL') end,
						},
						header10 = {
							order = 35,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						worldtext = {
							order = 36,
							type = "description",
							name = "Change the Scale of the World Text",
							desc = "Such as the floating XP, floating reputation changes and others",
							width = 'full',
						},
						worldtextscale = {
							type = 'range',
							name = "Select the size of the World Text",
							order = 37,
							min = 0.2,
							max = 5,
							step = 0.1,
							width = "full",
							get = function() return E.db.ElvUI_EltreumUI.otherstuff.worldtextscale end,
							set = function(_, value) E.db.ElvUI_EltreumUI.otherstuff.worldtextscale = value ElvUI_EltreumUI:WorldTextScale(value) end,
						},
						header13 = {
							order = 38,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						fastlootdesc = {
							order = 39,
							type = "description",
							name = "Loot Items Faster",
							desc = "Decrease the time it takes for auto loot to work",
							width = 'full',
						},
						fastlootenable = {
							order = 40,
							name = L['Enable'],
							type = "toggle",
							desc = "Decrease the time it takes for auto loot to work",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.fastloot end,
							set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.fastloot = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header15 = {
							order = 44,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						autossdesc = {
							order = 45,
							type = "description",
							name = "Automatically take Screenshots",
							desc = "Automatically take Screenshots",
							width = 'full',
						},
						autossenable = {
							order = 46,
							name = L['Enable'],
							type = "toggle",
							desc = "Automatically take Screenshots such as when leveling up",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.screenshot end,
							set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.screenshot = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header16 = {
							order = 50,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						blizzcombattextdesc = {
							order = 51,
							type = "description",
							name = "Blizzard Floating Combat Text",
							desc = "Enable or disable Blizzard's default Floating Combat Text",
							width = 'full',
						},
						blizzcombatexttoggle = {
							order = 52,
							name = "Disable Combat Text",
							type = "toggle",
							desc = "Enable or disable Blizzard's default Floating Combat Text",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.blizzcombattext end,
							set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.blizzcombattext = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						blizzcombatextmana = {
							order = 53,
							name = "Enable Resource Gains",
							type = "toggle",
							desc = "Enable or disable Blizzard's default Floating Combat Text for Mana/Rage/Energy and other resouces",
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.blizzcombatmana end,
							set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.blizzcombatmana = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						header197876 = {
							order = 54,
							type = "description",
							name = "Stealth",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						stealthframeoptions = {
							order = 55,
							type = 'toggle',
							name = L["Add a vignette effect while in stealth"],
							width = 'full',
							desc = L["Turn the effect on"],
							get = function(info) return E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect end,
							set = function(info, value) E.db.ElvUI_EltreumUI.stealthOptions.stealtheffect = value end,
						},
						header578 = {
							order = 56,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						apswap = {
							order = 57,
							type = 'execute',
							name = "Swap Action Paging and visibility for Bar1 and Bar4",
							--desc = "",
							width = 'full',
							confirm = true,
							func = function() ElvUI_EltreumUI:ActionPagingSwap() end,
						},
					},
				},
				skins = {
					order = 85,
					type = 'group',
					name = L["Skins"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\paint',
					childGroups = "tab",
					args = {
						general = {
							type = 'group',
							name = L["General"],
							order = 1,
							args = {
								header11 = {
									order = 32,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								zonetext = {
									order = 33,
									type = "description",
									name = "Make more texts use ElvUI font settings",
									desc = "Such as the Zones, Mail and others",
									width = 'full',
								},
								zoneenable = {
									order = 34,
									name = L['Enable'],
									type = "toggle",
									desc = "Such as the Zones, Mail and others",
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.skins.zones end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.zones = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header12 = {
									order = 35,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								questskins = {
									order = 36,
									type = "description",
									name = "Skin Objective Frame",
									desc = "Only loads when Shadow and Light and Windtools are not enabled",
									width = 'full',
								},
								questenable = {
									order = 37,
									name = L['Enable'],
									type = "toggle",
									desc = "Skin the Objective/Quest Frame",
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.skins.quests end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.quests = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header64546 = {
									order = 48,
									type = "description",
									name = L["Add a Level Up toast"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								skinenable = {
									order = 49,
									type = 'toggle',
									name = L['Enable'],
									desc = L["Enable a toast showing up when you level up"],
									get = function(info) return E.db.ElvUI_EltreumUI.skins.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								tbctalentinfo = {
									order = 50,
									type = "description",
									name = L["Expand the Talents to show the entire tree"],
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
									width = "full",
								},
								tbctalents = {
									order = 51,
									type = 'toggle',
									name = L["Expanded Talents"],
									desc = L["Expand Talents to cover the full tree"],
									get = function(info) return E.db.ElvUI_EltreumUI.tbctalents.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.tbctalents.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header8898 = {
									order = 58,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								castbarspark = {
									order = 59,
									type = "description",
									name = L["Customize the player castbar spark"],
									width = "full",
								},
								castbarsparkenable = {
									order = 60,
									type = 'toggle',
									name = L['Enable'],
									width = "full",
									desc = L["Customize Player CastBar Spark"],
									get = function(info) return E.db.ElvUI_EltreumUI.sparkcustomcolor.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.sparkcustomcolor.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								colorspark = {
									order = 61,
									type = 'color',
									name = L["Custom Color"],
									hasAlpha = false,
									disabled = function() return not E.db.ElvUI_EltreumUI.sparkcustomcolor.enable end,
									get = function()
										local glowcustomcolor = E.db.ElvUI_EltreumUI.sparkcustomcolor
										local d = P.ElvUI_EltreumUI.sparkcustomcolor
										return glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b, glowcustomcolor.a, d.r, d.g, d.b, d.a
									end,
									set = function(_, r, g, b, a)
										local glowcustomcolor = E.db.ElvUI_EltreumUI.sparkcustomcolor
										glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
									end,
								},
								sparkwidth = {
									type = 'range',
									name = L["Width"],
									desc = L["Set Width of the Spark (Default 3)"],
									order = 62,
									min = 1,
									max = 20,
									step = 1,
									--width = "double",
									disabled = function() return not E.db.ElvUI_EltreumUI.sparkcustomcolor.enable end,
									get = function() return E.db.ElvUI_EltreumUI.sparkcustomcolor.width end,
									set = function(_, value) E.db.ElvUI_EltreumUI.sparkcustomcolor.width = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						character = {
							type = 'group',
							name = L["Character"],
							order = 2,
							args = {
								headerfirst = {
									order = 1,
									type = "description",
									name = "Item Levels",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								anchorgaphere = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
								},
								skincharpanel = {
									order = 3,
									type = 'toggle',
									name = "Add Item Levels to the Character Panel",
									width = 'full',
									desc = "Enable this option",
									get = function(info) return E.db.ElvUI_EltreumUI.skins.ilvls end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.ilvls = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header831 = {
									order = 83,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ilvlanchor = {
									order = 84,
									type = 'select',
									name = "Ilvl Anchor Point",
									desc = "Choose where the Ilvl will be attach to on the items",
									values = {
										["CENTER"] = "Center",
										["LEFT"] = 'Left',
										["RIGHT"] = 'Right',
										["TOP"] = 'Top',
										["TOPLEFT"] = 'Top Left',
										["TOPRIGHT"] = 'Top Right',
										["BOTTOM"] = 'Bottom',
										["BOTTOMLEFT"] = 'Bottom Left',
										["BOTTOMRIGHT"] = 'Bottom Right',
									},
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.ilvls end,
									get = function(info) return E.db.ElvUI_EltreumUI.skins.ilvlanchor end,
									set = function(info,value) E.db.ElvUI_EltreumUI.skins.ilvlanchor = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header838 = {
									order = 85,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ilvlfontweight = {
									order = 86,
									type = 'select',
									name = "Ilvl Font Outline",
									desc = "Choose the Ilvl font outline",
									values = {
										["OUTLINE"] = "Outline",
										["THICKOUTLINE"] = 'Thick Outline',
										["MONOCHROME"] = 'Monochrome',
									},
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.ilvls end,
									get = function(info) return E.db.ElvUI_EltreumUI.skins.ilvlfontweight end,
									set = function(info,value) E.db.ElvUI_EltreumUI.skins.ilvlfontweight = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header840 = {
									order = 87,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								ilvlfontsize = {
									type = 'range',
									name = L["Ilvl Font Size"],
									desc = L["Change the Ilvl font size"],
									order = 88,
									min = 4,
									max = 72,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.ilvls end,
									get = function() return E.db.ElvUI_EltreumUI.skins.ilvlfontsize end,
									set = function(_, value) E.db.ElvUI_EltreumUI.skins.ilvlfontsize = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								headergapart = {
									order = 89,
									type = "description",
									name = "Character Panel",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								expandamory = {
									order = 90,
									type = 'toggle',
									name = "Expand Character Panel",
									width = 'full',
									desc = "Enable this option",
									get = function(info) return E.db.ElvUI_EltreumUI.skins.classicarmory end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.classicarmory = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header843 = {
									order = 91,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								autoarmorystats = {
									order = 92,
									type = 'toggle',
									name = "Automatically swap the Character Stats to your main ones",
									width = 'full',
									desc = "Enable this option",
									get = function(info) return E.db.ElvUI_EltreumUI.skins.classicarmoryautostats end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.classicarmoryautostats = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header844 = {
									order = 93,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								expandart = {
									order = 94,
									type = 'toggle',
									name = "Expand Character Art",
									width = 'full',
									desc = "Enable this option",
									get = function(info) return E.db.ElvUI_EltreumUI.skins.expandarmorybg end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.expandarmorybg = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								expandartalpha = {
									type = 'range',
									name = L["Art Alpha"],
									desc = L["Change the transparency of the Art"],
									order = 95,
									min = 0.01,
									max = 1,
									step = 0.01,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.expandarmorybg end,
									get = function() return E.db.ElvUI_EltreumUI.skins.expandarmorybgalpha end,
									set = function(_, value) E.db.ElvUI_EltreumUI.skins.expandarmorybgalpha = value  E:StaticPopup_Show('CONFIG_RL') end,
								},
								header845 = {
									order = 96,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								iconsoncharacter = {
									order = 97,
									type = 'toggle',
									name = "Add Class Icons to Character Panel",
									width = 'full',
									desc = "Enable this option",
									get = function(info) return E.db.ElvUI_EltreumUI.skins.classiconsoncharacterpanel end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.classiconsoncharacterpanel = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								blizzicons = {
									order = 98,
									type = 'toggle',
									name = "Use Blizzard Icons",
									width = 'full',
									desc = "Enable Blizzard Icons",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.classiconsoncharacterpanel or E.db.ElvUI_EltreumUI.skins.classiconsreleaf end,
									get = function(info) return E.db.ElvUI_EltreumUI.skins.classiconsblizz end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.classiconsblizz = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								releaficons= {
									order = 99,
									type = 'toggle',
									name = "Use Blizzard Icons colored by Releaf",
									width = 'full',
									desc = "Enable Releaf Icons",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.classiconsoncharacterpanel or E.db.ElvUI_EltreumUI.skins.classiconsblizz end,
									get = function(info) return E.db.ElvUI_EltreumUI.skins.classiconsreleaf end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.classiconsreleaf = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						shadows = {
							type = 'group',
							name = L["Shadows"],
							order = 2,
							args = {
								shadowsdesc = {
									order = 45,
									type = "description",
									name = "Add Shadows to Frames",
									desc = "Add Shadows to some frames",
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
									width = 'full',
								},
								shadowsenable = {
									order = 45,
									name = "Enable General Shadows",
									type = "toggle",
									desc = "Add Shadows to frames like Player, target, Chats and others",
									width = 'full',
									get = function(info) return E.db.ElvUI_EltreumUI.skins.shadows end,
									set = function(info, value) E.db.ElvUI_EltreumUI.skins.shadows = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header845 = {
									order = 46,
									type = "description",
									name = "Other Shadows (can become CPU/Memory Intensive)",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								shadowsenablenp = {
									order = 47,
									name = "Nameplate Health",
									type = "toggle",
									desc = "Add Shadows to Nameplate Healthbars",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.nameplates end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.nameplates = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenablenpauras = {
									order = 47,
									name = "Nameplate Aura",
									type = "toggle",
									desc = "Add Shadows to Nameplate Auras",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.npauras end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.npauras = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenablenpportrait = {
									order = 47,
									name = "Nameplate Portrait",
									type = "toggle",
									desc = "Add Shadows to Nameplate Portraits",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.npportrait end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.npportrait = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenablenppower = {
									order = 47,
									name = "Nameplate Power",
									type = "toggle",
									desc = "Add Shadows to Nameplate Powers",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.nppower end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.nppower = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenablenpcastbar = {
									order = 47,
									name = "Nameplate Castbar",
									type = "toggle",
									desc = "Add Shadows to Nameplate Castbars",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.npcastbar end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.npcastbar = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenableufaura = {
									order = 47,
									name = "Unitframe Aura",
									type = "toggle",
									desc = "Add Shadows to Unitframe Auras",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.ufaura end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.ufaura = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenableab = {
									order = 47,
									name = "ActionBars",
									type = "toggle",
									desc = "Add Shadows to Actionbars",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.actionbars end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.actionbars = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								shadowsenableaura = {
									order = 47,
									name = "Aura",
									type = "toggle",
									desc = "Add Auras (Aura list next to the minimap)",
									disabled = function() return not E.db.ElvUI_EltreumUI.skins.shadows end,
									get = function(info) return E.db.ElvUI_EltreumUI.shadows.aura end,
									set = function(info, value) E.db.ElvUI_EltreumUI.shadows.aura = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				quests = {
					type = 'group',
					name = L["Quests"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\quest',
					order = 85,
					args = {
						headergaphere = {
							order = 1,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						autoaccept = {
							order = 2,
							type = 'toggle',
							name = L["Enable Automatically accepting/turning in Quests when not holding CTRL/SHIFT/ALT"],
							desc = L["You will automatically accept and turn in quests that do not require gold, are not weekly and are not daily"],
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.autoaccept end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.autoaccept= value E:StaticPopup_Show('CONFIG_RL') end,
						},
						autoacceptinvert = {
							order = 3,
							type = 'toggle',
							name = L["Invert CTRL/SHIFT/ALT"],
							desc = L["You will only accept and turn in quests if you hold CTRL/SHIFT/ALT while talking to the NPC"],
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.autoacceptinvert end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.autoacceptinvert = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						headergaphereitembar = {
							order = 4,
							type = "description",
							name = L["Quest Item Bar"],
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						questitembar = {
							order = 5,
							type = 'toggle',
							name = L["Enable Quest Item Bar"],
							desc = L["Add a Quest Item bar, keybind can be changed in Key Bindings > ElvUI Eltruism"],
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.questitems end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.questitems = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						questitembarab1 = {
							order = 6,
							type = 'toggle',
							name = L["Quest Item Bar follows visibility settings for ElvUI Action Bar 1"],
							desc = L["The Quest Item Bar will appear only when ElvUI Action Bar 1 appears, following its settings"],
							width = 'full',
							disabled = function() return (not E.db.ElvUI_EltreumUI.questsettings.questitems) or E.db.ElvUI_EltreumUI.questsettings.questitemsfade end,
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.questitemsbar1 end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.questitemsbar1 = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						questitembarmouseover = {
							order = 7,
							type = 'toggle',
							name = L["Quest Item Bar Button Mouse Over"],
							desc = L["Each Button in the Quest Item Bar will appear only if the cursor is over it"],
							width = 'full',
							disabled = function() return (not E.db.ElvUI_EltreumUI.questsettings.questitems) or E.db.ElvUI_EltreumUI.questsettings.questitemsbar1 end,
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.questitemsfade end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.questitemsfade = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						questitemsbarsize = {
							type = 'range',
							name = L["Quest Item Bar Button Size"],
							desc = L["Change the size of the button on the Quest Item Bar"],
							order = 8,
							min = 10,
							max = 100,
							step = 1,
							width = "double",
							disabled = function() return not E.db.ElvUI_EltreumUI.questsettings.questitems end,
							get = function() return E.db.ElvUI_EltreumUI.questsettings.questitemsize end,
							set = function(_, value) E.db.ElvUI_EltreumUI.questsettings.questitemsize = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						headergaphere2 = {
							order = 95,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						questsettings = {
							order = 96,
							type = 'toggle',
							name = L["Collapse Quests during Encounters/Boss Fights"],
							desc = L["Collapse Quests when the boss fight starts"],
							width = 'full',
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.enable end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.enable = value E:StaticPopup_Show('CONFIG_RL') end,
						},
						headergaphere2 = {
							order = 97,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						questcombatsettings = {
							order = 98,
							type = 'toggle',
							width = 'full',
							name = L["Collapse Quests during any combat event"],
							desc = L["Collapse Quests when you enter combat"],
							get = function(info) return E.db.ElvUI_EltreumUI.questsettings.combatenable end,
							set = function(info, value) E.db.ElvUI_EltreumUI.questsettings.combatenable = value E:StaticPopup_Show('CONFIG_RL') end,
						},
					},
				},
				profiles = {
					type = 'group',
					name = L["Addons"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\addon',
					order = 85,
					childGroups = "tab",
					args = {
						elvui = {
							type = 'group',
							name = L["ElvUI Plugins"],
							order = 1,
							args = {
								header1 = {
									order = 1,
									type = "description",
									name = "Azilroka Addons",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								addonskins = {
									order = 2,
									type = 'execute',
									name = '|cff16C3F2AddOn|r|cFFFFFFFFSkins|r',
									desc = L["Reset to Eltruism defaults."],
									confirm = true,
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupAS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								projectazilroka = {
									order = 3,
									type = 'execute',
									name = '|cFF16C3F2Project|r|cFFFFFFFFAzilroka|r',
									desc = L["Reset to Eltruism defaults."],
									confirm = true,
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupPA() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						bossmods = {
							type = 'group',
							name = L["BossMods Profiles"],
							order = 2,
							args = {
								header1 = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bigwigs = {
									order = 2,
									type = 'execute',
									name = 'BigWigs',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupBW() E:StaticPopup_Show('CONFIG_RL') end,
								},
								dbm = {
									order = 2,
									type = 'execute',
									name = 'DBM',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupDBM() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
						addons = {
							type = 'group',
							name = L["Addon Profiles"],
							order = 3,
							args = {
								header1 = {
									order = 1,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								dynamiccam = {
									order = 2,
									type = 'execute',
									name = 'Dynamic Cam',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupDynamicCam() E:StaticPopup_Show('CONFIG_RL') end,
								},
								header3 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								immersion = {
									order = 4,
									type = 'execute',
									name = 'Immersion',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupImmersion() E:StaticPopup_Show('CONFIG_RL') end,
								},
								header5 = {
									order = 5,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								nameplatesct = {
									order = 6,
									type = 'execute',
									name = 'NameplateSCT',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupNameplateSCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								fct = {
									order = 6,
									type = 'execute',
									name = 'ElvUI Floating Combat Text',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupFCT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								header7 = {
									order = 7,
									type = "description",
									name = "Details Profiles",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								details = {
									order = 8,
									type = 'execute',
									name = 'Details v1 - Blizzard Flat Icons',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupDT() E:StaticPopup_Show('CONFIG_RL') end,
								},
								details2 = {
									order = 9,
									type = 'execute',
									name = 'Details v2 - Releaf Transparent Icons',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupDTReleaf() E:StaticPopup_Show('CONFIG_RL') end,
								},
								details3 = {
									order = 10,
									type = 'execute',
									name = 'Details v3 - Releaf Solid Icons',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupDTReleafv3() E:StaticPopup_Show('CONFIG_RL') end,
								},
								header11 = {
									order = 11,
									type = "description",
									name = "Details Profiles",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								questie = {
									order = 12,
									type = 'execute',
									name = 'Questie',
									desc = L["Reset to Eltruism defaults."],
									width = 'double',
									func = function() ElvUI_EltreumUI:AddonSetupQuestie() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				combatmusic = {
					type = 'group',
					name = L["Combat Music"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
					order = 85,
					args = {
						header1 = {
							order = 11,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						moremusicsettings = {
							order = 1,
							type = 'group',
							inline = true,
							name = L["Play music during combat"],
							args = {
								enable = {
									order = 1,
									type = 'toggle',
									name = L["Enable Combat Music"],
									desc = L["Enable music during combat"],
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.enable end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								enableboss = {
									order = 1,
									type = 'toggle',
									name = L["Enable Boss Music"],
									desc = L["Enable music during combat"],
									width = 'full',
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.bossmusic end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.bossmusic = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								instancemusic = {
									order = 2,
									type = 'toggle',
									name = L["Disable Combat Music in Instances"],
									desc = L["Disable music during combat in instances"],
									width = 'full',
									disabled = function() return not E.private.ElvUI_EltreumUI.combatmusic.enable end,
									get = function(info) return E.private.ElvUI_EltreumUI.combatmusic.disableinstance end,
									set = function(info, value) E.private.ElvUI_EltreumUI.combatmusic.disableinstance = value E:StaticPopup_Show('PRIVATE_RL') end,
								},
								header2 = {
									order = 2,
									type = "description",
									name = "Normal Combat Music",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								combatpathtofile = {
									order = 3,
									type = 'group',
									inline = true,
									name = L["Name of file inside Interface\\Addons"],
									args = {
										howtomusic = {
										order = 2,
										type = "description",
										name = L["Example: "].."mymusic.mp3",
										},
										somegap = {
											order = 3,
											type = "description",
											name = "",
										},
										soundpath = {
											order = 6,
											icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
											type = 'input',
											name = '',
											desc = '',
											width = 'full',
											get = function() return E.private.ElvUI_EltreumUI.combatmusic.musicfile end,
											set = function(_, value) E.private.ElvUI_EltreumUI.combatmusic.musicfile = value E:StaticPopup_Show('PRIVATE_RL') end,
										}
									}
								},
								header3 = {
									order = 6,
									type = "description",
									name = "Boss Combat Music",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bosspathtofile = {
									order = 7,
									type = 'group',
									inline = true,
									name = L["Name of file inside Interface\\Addons"],
									args = {
										howtomusic = {
										order = 2,
										type = "description",
										name = L["Example: "].."mymusic.mp3",
										},
										somegap = {
											order = 3,
											type = "description",
											name = "",
										},
										soundpath = {
											order = 6,
											icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\music',
											type = 'input',
											name = '',
											desc = '',
											width = 'full',
											get = function() return E.private.ElvUI_EltreumUI.combatmusic.bossfile end,
											set = function(_, value) E.private.ElvUI_EltreumUI.combatmusic.bossfile = value E:StaticPopup_Show('PRIVATE_RL') end,
										}
									}
								},
							},
						},
					},
				},
				actionbars = {
					type = 'group',
					name = L["Custom Glow"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\customglow',
					order = 85,
					args = {
						glow = {
							type = 'group',
							name = L["Replace Blizzards Default Glow with a Custom Glow"],
							guiInline = true,
							order = 1,
							args = {
								enablepet = {
									type = 'toggle',
									name = "Enable on Pet Bar",
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.glow.enablepet end,
									set = function(_, value) E.db.ElvUI_EltreumUI.glow.enablepet = value end,
								},
								enablenp = {
									order = 1,
									type = 'toggle',
									name = "Enable on Nameplate",
									desc = "Add a glow when buffs or debuffs are expiring on nameplates",
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.widenameplate.npglow end,
									set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.npglow = value end,
								},
								previewgap = {
									order = 2,
									type = "description",
									name = "",
									width = 'full',
									--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								preview ={
									order = 4,
									type = "execute",
									name = "Preview",
									desc = "Preview the Glow, you will need to toggle it off and on to update the glow",
									func = function() ElvUI_EltreumUI:PreviewGlow() end,
								},
								headerline1 = {
									order = 96,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								procselection = {
									order = 97,
									type = 'group',
									name = L["Select a Type"],
										args = {
											autocast = {
												type = 'toggle',
												name = L["Autocast"],
												order = 10,
												desc = 'Adds an autocast style glow using class color',
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.pixel or E.db.ElvUI_EltreumUI.glow.blizzard end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.autocast end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.autocast = value end,
											},
											pixel = {
												type = 'toggle',
												name = L["Pixel"],
												order = 10,
												desc = 'Adds a pixel style glow using class color',
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.blizzard end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.pixel end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.pixel = value end,
											},
											blizzard = {
												type = 'toggle',
												name = 'Blizzard',
												order = 10,
												desc = L["Adds a Blizzard style glow using class color"],
												disabled = function() return not E.db.ElvUI_EltreumUI.glow.enable or E.db.ElvUI_EltreumUI.glow.autocast or E.db.ElvUI_EltreumUI.glow.pixel end,
												get = function(info) return E.db.ElvUI_EltreumUI.glow.blizzard end,
												set = function(info, value) E.db.ElvUI_EltreumUI.glow.blizzard = value end,
											},
										},
								},
								headerline2 = {
									order = 98,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customoptionsglow = {
									order = 99,
									type = 'group',
									name = L["Glow Colors"],
									args = {
										headerline1 = {
											order = 1,
											type = "description",
											name = "Action Bars",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										classcolorab = {
											type = 'toggle',
											name = L["Use Class Colors"],
											order = 3,
											desc = L["Toggle Class Colored glows"],
											get = function() return E.db.ElvUI_EltreumUI.glow.colorclass end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.colorclass = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorab = {
											order = 4,
											type = 'color',
											name = L["Custom Color"],
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.glow.colorclass end,
											get = function()
												local glowcustomcolor = E.db.ElvUI_EltreumUI.glowcustomcolor
												local d = P.ElvUI_EltreumUI.glowcustomcolor
												return glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b, glowcustomcolor.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local glowcustomcolor = E.db.ElvUI_EltreumUI.glowcustomcolor
												glowcustomcolor.r, glowcustomcolor.g, glowcustomcolor.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
											end,
										},
										headerline2 = {
											order = 5,
											type = "description",
											name = "Pet Bar",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										classcolorpet = {
											type = 'toggle',
											name = L["Use Class Colors"],
											order = 6,
											desc = L["Toggle Class Colored glows"],
											get = function() return E.db.ElvUI_EltreumUI.glow.colorclasspet end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.colorclasspet = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colorpet = {
											order = 7,
											type = 'color',
											name = L["Custom Color"],
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.glow.colorclasspet end,
											get = function()
												local glowcustomcolorpet = E.db.ElvUI_EltreumUI.glowcustomcolorpet
												local d = P.ElvUI_EltreumUI.glowcustomcolorpet
												return glowcustomcolorpet.r, glowcustomcolorpet.g, glowcustomcolorpet.b, glowcustomcolorpet.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local glowcustomcolorpet = E.db.ElvUI_EltreumUI.glowcustomcolorpet
												glowcustomcolorpet.r, glowcustomcolorpet.g, glowcustomcolorpet.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
											end,
										},
										headerline3 = {
											order = 8,
											type = "description",
											name = "Nameplate Buff/Debuff",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										classcolornp = {
											type = 'toggle',
											name = L["Use Class Colors"],
											order = 9,
											desc = L["Toggle Class Colored glows"],
											get = function() return E.db.ElvUI_EltreumUI.glow.colorclassnp end,
											set = function(_, value) E.db.ElvUI_EltreumUI.glow.colorclassnp = value E:StaticPopup_Show('CONFIG_RL') end,
										},
										colornp = {
											order = 10,
											type = 'color',
											name = L["Custom Color"],
											hasAlpha = false,
											disabled = function() return E.db.ElvUI_EltreumUI.glow.colorclassnp end,
											get = function()
												local glowcustomcolornp = E.db.ElvUI_EltreumUI.glowcustomcolornp
												local d = P.ElvUI_EltreumUI.glowcustomcolornp
												return glowcustomcolornp.r, glowcustomcolornp.g, glowcustomcolornp.b, glowcustomcolornp.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local glowcustomcolornp = E.db.ElvUI_EltreumUI.glowcustomcolornp
												glowcustomcolornp.r, glowcustomcolornp.g, glowcustomcolornp.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
											end,
										},
									},
								},
							},
						},
					},
				},
				borders = {
					type = 'group',
					name = L["Borders"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\border',
					order = 85,
					childGroups = "tab",
					args = {
						general = {
							type = 'group',
							name = L["General"],
							order = 1,
							args = {
								headerline1 = {
									order = 1,
									type = "description",
									name = "Enable Borders",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								enable = {
									type = 'toggle',
									name = L["Enable"],
									width = "full",
									order = 2,
									get = function() return E.db.ElvUI_EltreumUI.borders.borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.borders = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								headerline2 = {
									order = 3,
									type = "description",
									name = "Choose the Border Texture to be used:",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								sharedmediatexture = {
									order = 4,
									type = 'select',
									width = "full",
									dialogControl = 'LSM30_Border',
									name = "",
									desc = L["Select a Texture"],
									values = AceGUIWidgetLSMlists.border,
									get = function() return E.db.ElvUI_EltreumUI.borders.texture end,
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
									set = function(self,key) E.db.ElvUI_EltreumUI.borders.texture = key end,
								},
								classcolors = {
									type = 'toggle',
									name = L["Use Class Colors"],
									--width = "full",
									order = 5,
									get = function() return E.db.ElvUI_EltreumUI.borders.classcolor end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.classcolor = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								colorborders = {
									order = 6,
									type = 'color',
									name = L["Custom Color"],
									hasAlpha = false,
									disabled = function() return E.db.ElvUI_EltreumUI.borders.classcolor end,
									get = function()
										local customcolorborders = E.db.ElvUI_EltreumUI.bordercolors
										local d = P.ElvUI_EltreumUI.bordercolors
										return customcolorborders.r, customcolorborders.g, customcolorborders.b, customcolorborders.a, d.r, d.g, d.b, d.a
									end,
									set = function(_, r, g, b, a)
										local customcolorborders = E.db.ElvUI_EltreumUI.bordercolors
										customcolorborders.r, customcolorborders.g, customcolorborders.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
									end,
								},
								headerline3 = {
									order = 7,
									type = "description",
									name = "Change the size of the borders:",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								borderABsize = {
									type = 'range',
									name = "ActionBar Thickness",
									order = 8,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.actionbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.baredgesize end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.baredgesize = value end,
								},
								borderUFsize = {
									type = 'range',
									name = "Unitframe Thickness",
									order = 9,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.playertargetsize end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.playertargetsize = value end,
								},
							},
						},
						actionbarsborders = {
							order = 2,
							type = 'group',
							--inline = true,
							name = L["ActionBars"],
							childGroups = "tab",
							args = {
								gap0 = {
									order = 1,
									type = "description",
									name = "(All settings require a reload)",
									width = 'full',
									--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								gap1 = {
									order = 5,
									type = "description",
									name = "Action Bar 1",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar1enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 6,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar1borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1borders = value end,
								},
								bar1xsize = {
									type = 'range',
									name = "Bar 1 X offset",
									order = 7,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar1xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1xborder = value end,
								},
								bar1ysize = {
									type = 'range',
									name = "Bar 1 Y offset",
									order = 7,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar1yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1yborder = value end,
								},
								gap2 = {
									order = 8,
									type = "description",
									name = "Action Bar 2",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar2enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 9,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar2borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2borders = value end,
								},
								bar2xsize = {
									type = 'range',
									name = "Bar 2 X offset",
									order = 10,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar2xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2xborder = value end,
								},
								bar2ysize = {
									type = 'range',
									name = "Bar 2 Y offset",
									order = 10,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar2yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2yborder = value end,
								},
								gap3 = {
									order = 11,
									type = "description",
									name = "Action Bar 3",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar3enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 12,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar3borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3borders = value end,
								},
								bar3xsize = {
									type = 'range',
									name = "Bar 3 X offset",
									order = 13,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar3xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3xborder = value end,
								},
								bar3ysize = {
									type = 'range',
									name = "Bar 3 Y offset",
									order = 13,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar3yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3yborder = value end,
								},
								gap4 = {
									order = 14,
									type = "description",
									name = "Action Bar 4",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar4enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 15,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar4borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4borders = value end,
								},
								bar4xsize = {
									type = 'range',
									name = "Bar 4 X offset",
									order = 16,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar4xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4xborder = value end,
								},
								bar4ysize = {
									type = 'range',
									name = "Bar 4 Y offset",
									order = 16,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar4yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4yborder = value end,
								},
								gap5 = {
									order = 17,
									type = "description",
									name = "Action Bar 5",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar5enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 18,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar5borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5borders = value end,
								},
								bar5xsize = {
									type = 'range',
									name = "Bar 5 X offset",
									order = 19,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar5xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5xborder = value end,
								},
								bar5ysize = {
									type = 'range',
									name = "Bar 5 Y offset",
									order = 19,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar5yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5yborder = value end,
								},
								gap6 = {
									order = 20,
									type = "description",
									name = "Action Bar 6",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bar6enable = {
									type = 'toggle',
									name = L["Enable"],
									order = 21,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar6borders end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6borders = value end,
								},
								bar6xsize = {
									type = 'range',
									name = "Bar 6 X offset",
									order = 22,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar6xborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6xborder = value end,
								},
								bar6ysize = {
									type = 'range',
									name = "Bar 6 Y offset",
									order = 22,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
									get = function() return E.db.ElvUI_EltreumUI.borders.bar6yborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6yborder = value end,
								},
							},
						},
						ufborders = {
							type = 'group',
							name = L["Unitframes"],
							order = 2,
							args = {
								gap0 = {
									order = 1,
									type = "description",
									name = "(All settings require a reload)",
									width = 'full',
									--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								gaptarget = {
									order = 23,
									type = "description",
									name = "Target Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bartarget = {
									type = 'toggle',
									name = L["Enable"],
									order = 24,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.targetborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.targetborder = value end,
								},
								borderxtarget = {
									type = 'range',
									name = "Border X offet",
									order = 25,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xtarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xtarget = value end,
								},
								borderytarget = {
									type = 'range',
									name = "Border Y offset",
									order = 25,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.ytarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.ytarget = value end,
								},
								gapplayer = {
									order = 26,
									type = "description",
									name = "Player Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								barplayer = {
									type = 'toggle',
									name = L["Enable"],
									order = 27,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.playerborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.playerborder = value end,
								},
								borderxplayer = {
									type = 'range',
									name = "Border X offset",
									order = 28,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xplayer end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xplayer = value end,
								},
								borderyplayer = {
									type = 'range',
									name = "Border Y offset",
									order = 28,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.yplayer end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.yplayer = value end,
								},
								gapplayercast = {
									order = 29,
									type = "description",
									name = "Player Castbar Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								barcastplayer = {
									type = 'toggle',
									name = L["Enable"],
									order = 30,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.playercastborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.playercastborder = value end,
								},
								borderxcastplayer = {
									type = 'range',
									name = "Border X offset",
									order = 31,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xplayercast end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xplayercast = value end,
								},
								borderycastplayer = {
									type = 'range',
									name = "Border Y offset",
									order = 31,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.yplayercast end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.yplayercast = value end,
								},
								gaptargetcast = {
									order = 32,
									type = "description",
									name = "Target Castbar Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bartargetcast = {
									type = 'toggle',
									name = L["Enable"],
									order = 33,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.targetcastborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.targetcastborder = value end,
								},
								borderxcasttarget = {
									type = 'range',
									name = "Border X offset",
									order = 34,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xcasttarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xcasttarget = value end,
								},
								borderycasttarget = {
									type = 'range',
									name = "Border Y offset",
									order = 34,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.ycasttarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.ycasttarget = value end,
								},
								gaptargettarget = {
									order = 35,
									type = "description",
									name = "Target of Target Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bartargettarget = {
									type = 'toggle',
									name = L["Enable"],
									order = 36,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.targettargetborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetborder = value end,
								},
								borderxtargettarget = {
									type = 'range',
									name = "Border X offset",
									order = 37,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xtargettarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xtargettarget = value end,
								},
								borderytargettarget = {
									type = 'range',
									name = "Border Y offset",
									order = 38,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
									get = function() return E.db.ElvUI_EltreumUI.borders.ytargettarget end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.ytargettarget = value end,
								},
							},
						},
						npborder = {
							type = 'group',
							name = L["Nameplate"],
							order = 3,
							args = {
								gap0 = {
									order = 1,
									type = "description",
									name = "(All settings require a reload)",
									width = 'full',
									--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								gappowerbar = {
									order = 35,
									type = "description",
									name = "Nameplate Power Bar Border",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								barpowerbar = {
									type = 'toggle',
									name = L["Enable"],
									order = 36,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
									get = function() return E.db.ElvUI_EltreumUI.borders.powerbarborder end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarborder = value end,
								},
								borderpowerbarsize = {
									type = 'range',
									name = "Nameplate Power Bar Thickness",
									order = 37,
									min = 1,
									max = 200,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
									get = function() return E.db.ElvUI_EltreumUI.borders.powerbarsize end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarsize = value end,
								},
								borderxpowerbar = {
									type = 'range',
									name = "Border X offset",
									order = 38,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
									get = function() return E.db.ElvUI_EltreumUI.borders.xpowerbar end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.xpowerbar = value end,
								},
								borderypowerbar = {
									type = 'range',
									name = "Border Y offset",
									order = 39,
									min = 1,
									max = 800,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
									get = function() return E.db.ElvUI_EltreumUI.borders.ypowerbar end,
									set = function(_, value) E.db.ElvUI_EltreumUI.borders.ypowerbar = value end,
								},
							},
						}
					},
				},
				cvars = {
					order = 85,
					type = 'group',
					name = L["CVars"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\cvar',
					args = {
						header1 = {
							order = 1,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						setup = {
							order = 2,
							type = 'group',
							inline = true,
							name = L["Setup CVars"],
							args = {
								generalVars = {
									order = 1,
									type = 'execute',
									name = L["General CVars"],
									func = function() ElvUI_EltreumUI:SetupCVars() ElvUI_EltreumUI:NameplateCVars() end,
									confirm = true,
								},
							},
						},
						generalDesc = {
							order = 3,
							type = 'group',
							inline = true,
							name = L["It will set these CVars:"],
							args = {
								cvarslist = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = '- autoLootDefault 1\n- ShowClassColorInFriendlyNameplate 1\n- removeChatDelay 1\n- autoQuestWatch 1\n- cameraDistanceMaxZoomFactor 2.6\n- nameplateLargerScale 1.2\n- nameplateMaxDistance 60\n- nameplateMinAlpha 1\n- nameplateMinScale 1\n- nameplateMotion 1\n- nameplateOccludedAlphaMult 0\n- nameplateOverlapH 0.8\n- nameplateOverlapV 1.1\n- nameplateSelectedScale 1\n- nameplateSelfAlpha 1\n- nameplateShowFriendlyMinions 0\n- nameplateOtherBottomInset 0.02\n- nameplateOtherTopInset 0.1\n- nameplateTargetRadialPosition 1\n- nameplateTargetBehindMaxDistance 40\n- UnitNameEnemyGuardianName 0\n- UnitNameEnemyMinionName 0\n- UnitNameEnemyPetName 0\n- UnitNameEnemyPlayerName 1\n- UnitNameEnemyTotemName 1\n- UnitNameNPC 1',
								},
							},
						},
						header2 = {
							order = 4,
							type = "description",
							name = "Customize CVars",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						nameplateOtherBottomInset = {
							type = 'range',
							name = L["Nameplate Other Bottom Inset"],
							desc = L["In screen % the inset from the Bottom"],
							order = 5,
							min = 0.01,
							max = 1,
							step = 0.01,
							width = "full",
							get = function() return E.db.ElvUI_EltreumUI.cvars.nameplateOtherBottomInset end,
							set = function(_, value) E.db.ElvUI_EltreumUI.cvars.nameplateOtherBottomInset = value SetCVar('nameplateOtherBottomInset', value) end,
						},
						nameplateOtherTopInset = {
							type = 'range',
							name = L["Nameplate Other Top Inset"],
							desc = L["In screen % the inset from the Top"],
							order = 5,
							min = 0.01,
							max = 1,
							step = 0.01,
							width = "full",
							get = function() return E.db.ElvUI_EltreumUI.cvars.nameplateOtherTopInset end,
							set = function(_, value) E.db.ElvUI_EltreumUI.cvars.nameplateOtherTopInset = value SetCVar('nameplateOtherTopInset', value) end,
						},
						nameplateTargetRadialPosition = {
							order = 5,
							type = 'select',
							name = L["Nameplate Target Radial Position"],
							desc = L["When target is off screen, position its nameplate radially around sides and bottom."],
							width = "full",
							values = {
								['1'] = L["Target Only"],
								['2'] = L["All in Combat"],
							},
							style = 'radio',
							get = function() return E.db.ElvUI_EltreumUI.cvars.nameplateTargetRadialPosition end,
							set = function(_, value) E.db.ElvUI_EltreumUI.cvars.nameplateTargetRadialPosition = value SetCVar('nameplateTargetRadialPosition', value) end,
						},
						cameraDistanceMaxZoomFactor = {
							type = 'range',
							name = L["Camera Distance Max Zoom Factor"],
							desc = L["Maximum Camera Zoom Out"],
							order = 5,
							min = 1,
							max = 2.6,
							step = 0.1,
							width = "full",
							get = function() return E.db.ElvUI_EltreumUI.cvars.cameraDistanceMaxZoomFactor end,
							set = function(_, value) E.db.ElvUI_EltreumUI.cvars.cameraDistanceMaxZoomFactor = value SetCVar('cameraDistanceMaxZoomFactor', value) end,
						},
					},
				},
				partyraidsettings = {
					type = 'group',
					name = L["Party/Raid"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\party',
					order = 85,
					args = {
						partyraiddeath = {
							type = 'group',
							name = L["Play a sound when someone dies in Party or Raid"],
							guiInline = true,
							order = 10,
							args = {
								enable = {
								type = 'toggle',
								name = L["Enable"],
								order = 1,
								get = function() return E.db.ElvUI_EltreumUI.partyraiddeath.enable end,
								set = function(_, value) E.db.ElvUI_EltreumUI.partyraiddeath.enable = value end,
								},
								addagaphere = {
								order = 2,
								type = "description",
								name = "",
								},
								addanothergapforfun = {
								order = 2,
								type = "description",
								name = "",
								},
								soundselection = {
								order = 2,
								type = 'group',
								name = L["Select a Sound"],
									args = {
										yetanothergap = {
										order = 2,
										type = "description",
										name = "",
										},
										bruh = {
											type = 'toggle',
											name = 'Bruh',
											order = 5,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.bruh end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.bruh = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\bruh.ogg", "Dialog") end,
										},
										robloxoof = {
											type = 'toggle',
											name = 'Oof',
											order = 6,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\oof.ogg", "Dialog") end,
										},
										shame = {
											type = 'toggle',
											name = 'Shame',
											order = 13,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.shame end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.shame = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\shame.ogg", "Dialog") end,
										},
										wowsound = {
											type = 'toggle',
											name = 'Wow',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.mario or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.wow end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.wow = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\wow.ogg", "Dialog") end,
										},
										mariosound = {
											type = 'toggle',
											name = 'Mario',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.mario = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\mariodeath.ogg", "Dialog") end,
										},
										ionsound = {
											type = 'toggle',
											name = 'Ion',
											order = 14,
											disabled = function() return not E.db.ElvUI_EltreumUI.partyraiddeath.enable or E.db.ElvUI_EltreumUI.partyraiddeath.bruh or E.db.ElvUI_EltreumUI.partyraiddeath.robloxoof or E.db.ElvUI_EltreumUI.partyraiddeath.shame or E.db.ElvUI_EltreumUI.partyraiddeath.wow or E.db.ElvUI_EltreumUI.partyraiddeath.mario end,
											get = function(info) return E.db.ElvUI_EltreumUI.partyraiddeath.ion end,
											set = function(info, value) E.db.ElvUI_EltreumUI.partyraiddeath.ion = value PlaySoundFile("Interface\\AddOns\\ElvUI_EltreumUI\\Media\\sound\\ionskillissue.ogg", "Dialog") end,
										},
									},
								},
							},
						},
						headergaphere = {
							order = 11,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						grouplayout = {
							type = 'group',
							name = L["Alternative unitframe layouts"],
							guiInline = true,
							order = 12,
							args = {
								layoutdescription = {
										order = 1,
										type = 'description',
										fontSize = 'medium',
										name = L["DPS/Tank layouts were created with pure dps classes in mind, if you play a class with more raid cooldowns like a Shaman, Druid or Paladin you might want to use the alternative layout in order to make it easier for you to use your cooldowns on the members of your group"],
								},
								alternativegroups = {
									order = 2,
									type = 'execute',
									name = L["Alternative Layout"],
									func = function() ElvUI_EltreumUI:AlternativeGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
								originalgroups = {
									order = 3,
									type = 'execute',
									name = L["Original Layout"],
									func = function() ElvUI_EltreumUI:OriginalGroupsDPS() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				maps = {
					type = 'group',
					name = L["Maps"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\map',
					order = 85,
					args = {
						header3 = {
							order = 5,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						mapcombathide = {
							order = 6,
							type = 'group',
							inline = true,
							name = L["Minimap"],
							args = {
								explainer4 = {
									order = 4,
									type = "description",
									name = 'Hide Minimap while in Combat',
								},
								enable = {
									order = 5,
									type = 'toggle',
									name = L['Enable'],
									desc = L["Automatically hide the Minimap in combat"],
									get = function(info) return E.db.ElvUI_EltreumUI.otherstuff.mapcombathide end,
									set = function(info, value) E.db.ElvUI_EltreumUI.otherstuff.mapcombathide = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				media = {
					type = 'group',
					name = L["Media"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\media',
					order = 85,
					args = {
						header7 = {
							order = 1,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						mediaoptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = L["Setup Media"],
							width = 'full',
							args = {
								private = {
									order = 1,
									type = 'execute',
									name = L["Reset all Media"],
									desc = L["Reset Fonts, Textures, Skins to Eltreum UI defaults."],
									width = 'full',
									func = function() ElvUI_EltreumUI:SetupPrivate() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header1 = {
								order = 3,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontdescription= {
								order = 3,
								type = "description",
								name = L["Set the fonts used in Eltruism. Kimberley is the default font"],
								},
								kimberley = {
									order = 4,
									type = 'execute',
									name = 'Kimberley',
									desc = L["This will set all ElvUI fonts as Kimberley"],
									func = function() ElvUI_EltreumUI:SetupFontsKimberley() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								exo2 = {
									order = 5,
									type = 'execute',
									name = 'Exo2',
									desc = L["This will set all ElvUI fonts as Exo2"],
									func = function() ElvUI_EltreumUI:SetupFontsExo2() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforfonts = {
								order = 6,
								type = "description",
								name = "",
								--width = "full",
								},
								gotham = {
									order = 7,
									type = 'execute',
									name = 'Gotham',
									desc = L["This will set all ElvUI fonts as Gotham"],
									func = function() ElvUI_EltreumUI:SetupFontsGotham() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								roboto = {
									order = 7,
									type = 'execute',
									name = 'Roboto',
									desc = L["This will set all ElvUI fonts as Roboto"],
									func = function() ElvUI_EltreumUI:SetupFontsRoboto() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								addagaphereforcustom = {
								order = 8,
								type = "description",
								name = "If using Light mode you will need to reapply it after choosing a custom font",
								},
								sharedmediafont = {
									 order = 8,
									 type = 'select',
									 width = "double",
									 dialogControl = 'LSM30_Font',
									 name = L["Or choose a custom font"],
									 desc = L["Choose a different font from the preselected ones"],
									 values = AceGUIWidgetLSMlists.font,
									 get = function()
										return E.db.ElvUI_EltreumUI.fonts.playerfont
									 end,
									 set = function(self,fontvalue)
										E.db.ElvUI_EltreumUI.fonts.playerfont = fontvalue
										ElvUI_EltreumUI:SetupCustomFont(fontvalue)
									 end,
								},
								addagaphereforoutlines = {
								order = 9,
								type = "description",
								name = "",
								},
								addagaphereagain = {
								order = 9,
								type = "description",
								name = "",
								},
								header3 = {
								order = 10,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								fontoutline = {
								order = 11,
								type = "description",
								name = L["Set the Font Outlines everywhere. Use Default to return to Eltruism default settings"],
								width = "full",
								},
								default = {
									order = 12,
									type = 'execute',
									name = L["Defaults"],
									desc = L["This will set fonts to Eltruism defaults, recommended for 4K"],
									func = function() ElvUI_EltreumUI:SetupFontsOutlineDefault() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								none = {
									order = 12,
									type = 'execute',
									name = L["None"],
									desc = L["This will set fonts to no outline"],
									func = function() ElvUI_EltreumUI:SetupFontsOutlineNone() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								outlinegap = {
								order = 13,
								type = "description",
								name = "",
								},
								outline = {
									order = 13,
									type = 'execute',
									name = L["Outline"],
									desc = L["This will set fonts to use outline, recommended for 1440p and 1080p"],
									func = function() ElvUI_EltreumUI:SetupFontsOutlineOutline() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								thick = {
									order = 13,
									type = 'execute',
									name = L["Thick Outline"],
									desc = L["This will set fonts to use thick outline"],
									func = function() ElvUI_EltreumUI:SetupFontsOutlineThick() E:StaggeredUpdateAll(nil, true) E:StaticPopup_Show('CONFIG_RL') end,
									confirm = true,
								},
								header4 = {
								order = 14,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								darklightmode = {
								order = 15,
								type = "description",
								name = L["Change the look of frames to Dark or Light mode"],
								width = "full",
								},
								textureadjust = {
									order = 16,
									type = 'toggle',
									name = "Auto Adjust Textures",
									desc = "Automatically adjust textures for the current mode",
									get = function(info) return E.db.ElvUI_EltreumUI.modetexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.modetexture = value end,
								},
								dark = {
									order = 17,
									type = 'execute',
									name = L["Dark Mode"],
									desc = L["This will set colors to black with class colors when losing health"],
									func = function() ElvUI_EltreumUI:DarkMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								light = {
									order = 18,
									type = 'execute',
									name = L["Light Mode"],
									desc = L["This will set colors to class based with black backgrounds when losing health"],
									func = function() ElvUI_EltreumUI:LightMode() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								header448 = {
									order = 19,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								bgmode = {
									order = 21,
									type = "description",
									name = L["Change the ElvUI background"],
									width = "full",
								},
								black = {
									order = 22,
									type = 'execute',
									name = L["Grey Background"],
									desc = L["This will set the background to be a grey color"],
									func = function() ElvUI_EltreumUI:GreyBg() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								grey = {
									order = 23,
									type = 'execute',
									name = L["Black Background"],
									desc = L["This will set the background to be a black color"],
									func = function() ElvUI_EltreumUI:BlackBg() E:StaggeredUpdateAll(nil, true) end,
									confirm = true,
								},
								header5 = {
									order = 52,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								dynamicdatatext = {
									order = 53,
									type = "description",
									name = L["Dynamic Datatext that changes according to class to show Ammo or Soul Shards when playing Hunter, Warrior, Rogue or Warlock"],
									width = "full",
								},
								dynamicenable = {
									order = 54,
									type = 'toggle',
									name = L["Enable"],
									desc = L["Enable the Dynamic Datatext"],
									get = function(info) return E.db.ElvUI_EltreumUI.dynamicdatatext.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.dynamicdatatext.enable = value end,
								},
								header9 = {
									order = 58,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								worldtext = {
									order = 59,
									type = "description",
									name = "Change the Scale of the World Text",
									desc = "Such as the floating XP, floating reputation changes and others",
									width = 'full',
								},
								worldtextscale = {
									type = 'range',
									name = "Select the size of the World Text",
									order = 60,
									min = 0.2,
									max = 5,
									step = 0.1,
									width = "full",
									get = function() return E.db.ElvUI_EltreumUI.otherstuff.worldtextscale end,
									set = function(_, value) E.db.ElvUI_EltreumUI.otherstuff.worldtextscale = value ElvUI_EltreumUI:WorldTextScale(value) end,
								},
								header1115 = {
									order = 34,
									type = "description",
									name = "Extra Media",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								extramediafont = {
									order = 35,
									type = 'toggle',
									name = L["Fonts"],
									desc = L["Add more fonts to Shared Media"],
									get = function(info) return E.db.ElvUI_EltreumUI.media.font end,
									set = function(info, value) E.db.ElvUI_EltreumUI.media.font = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								extramediasound = {
									order = 35,
									type = 'toggle',
									name = L["Sounds"],
									desc = L["Add more sounds to Shared Media"],
									get = function(info) return E.db.ElvUI_EltreumUI.media.sound end,
									set = function(info, value) E.db.ElvUI_EltreumUI.media.sound = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								extramediaborder = {
									order = 35,
									type = 'toggle',
									name = L["Borders"],
									desc = L["Add more borders to Shared Media"],
									get = function(info) return E.db.ElvUI_EltreumUI.media.border end,
									set = function(info, value) E.db.ElvUI_EltreumUI.media.border = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								extramediastatusbar = {
									order = 35,
									type = 'toggle',
									name = L["Statusbars"],
									desc = L["Add more statusbars to Shared Media"],
									get = function(info) return E.db.ElvUI_EltreumUI.media.statusbar end,
									set = function(info, value) E.db.ElvUI_EltreumUI.media.statusbar = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								extramediatexture = {
									order = 35,
									type = 'toggle',
									name = L["Textures"],
									desc = L["Add more statusbars to Shared Media"],
									get = function(info) return E.db.ElvUI_EltreumUI.media.texture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.media.texture = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				nameplates = {
					type = 'group',
					name = L["Nameplates"],
					order = 85,
					childGroups = "tab",
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\nameplate',
					args = {
						general = {
							order = 1,
							type = 'group',
							name = L["General"],
							args = {
								header = {
									order = 1,
									type = "description",
									name = L["Class Colored Nameplate Options"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								classhover = {
									order = 2,
									type = 'toggle',
									name = L["Hover"],
									width = 'double',
									desc = L["Change the color of the hover to be class colored"],
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow = value end,
								},
								classborder = {
									order = 3,
									type = 'toggle',
									name = L["Border"],
									width = 'double',
									desc = L["Change the color of the border glow to be class bordered in nameplates"],
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate = value end,
								},
								classtexture = {
									order = 4,
									type = 'toggle',
									name = L["Player Class Texture"],
									width = 'double',
									desc = L["Change the texture of the nameplate to be a class gradient of the player's class"],
									disabled = function() return E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture end,
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture = value end,
								},
								targetclasstexture = {
									order = 4,
									type = 'toggle',
									name = L["Target Class Texture"],
									width = 'double',
									desc = L["Change the texture of the nameplate to be a class gradient of the target's class"],
									disabled = function() return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture = value end,
								},
								header2 = {
									order = 5,
									type = "description",
									name = L["Control how Nameplates behave"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								hidehealthinsideinstances = {
									order = 6,
									type = 'toggle',
									name = L["Show Friendly Nameplates but Hide Healthbar"],
									desc = L["Show Friendly Nameplates but Hide Healthbar"],
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								nofriendlyinstances = {
									order = 7,
									type = 'toggle',
									name = L["Hide Friendly Nameplates inside Instances"],
									desc = L["Hide Friendly Nameplates inside Instances"],
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								dontshowfriendlyatall = {
									order = 8,
									type = 'toggle',
									name = L["Hide Friendly Nameplates everywhere"],
									desc = L["Hide Friendly Nameplates everywhere"],
									width = 'full',
									disabled = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
									get = function(info) return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
									set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header33 = {
									order = 9,
									type = "description",
									name = L["Smart Classbar"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								classbarautohide = {
									order = 10,
									type = 'toggle',
									name = L["Enable Smart Classbar"],
									desc = L["Automatically hide the Classbar if the Target is Friendly, show if it is an enemy"],
									get = function(info) return E.db.ElvUI_EltreumUI.nameplateOptions.classbarautohide end,
									set = function(info, value) E.db.ElvUI_EltreumUI.nameplateOptions.classbarautohide = value end,
								},
								header3 = {
									order = 11,
									type = "description",
									name = L["Wide nameplate debuffs and buffs"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								verywidenameplate = {
									order = 12,
									type = 'toggle',
									name = L["Make Buffs and Debuffs Wide on Nameplates"],
									desc = L["Toogle On and Off"],
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.widenameplate.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.enable = value end,
								},
								header4 = {
									order = 13,
									type = "description",
									name = L["Enemy Nameplate Level"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								dynamiclevel = {
									order = 14,
									type = 'toggle',
									name = L["Hide level on enemy nameplates when you are max level"],
									desc = L["Toogle On and Off"],
									width = 'full',
									get = function() return E.db.ElvUI_EltreumUI.nameplatelevel.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.nameplatelevel.enable = value end,
								},
							},
						},
						powerbar = {
							order = 2,
							type = 'group',
							name= "Nameplate Power Bar",
							args = {
								header5 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								nameplatepower = {
									order = 11,
									type = 'group',
									inline = true,
									name = L["Nameplate Power Bar"],
									args = {
										enablepowerbar = {
											order = 1,
											type = 'toggle',
											name = L["Enable Nameplate Power Bar"],
											desc = L["Enable an extra Power Bar on Nameplates for missing powers"],
											width = 'full',
											get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
										},
										enableadjust = {
											order = 2,
											type = 'toggle',
											name = L["Enable Autoadjusting Buffs/Debuffs"],
											desc = L["Enable autoadjusting the position of Buffs/Debuffs"],
											width = 'full',
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.adjust end,
											set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.adjust = value E:StaticPopup_Show('PRIVATE_RL') end,
										},
										header998747 = {
											order = 3,
											type = "description",
											name = "Nameplate Powerbar Position",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										enableautoadjust = {
											order = 91,
											type = 'toggle',
											name = L["Enable Autoadjusting the Vertical Position of the Power Bar"],
											desc = L["Power Bar will move automatically based on class/spec/druid form"],
											width = 'full',
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function(info) return E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition end,
											set = function(info, value) E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition = value end,
										},
										powerbarYoffset = {
											type = 'range',
											name = L["Select the Y Offset for the Power Bar (Default 16)"],
											desc = L["Set Y Offset"],
											order = 92,
											min = -100,
											max = 100,
											step = 1,
											width = "full",
											disabled = function() return E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition end,
											get = function() return E.db.ElvUI_EltreumUI.nameplatepower.posy end,
											set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.posy = value end,
										},
										header98879 = {
											order = 93,
											type = "description",
											name = "Nameplate Powerbar Size",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										powerbarsizeX = {
											type = 'range',
											name = L["Select the Horizontal Size of the Power Bar (Default 132)"],
											desc = L["Set Horizontal Size"],
											order = 94,
											min = 10,
											max = 300,
											step = 1,
											width = "full",
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function() return E.db.ElvUI_EltreumUI.nameplatepower.sizex end,
											set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.sizex = value end,
										},
										powerbarsizeY = {
											type = 'range',
											name = L["Select the Vertical Size of the Power Bar (Default 6)"],
											desc = L["Set Vertical Size"],
											order = 95,
											min = 2,
											max = 20,
											step = 1,
											width = "full",
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function() return E.db.ElvUI_EltreumUI.nameplatepower.sizey end,
											set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.sizey = value end,
										},
										header998 = {
											order = 96,
											type = "description",
											name = "Nameplate Powerbar appearance",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										sharedmediatexture = {
											order = 97,
											type = 'select',
											width = "double",
											dialogControl = 'LSM30_Statusbar',
											name = L["Choose the Power Bar Texture"],
											desc = L["Select a Texture"],
											values = AceGUIWidgetLSMlists.statusbar,
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function() return E.db.ElvUI_EltreumUI.nameplatepower.texture end,
											set = function(self,key) E.db.ElvUI_EltreumUI.nameplatepower.texture = key end,
										},
										powerbarbackgroundcolor = {
											order = 98,
											type = 'color',
											name = L["Background Color"],
											hasAlpha = false,
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function()
												local customcolorpowerbar = E.db.ElvUI_EltreumUI.nameplatepower
												local d = P.ElvUI_EltreumUI.nameplatepower
												return customcolorpowerbar.r, customcolorpowerbar.g, customcolorpowerbar.b, customcolorpowerbar.a, d.r, d.g, d.b, d.a
											end,
											set = function(_, r, g, b, a)
												local customcolorpowerbar = E.db.ElvUI_EltreumUI.nameplatepower
												customcolorpowerbar.r, customcolorpowerbar.g, customcolorpowerbar.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
											end,
										},
										header9987 = {
											order = 99,
											type = "description",
											name = "",
											width = 'full',
											image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
										},
										describethis = {
											order = 99,
											type = "description",
											name = L["Select the power types to be displayed:"],
										},
										addagapforspace8 = {
											order = 100,
											type = "description",
											name = "",
										},
										mana = {
											type = 'toggle',
											name = L["Mana"],
											order = 101,
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.mana end,
											set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.mana = value E:StaticPopup_Show('PRIVATE_RL') end,
										},
										rage = {
											type = 'toggle',
											name = L["Rage"],
											order = 101,
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.rage end,
											set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.rage = value E:StaticPopup_Show('PRIVATE_RL') end,
										},
										energy = {
											type = 'toggle',
											name = L["Energy"],
											order = 101,
											disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
											get = function(info) return E.private.ElvUI_EltreumUI.nameplatepower.energy end,
											set = function(info, value) E.private.ElvUI_EltreumUI.nameplatepower.energy = value E:StaticPopup_Show('PRIVATE_RL') end,
										},
									}
								},
							},
						},
					},
				},
				loottext = {
					type = 'group',
					name = L["Loot"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\loot',
					order = 85,
					args = {
						header1 = {
							order = 1,
							type = "description",
							name = "",
							width = 'full',
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
						},
						lootsetting = {
							order = 2,
							type = 'group',
							inline = true,
							name = L["Show a floating loot text"],
							args = {
								desc = {
									type = 'toggle',
									name = L["Enable"],
									desc = L["Toogle On and Off"],
									order = 1,
									get = function() return E.db.ElvUI_EltreumUI.loottext.enable end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								addagaphere = {
									order = 2,
									type = "description",
									name = "",
								},
								addanothergapforfun = {
									order = 2,
									type = "description",
									name = "",
								},
								suboptions = {
									order = 2,
									type = 'group',
									name = L["Choose which types of text:"],
										args = {
											yetanothergap = {
											order = 2,
											type = "description",
											name = "",
											},
											honor = {
												type = 'toggle',
												name = L["Honor"],
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.honor end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.honor = value end,
											},
											currency = {
												type = 'toggle',
												name = L["Currency"],
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.currency end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.currency = value end,
											},
											pet = {
												type = 'toggle',
												name = L["Pets"],
												order = 5,
												disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
												get = function(info) return E.db.ElvUI_EltreumUI.loottext.pet end,
												set = function(info, value) E.db.ElvUI_EltreumUI.loottext.pet = value end,
											},
										}
								},
								header1 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscale = {
									type = 'range',
									name = L["Change the scale of LootText"],
									desc = L["Set the size of LootText"],
									order = 4,
									min = .1,
									max = 1.5,
									step = .05,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.scale end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.scale = value end,
								},
								addgaptobenice = {
									order = 5,
									type = "description",
									name = "",
								},
								lootscalereset = {
									type = 'execute',
									name = L["Reset Scale"],
									desc = L["Return LootText to its default scale"],
									order = 9,
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									func = function() E.db.ElvUI_EltreumUI.loottext.scale = 0.65 end,
								},
								header2 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootstrata = {
									type = 'select',
									name = L["Change the strata of the Loot Text"],
									desc = L["Set the level that LootText will be drawn to this"],
									order = 11,
									values = {
										['BACKGROUND'] = L["Background"],
										['LOW'] = L["Low"],
										['MEDIUM'] = L["Medium"],
										['HIGH'] = L["High"],
										['DIALOG'] = L["Dialog"],
									},
									style = 'radio',
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.loottext.strata end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.strata = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header99 = {
									order = 12,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								lootscalex = {
									type = 'range',
									name = L["Change the Horizontal Position of LootText (Default = 0)"],
									desc = L["Set X offset"],
									order = 13,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.xOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.xOffset = value end,
									--confirm = true,
								},
								lootscaley = {
									type = 'range',
									name = L["Change the Vertical Position of LootText (Default = 200)"],
									desc = L["Set Y offset"],
									order = 14,
									min = -1000,
									max = 1000,
									step = 1,
									width = "full",
									disabled = function() return not E.db.ElvUI_EltreumUI.loottext.enable end,
									get = function() return E.db.ElvUI_EltreumUI.loottext.yOffset end,
									set = function(info, value) E.db.ElvUI_EltreumUI.loottext.yOffset = value end,
									--confirm = true,
								},
								header98 = {
									order = 15,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								customfontlootgap = {
									type = 'description',
									name = '',
									width = 'full',
									order = 16,
								},
								customfontlootdesc = {
									type = 'description',
									name = L["Change the font of LootText to be that the ElvUI Default Font found in General"],
									width = 'full',
									order = 17,
								},
								customfontloot = {
									type = 'toggle',
									name = L["Use ElvUI General Font"],
									desc = L["Change the font of LootText"],
									order = 18,
									get = function() return E.db.ElvUI_EltreumUI.loottext.fontsetting end,
									set = function(_, value) E.db.ElvUI_EltreumUI.loottext.fontsetting = value E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				chat = {
					type = 'group',
					name = L["Chat"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\chat',
					order = 85,
					args = {
						chatOptions = {
							order = 1,
							type = 'group',
							inline = true,
							name = L["Chat Options"],
							args = {
								chatfadeenable = {
									order = 1,
									type = 'toggle',
									name = L["Enable ElvUI Chat modifications"],
									width = 'full',
									desc = L["Add fade over time, and mouse over to left and right chat panels"],
									get = function(info) return E.db.ElvUI_EltreumUI.chat.enable end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.enable = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								header1 = {
									order = 3,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								gap1 = {
									order = 4,
									type = "description",
									name = "",
									width = 'full',
								},
								description2 = {
									order = 4,
									type = "description",
									name = L["Add mouse over to the left chat panel"],
								},
								leftmouseover = {
									order = 5,
									type = 'toggle',
									name = L["Left Chat Mouse Over"],
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.leftmouseover end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.leftmouseover = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap2 = {
									order = 6,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								description3 = {
									order = 6,
									type = "description",
									name = L["Add a fade to the left chat panel, controlled by ElvUI Chat > Text Fade > Inactivity Timer"],
								},
								leftfade = {
									order = 7,
									type = 'toggle',
									name = L["Left Inactivity Fader"],
									--width = 'full',
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.leftfader end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.leftfader = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap3 = {
									order = 8,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								description4 = {
									order = 8,
									type = "description",
									name = L["Add mouse over to the left chat panel"],
								},
								rightmouseover = {
									order = 9,
									type = 'toggle',
									name = L["Right Chat Mouse Over"],
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.rightmouseover end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.rightmouseover = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap4 = {
									order = 10,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								description5 = {
									order = 10,
									type = "description",
									name = L["Add a fade to the right chat panel, controlled by ElvUI Chat > Text Fade > Inactivity Timer"],
								},
								rightfade = {
									order = 11,
									type = 'toggle',
									name = L["Right Inactivity Fader"],
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.rightfader end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.rightfader = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap5 = {
									order = 12,
									type = "description",
									name = L["Combat Hide"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								leftcombathide = {
									order = 13,
									type = 'toggle',
									name = L["Hide Left Chat in Combat"],
									width = 'full',
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.leftcombathide end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.leftcombathide = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								rightcombathide = {
									order = 14,
									type = 'toggle',
									name = L["Hide Right Chat in Combat"],
									width = 'full',
									desc = L["Toggle the option"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.rightcombathide end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.rightcombathide = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap6 = {
									order = 15,
									type = "description",
									name = L["Invert left mouse click so that chat starts faded and mouse click will make it stop fading"],
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								invertmouse = {
									order = 16,
									type = 'toggle',
									name = L["Invert Mouse Click"],
									width = 'full',
									desc = L["Toggle the option on"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.invertclick end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.invertclick = value E:StaticPopup_Show('CONFIG_RL') end,
								},
								gap7 = {
									order = 17,
									type = "description",
									name = "Add color to some chat messages",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								colorsysmsgs = {
									order = 18,
									type = 'toggle',
									name = L['Enable'],
									width = 'full',
									desc = L["Toggle the option on"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.colorsysmsg end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.colorsysmsg = value end,
								},
								gap8 = {
									order = 19,
									type = "description",
									name = "Add icons to loot sent in chat",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								chatlooticons = {
									order = 20,
									type = 'toggle',
									name = L['Enable'],
									width = 'full',
									desc = L["Toggle the option on"],
									disabled = function() return not E.db.ElvUI_EltreumUI.chat.enable end,
									get = function(info) return E.db.ElvUI_EltreumUI.chat.looticons end,
									set = function(info, value) E.db.ElvUI_EltreumUI.chat.looticons = value end,
								},
								gap9 = {
									order = 21,
									type = "description",
									name = "Customize the Chat tabs",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
								},
								darkchat = {
									order = 22,
									type = 'execute',
									name = "Dark Chat",
									--width = 'double',
									func = function() ElvUI_EltreumUI:DarkChat() E:StaticPopup_Show('CONFIG_RL') end,
								},
								lightchat = {
									order = 23,
									type = 'execute',
									name = "Transparent Chat",
									--width = 'double',
									func = function() ElvUI_EltreumUI:TransparentChat() E:StaticPopup_Show('CONFIG_RL') end,
								},
							},
						},
					},
				},
				weakauras = {
					type = 'group',
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\weakauras',
					name = L["WeakAuras"],
					order = 95,
					args = {
						header1 = {
							order = 1,
							type = 'header',
							name = 'WeakAuras',
						},
						explain1 = {
							order = 2,
							type = "description",
							name = L["You can set your Weakauras to anchor to custom locations making it easier to move them"],
						},
						explain2 = {
							order = 3,
							type = "description",
							name = L["In order to use this feature, simply go to your Weakaura, and go to its Group options, scroll down to Position Settings and set the Anchored To Select Frame, then type either |cff82B4ffEltruismWA|r or |cff82B4ffEltruismConsumables|r to anchor the weakaura to the preset location"],
						},
						explain3 = {
							order = 4,
							type = "description",
							name = L["Setting "].."|cff82B4ffEltruismWA|r"..L[" or "].."|cff82B4ffEltruismConsumables|r"..L[" as the anchor will move them to the locations, keep in mind you might need to change the X and Y offset of the weakaura to zero"],
						},
						explainer1 = {
							order = 5,
							type = "group",
							name = 'How to use the Anchors',
							inline = true,
							args = {
								addaspaceher544e = {
									order = 86,
									type = "description",
									name = '',
								},
								explainer7 = {
									order = 87,
									type = "description",
									name = L["Open WeakAuras, go to your group Weakauras and in Group change Position Settings > Anchored To > Select Frame > EltruismWA or EltruismConsumables"],
								},
								demopic = {
									order = 98,
									type = "description",
									name = "",
									width = 'full',
									image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\WADemo', 512, 1024 end,
								},
							},
						},
					},
				},
				discord = {
					type = 'group',
					name = L["Discord"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\discord',
					order = 96,
					args = {
						logodiscord = {
							type = 'description',
							name = "",
							order = 1,
							image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\disc', 256, 128 end,
						},
						explainer8 = {
							order = 2,
							type = "description",
							name = L["Join the Discord if you have any questions or issues"],
						},
						addaspacehere4 = {
							order = 3,
							type = "description",
							name = L["Keep in mind the discord is in English"],
						},
						discordinvitelink = {
							order = 19,
							type = 'input',
							width = 'full',
							name = '',
							get = function() return 'https://discord.gg/rBXNxUY6pk' end,
						},
					},
				},
				credits = {
					type = 'group',
					name = L["Credits"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\credits',
					order = 97,
					args = {
						author = {
							order = 1,
							type = 'group',
							inline = true,
							name = L["Author"],
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = AUTHORS_STRING,
								},
							},
						},
						thankyou = {
							order = 2,
							type = 'group',
							inline = true,
							name = L["Credits and Thank yous"],
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = THANKYOU_STRING,
								},
							},
						},
						supporters = {
							order = 3,
							type = 'group',
							inline = true,
							name = "Supporters",
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = SUPPORTER_STRING,
								},
							},
						},
						licensewarning = {
							order = 99,
							type = 'group',
							inline = true,
							name = L["License"],
							args = {
								desc = {
									order = 1,
									type = 'description',
									fontSize = 'medium',
									name = 'Cursor is a fork of CastCursor by michaelsp which licensed under GNU GPLv3\nCursor Cooldowns is a fork of CooldownToGo by mitchnull which is licensed under Public Domain\nExpand Hunter Stables is merged from Improved Stable Frame by Cybeloras which is licensed under GNU GPLv3\nIcons8 (www.icons8.com) for some of the icons. List in license.txt\nLootText is a fork of SLoTe from xavjer which is licensed under GNU GPLv3\nRogue Door Opener is a fork of Rogue Door Opener by Burzolog which licensed under GNU GPLv3\nLoot Icons are merged from Chat Loot Icons by Stanzilla which is licensed under Public Domain\nThe Item Level shown on the Character Panel Skin uses code from Simple Item level by Kemayo, licensed under BSD\nQuest Items is a merge of QBar by Aezay, which is licensed under GNU GPLv3',
								},
							},
						},
					},
				},
				support = {
					type = 'group',
					name = L["Support"],
					icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\support',
					order = 98,
					args = {
						gitlink = {
							order = 1,
							type = 'input',
							width = 'full',
							name = L["Changelog"],
							get = function() return 'https://github.com/eltreum0/eltruism/blob/main/Changelog.md' end,
						},
						issues = {
							order = 2,
							type = 'input',
							width = 'full',
							name = L["Report issues and problems here:"],
							get = function() return 'https://github.com/eltreum0/eltruism/issues' end,
						},
						tukui = {
							order = 3,
							type = 'input',
							width = 'full',
							name = L["Addon on Tukui:"],
							get = function() return 'https://www.tukui.org/classic-addons.php?id=49' end,
						},
						curse = {
							order = 4,
							type = 'input',
							width = 'full',
							name = L["Addon on CurseForge:"],
							get = function() return 'https://www.curseforge.com/wow/addons/elvui-eltruism' end,
						},
					},
				},
			},
		}

		for _, func in pairs(ElvUI_EltreumUI.Config) do
			func()
		end
	end
end
