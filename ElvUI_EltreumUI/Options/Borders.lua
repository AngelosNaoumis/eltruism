local ElvUI_EltreumUI, E, L, V, P, G = unpack(select(2, ...))

function ElvUI_EltreumUI:BorderOptions()
	local borders = {
		type = 'group',
		name = L["Borders"],
		icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\border',
		order = 85,
		childGroups = "tab",
		args = {
			general = {
				type = 'group',
				name = L["General"],
				order = 1,
				args = {
					headerline1 = {
						order = 1,
						type = "description",
						name = L["Enable Borders"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					enable = {
						type = 'toggle',
						name = L["Enable"],
						width = "full",
						order = 2,
						get = function() return E.db.ElvUI_EltreumUI.borders.borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.borders = value ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end,
					},
					enableautoadjust = {
						type = 'toggle',
						name = L["Enable Auto-adjusting the actionbar spacing and position"],
						desc = L["Adjusts actionbar spacing and position based on borders being enabled or not"],
						width = "full",
						order = 3,
						get = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.borderautoadjust = value ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end,
					},
					headerline2 = {
						order = 93,
						type = "description",
						name = L["Choose the Border Texture to be used:"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					sharedmediatexture = {
						order = 94,
						type = 'select',
						width = "full",
						dialogControl = 'LSM30_Border',
						name = "",
						desc = L["Select a Texture"],
						values = AceGUIWidgetLSMlists.border,
						get = function() return E.db.ElvUI_EltreumUI.borders.texture end,
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						set = function(self,key) E.db.ElvUI_EltreumUI.borders.texture = key ElvUI_EltreumUI:Borders() end,
					},
					classcolors = {
						type = 'toggle',
						name = L["Use Class Colors"],
						--width = "full",
						order = 95,
						get = function() return E.db.ElvUI_EltreumUI.borders.classcolor end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.classcolor = value ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end,
					},
					colorborders = {
						order = 96,
						type = 'color',
						name = L["Custom Color"],
						hasAlpha = false,
						disabled = function() return E.db.ElvUI_EltreumUI.borders.classcolor end,
						get = function()
							local customcolorborders = E.db.ElvUI_EltreumUI.bordercolors
							local d = P.ElvUI_EltreumUI.bordercolors
							return customcolorborders.r, customcolorborders.g, customcolorborders.b, customcolorborders.a, d.r, d.g, d.b, d.a
						end,
						set = function(_, r, g, b, a)
							local customcolorborders = E.db.ElvUI_EltreumUI.bordercolors
							customcolorborders.r, customcolorborders.g, customcolorborders.b = r, g, b E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders()
						end,
					},
					headerline3 = {
						order = 97,
						type = "description",
						name = L["Change the size of the borders:"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					borderABsize = {
						type = 'range',
						name = L["Actionbar Thickness"],
						order = 98,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.actionbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.baredgesize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.baredgesize = value ElvUI_EltreumUI:Borders() end,
					},
					borderUFsize = {
						type = 'range',
						name = L["Unitframe Thickness"],
						order = 99,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.playertargetsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.playertargetsize = value ElvUI_EltreumUI:Borders() end,
					},
					bordergroupUFsize = {
						type = 'range',
						name = L["Group Unitframe Thickness"],
						order = 99,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.groupsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.groupsize = value ElvUI_EltreumUI:Borders() end,
					},
					bordercastbarsize = {
						type = 'range',
						name = L["Castbar Thickness"],
						order = 99,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.playertargetcastsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.playertargetcastsize = value ElvUI_EltreumUI:Borders() end,
					},
					borderpetsize = {
						type = 'range',
						name = L["Pet Thickness"],
						order = 99,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.petsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.petsize = value ElvUI_EltreumUI:Borders() end,
					},
					borderfocussize = {
						type = 'range',
						name = L["Focus Thickness"],
						order = 99,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.unitframe.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.focussize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.focussize = value ElvUI_EltreumUI:Borders() end,
					},
					borderaurasize = {
						type = 'range',
						name = L["Aura Thickness"],
						order = 100,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.aurasize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.aurasize = value ElvUI_EltreumUI:AuraBorders() end,
					},
					borderchatsize = {
						type = 'range',
						name = L["Chat Thickness"],
						order = 101,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.chatsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.chatsize = value ElvUI_EltreumUI:Borders() end,
					},
					borderminimapsize = {
						type = 'range',
						name = L["Minimap Thickness"],
						order = 102,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.minimapsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsize = value ElvUI_EltreumUI:Borders() end,
					},
					bordertotemsize = {
						type = 'range',
						name = L["Shaman Totem Thickness"],
						order = 102,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.totemedgesize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.totemedgesize = value ElvUI_EltreumUI:Borders() end,
					},
					borderstancesize = {
						type = 'range',
						name = L["Stance Bar Thickness"],
						order = 102,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.stanceedgesize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.stanceedgesize = value ElvUI_EltreumUI:Borders() end,
					},
				},
			},
			actionbarsborders = {
				order = 2,
				type = 'group',
				--inline = true,
				disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
				name = L["ActionBars"],
				childGroups = "tab",
				args = {
					gap0 = {
						order = 1,
						type = "description",
						name = L["(All settings require a reload)"],
						width = 'full',
						--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					gap1 = {
						order = 5,
						type = "description",
						name = L["Action Bar 1"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar1enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 6,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar1borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar1xsize = {
						type = 'range',
						name = L["Bar 1 X offset"],
						order = 7,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar1xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar1ysize = {
						type = 'range',
						name = L["Bar 1 Y offset"],
						order = 7,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar1.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar1yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar1yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap2 = {
						order = 8,
						type = "description",
						name = L["Action Bar 2"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar2enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 9,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar2borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar2xsize = {
						type = 'range',
						name = L["Bar 2 X offset"],
						order = 10,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar2xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar2ysize = {
						type = 'range',
						name = L["Bar 2 Y offset"],
						order = 10,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar2.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar2yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar2yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap3 = {
						order = 11,
						type = "description",
						name = L["Action Bar 3"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar3enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 12,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar3borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar3xsize = {
						type = 'range',
						name = L["Bar 3 X offset"],
						order = 13,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar3xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar3ysize = {
						type = 'range',
						name = L["Bar 3 Y offset"],
						order = 13,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar3.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar3yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar3yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap4 = {
						order = 14,
						type = "description",
						name = L["Action Bar 4"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar4enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 15,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar4borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar4xsize = {
						type = 'range',
						name = L["Bar 4 X offset"],
						order = 16,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar4xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar4ysize = {
						type = 'range',
						name = L["Bar 4 Y offset"],
						order = 16,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar4.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar4yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar4yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap5 = {
						order = 17,
						type = "description",
						name = L["Action Bar 5"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar5enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 18,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar5borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar5xsize = {
						type = 'range',
						name = L["Bar 5 X offset"],
						order = 19,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar5xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar5ysize = {
						type = 'range',
						name = L["Bar 5 Y offset"],
						order = 19,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar5.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar5yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar5yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap6 = {
						order = 20,
						type = "description",
						name = L["Action Bar 6"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bar6enable = {
						type = 'toggle',
						name = L["Enable"],
						order = 21,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar6borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6borders = value ElvUI_EltreumUI:Borders() end,
					},
					bar6xsize = {
						type = 'range',
						name = L["Bar 6 X offset"],
						order = 22,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar6xborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6xborder = value ElvUI_EltreumUI:Borders() end,
					},
					bar6ysize = {
						type = 'range',
						name = L["Bar 6 Y offset"],
						order = 22,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.bar6yborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.bar6yborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap7 = {
						order = 23,
						type = "description",
						name = L["Shaman Totem Bar"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					totemenable = {
						type = 'toggle',
						name = L["Enable"],
						order = 24,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.totembar end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.totembar = value ElvUI_EltreumUI:Borders() end,
					},
					totemxsize = {
						type = 'range',
						name = L["Totem X offset"],
						order = 25,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.totemxborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.totemxborder = value ElvUI_EltreumUI:Borders() end,
					},
					totemysize = {
						type = 'range',
						name = L["Totem Y offset"],
						order = 25,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.bar6.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.totemyborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.totemyborder = value ElvUI_EltreumUI:Borders() end,
					},
					gap8 = {
						order = 26,
						type = "description",
						name = L["Stance Bar"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					stanceenable = {
						type = 'toggle',
						name = L["Enable"],
						order = 27,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.stanceborders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.stanceborders = value ElvUI_EltreumUI:Borders() end,
					},
					stancexsize = {
						type = 'range',
						name = L["Stance X offset"],
						order = 28,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.stanceBar.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.stancexborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.stancexborder = value ElvUI_EltreumUI:Borders() end,
					},
					stanceysize = {
						type = 'range',
						name = L["Stance Y offset"],
						order = 28,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.actionbar.stanceBar.enabled end,
						get = function() return E.db.ElvUI_EltreumUI.borders.stanceyborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.stanceyborder = value ElvUI_EltreumUI:Borders() end,
					},
				},
			},
			ufborders = {
				type = 'group',
				disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
				name = L["Unitframes"],
				order = 2,
				args = {
					gap0 = {
						order = 1,
						type = "description",
						name = L["(All settings require a reload)"],
						width = 'full',
						--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					gappet = {
						order = 2,
						type = "description",
						name = L["Pet Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					petenable = {
						type = 'toggle',
						name = L["Enable"],
						order = 3,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.pet.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.petborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.petborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxpet = {
						type = 'range',
						name = L["Border X offset"],
						order = 4,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.pet.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.petsizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.petsizex = value ElvUI_EltreumUI:Borders() end,
					},
					borderypet = {
						type = 'range',
						name = L["Border Y offset"],
						order = 5,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.pet.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.petsizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.petsizey = value ElvUI_EltreumUI:Borders() end,
					},
					gaptarget = {
						order = 23,
						type = "description",
						name = L["Target Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bartarget = {
						type = 'toggle',
						name = L["Enable"],
						order = 24,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.targetborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.targetborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxtarget = {
						type = 'range',
						name = L["Border X offset"],
						order = 25,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xtarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xtarget = value ElvUI_EltreumUI:Borders() end,
					},
					borderytarget = {
						type = 'range',
						name = L["Border Y offset"],
						order = 25,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.ytarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.ytarget = value ElvUI_EltreumUI:Borders() end,
					},
					gapplayer = {
						order = 26,
						type = "description",
						name = L["Player Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barplayer = {
						type = 'toggle',
						name = L["Enable"],
						order = 27,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.playerborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.playerborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxplayer = {
						type = 'range',
						name = L["Border X offset"],
						order = 28,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xplayer end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xplayer = value ElvUI_EltreumUI:Borders() end,
					},
					borderyplayer = {
						type = 'range',
						name = L["Border Y offset"],
						order = 28,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.yplayer end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.yplayer = value ElvUI_EltreumUI:Borders() end,
					},
					gapplayercast = {
						order = 29,
						type = "description",
						name = L["Player Castbar Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barcastplayer = {
						type = 'toggle',
						name = L["Enable"],
						order = 30,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.playercastborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.playercastborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxcastplayer = {
						type = 'range',
						name = L["Border X offset"],
						order = 31,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xplayercast end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xplayercast = value ElvUI_EltreumUI:Borders() end,
					},
					borderycastplayer = {
						type = 'range',
						name = L["Border Y offset"],
						order = 31,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.player.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.yplayercast end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.yplayercast = value ElvUI_EltreumUI:Borders() end,
					},
					gaptargetcast = {
						order = 32,
						type = "description",
						name = L["Target Castbar Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bartargetcast = {
						type = 'toggle',
						name = L["Enable"],
						order = 33,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.targetcastborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.targetcastborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxcasttarget = {
						type = 'range',
						name = L["Border X offset"],
						order = 34,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xcasttarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xcasttarget = value ElvUI_EltreumUI:Borders() end,
					},
					borderycasttarget = {
						type = 'range',
						name = L["Border Y offset"],
						order = 34,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.target.castbar.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.ycasttarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.ycasttarget = value ElvUI_EltreumUI:Borders() end,
					},
					gaptargettarget = {
						order = 35,
						type = "description",
						name = L["Target of Target Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					bartargettarget = {
						type = 'toggle',
						name = L["Enable"],
						order = 36,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.targettargetborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderxtargettarget = {
						type = 'range',
						name = L["Border X offset"],
						order = 37,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xtargettarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xtargettarget = value ElvUI_EltreumUI:Borders() end,
					},
					borderytargettarget = {
						type = 'range',
						name = L["Border Y offset"],
						order = 38,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.targettarget.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.ytargettarget end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.ytargettarget = value ElvUI_EltreumUI:Borders() end,
					},
					gapparty = {
						order = 39,
						type = "description",
						name = L["Party Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barparty = {
						type = 'toggle',
						name = L["Enable"],
						order = 40,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.party.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.partyborders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.partyborders = value ElvUI_EltreumUI:Borders() end,
					},
					borderxparty = {
						type = 'range',
						name = L["Border X offset"],
						order = 41,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.party.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.partysizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.partysizex = value ElvUI_EltreumUI:Borders() end,
					},
					borderyparty = {
						type = 'range',
						name = L["Border Y offset"],
						order = 42,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.party.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.partysizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.partysizey = value ElvUI_EltreumUI:Borders() end,
					},
					gapraid = {
						order = 43,
						type = "description",
						name = L["Raid Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barraid = {
						type = 'toggle',
						name = L["Enable"],
						order = 44,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raidborders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raidborders = value ElvUI_EltreumUI:Borders() end,
					},
					borderxraid = {
						type = 'range',
						name = L["Border X offset"],
						order = 45,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raidsizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raidsizex = value ElvUI_EltreumUI:Borders() end,
					},
					borderyraid = {
						type = 'range',
						name = L["Border Y offset"],
						order = 46,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raidsizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raidsizey = value ElvUI_EltreumUI:Borders() end,
					},
					gapraid40 = {
						order = 47,
						type = "description",
						name = L["Raid40 Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barraid40 = {
						type = 'toggle',
						name = L["Enable"],
						order = 48,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid40.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raid40borders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raid40borders = value ElvUI_EltreumUI:Borders() end,
					},
					borderxraid40 = {
						type = 'range',
						name = L["Border X offset"],
						order = 49,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid40.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raid40sizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raid40sizex = value ElvUI_EltreumUI:Borders() end,
					},
					borderyraid40 = {
						type = 'range',
						name = L["Border Y offset"],
						order = 50,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.raid40.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raid40sizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raid40sizey = value ElvUI_EltreumUI:Borders() end,
					},
					gapfocus = {
						order = 51,
						type = "description",
						name = L["Focus Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barfocus= {
						type = 'toggle',
						name = L["Enable"],
						order = 52,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.focus.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.raidborders end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.raidborders = value ElvUI_EltreumUI:Borders() end,
					},
					borderxfocus = {
						type = 'range',
						name = L["Border X offset"],
						order = 53,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.focus.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xfocus end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xfocus = value ElvUI_EltreumUI:Borders() end,
					},
					borderyfocus = {
						type = 'range',
						name = L["Border Y offset"],
						order = 54,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.unitframe.units.focus.enable end,
						get = function() return E.db.ElvUI_EltreumUI.borders.yfocus end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.yfocus = value ElvUI_EltreumUI:Borders() end,
					},
				},
			},
			npborder = {
				type = 'group',
				disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
				name = L["Nameplate"],
				order = 3,
				args = {
					gap0 = {
						order = 1,
						type = "description",
						name = L["(All settings require a reload)"],
						width = 'full',
						--image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					gappowerbar = {
						order = 35,
						type = "description",
						name = L["Nameplate Power Bar Border"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					barpowerbar = {
						type = 'toggle',
						name = L["Enable"],
						order = 36,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
						get = function() return E.db.ElvUI_EltreumUI.borders.powerbarborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarborder = value ElvUI_EltreumUI:Borders() end,
					},
					borderpowerbarsize = {
						type = 'range',
						name = L["Nameplate Power Bar Thickness"],
						order = 37,
						min = 1,
						max = 200,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
						get = function() return E.db.ElvUI_EltreumUI.borders.powerbarsize end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarsize = value ElvUI_EltreumUI:Borders() end,
					},
					borderxpowerbar = {
						type = 'range',
						name = L["Border X offset"],
						order = 38,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
						get = function() return E.db.ElvUI_EltreumUI.borders.xpowerbar end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.xpowerbar = value ElvUI_EltreumUI:Borders() end,
					},
					borderypowerbar = {
						type = 'range',
						name = L["Border Y offset"],
						order = 39,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.private.ElvUI_EltreumUI.nameplatepower end,
						get = function() return E.db.ElvUI_EltreumUI.borders.ypowerbar end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.ypowerbar = value ElvUI_EltreumUI:Borders() end,
					},
				},
			},
			otherborder = {
				type = 'group',
				name = L["Other"],
				disabled = function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end,
				order = 4,
				args = {
					headerline1 = {
						order = 1,
						type = "description",
						name = MINIMAP_LABEL,
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					enableminimap = {
						type = 'toggle',
						name = L["Enable"].." "..MINIMAP_LABEL,
						width = "full",
						order = 2,
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.minimapborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.minimapborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end,
					},

					mapbordersizex = {
						type = 'range',
						name = MINIMAP_LABEL.." "..L["Border X offset"],
						order = 3,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.ElvUI_EltreumUI.borders.minimapborder end,
						get = function() return E.db.ElvUI_EltreumUI.borders.minimapsizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsizex = value ElvUI_EltreumUI:Borders() end,
					},
					mapbordersizey = {
						type = 'range',
						name = MINIMAP_LABEL.." "..L["Border Y offset"],
						order = 4,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.ElvUI_EltreumUI.borders.minimapborder end,
						get = function() return E.db.ElvUI_EltreumUI.borders.minimapsizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsizey = value ElvUI_EltreumUI:Borders() end,
					},
					headerline2 = {
						order = 91,
						type = "description",
						name = AURAS,
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					enableaura = {
						type = 'toggle',
						name = L["Enable"].." "..AURAS,
						width = "full",
						order = 92,
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.auraborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.auraborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:AuraBorders() end,
					},
					aurabordersizex = {
						type = 'range',
						name = L["Aura Border X offset"],
						order = 93,
						min = 1,
						max = 100,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.ElvUI_EltreumUI.borders.auraborder end,
						get = function() return E.db.ElvUI_EltreumUI.borders.aurasizex end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.aurasizex = value ElvUI_EltreumUI:AuraBorders() end,
					},
					aurabordersizey = {
						type = 'range',
						name = L["Aura Border Y offset"],
						order = 94,
						min = 1,
						max = 100,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders or not E.db.ElvUI_EltreumUI.borders.auraborder end,
						get = function() return E.db.ElvUI_EltreumUI.borders.aurasizey end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.aurasizey = value ElvUI_EltreumUI:AuraBorders() end,
					},
					headerline3 = {
						order = 95,
						type = "description",
						name = BINDING_HEADER_CHAT,
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					enablechat = {
						type = 'toggle',
						name = L["Enable"].." "..BINDING_HEADER_CHAT,
						width = "full",
						order = 96,
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.chatborder end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.chatborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end,
					},
					leftchatbordersizex = {
						type = 'range',
						name = L["Left Chat Border X offset"],
						order = 97,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.leftchatborderx end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatborderx = value ElvUI_EltreumUI:Borders() end,
					},
					leftchatbordersizey = {
						type = 'range',
						name = L["Left Chat Border Y offset"],
						order = 98,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.leftchatbordery end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatbordery = value ElvUI_EltreumUI:Borders() end,
					},
					rightchatbordersizex = {
						type = 'range',
						name = L["Right Chat Border X offset"],
						order = 99,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.rightchatborderx end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatborderx = value ElvUI_EltreumUI:Borders() end,
					},
					rightchatbordersizey = {
						type = 'range',
						name = L["Right Chat Border Y offset"],
						order = 100,
						min = 1,
						max = 800,
						step = 0.1,
						width = "full",
						disabled = function() return not E.db.ElvUI_EltreumUI.borders.borders end,
						get = function() return E.db.ElvUI_EltreumUI.borders.rightchatbordery end,
						set = function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatbordery = value ElvUI_EltreumUI:Borders() end,
					},
				},
			}
		},
	}
	return borders
end
