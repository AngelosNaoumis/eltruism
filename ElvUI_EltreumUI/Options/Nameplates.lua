local ElvUI_EltreumUI, E, L, V, P, G = unpack(select(2, ...))

function ElvUI_EltreumUI:NameplateOptions()
	local nameplates = {
		type = 'group',
		name = L["Nameplates"],
		order = 85,
		childGroups = "tab",
		icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\nameplate',
		args = {
			general = {
				order = 1,
				type = 'group',
				name = L["General"],
				args = {
					header = {
						order = 1,
						type = "description",
						name = L["Class Colored Nameplate Options"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					classhover = {
						order = 2,
						type = 'toggle',
						name = L["Hover"],
						width = 'double',
						desc = L["Change the color of the hover to be class colored"],
						get = function() return E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassColorGlow = value end,
					},
					classborder = {
						order = 3,
						type = 'toggle',
						name = L["Border"],
						width = 'double',
						desc = L["Change the color of the border glow to be class bordered in nameplates"],
						get = function() return E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplateOptions.ClassBorderNameplate = value end,
					},
					classtexture = {
						order = 4,
						type = 'toggle',
						name = L["Player Class Texture"],
						width = 'double',
						desc = L["Change the texture of the nameplate to be a class gradient of the player's class"],
						disabled = function() return E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture end,
						get = function() return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture = value end,
					},
					targetclasstexture = {
						order = 4,
						type = 'toggle',
						name = L["Target Class Texture"],
						width = 'double',
						desc = L["Change the texture of the nameplate to be a class gradient of the target's class"],
						disabled = function() return E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture end,
						get = function() return E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture = value end,
					},
					headernptextv = {
						order = 5,
						type = "description",
						name= L["Nameplate Texture Version"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					textureselect = {
						type = 'select',
						name= "",
						--desc = L["Choose the direction of the gradient"],
						order = 6,
						values = {
							["V1"] = L["Version 1"],
							["V2"] = L["Version 2"],
							["V3"] = L["Version 3"],
						},
						style = 'radio',
						disabled = function() return (not E.db.ElvUI_EltreumUI.nameplateOptions.nameplatetexture and not E.db.ElvUI_EltreumUI.nameplateOptions.targetclasstexture) end,
						get = function() return E.db.ElvUI_EltreumUI.nptextureversion end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nptextureversion = value end,
					},
					header2 = {
						order = 905,
						type = "description",
						name = L["Control how Nameplates behave"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					hidehealthinsideinstances = {
						order = 906,
						type = 'toggle',
						name = L["Show Friendly Nameplates but Hide Healthbar"],
						desc = L["Show Friendly Nameplates but Hide Healthbar"],
						width = 'full',
						disabled = function() return (E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly) end,
						get = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames end,
						set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames = value E:StaticPopup_Show('CONFIG_RL') end,
					},
					nofriendlyinstances = {
						order = 907,
						type = 'toggle',
						name = L["Hide Friendly Nameplates inside Instances"],
						desc = L["Hide Friendly Nameplates inside Instances"],
						width = 'full',
						disabled = function() return (E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly) end,
						get = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly end,
						set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
					},
					dontshowfriendlyatall = {
						order = 908,
						type = 'toggle',
						name = L["Hide Friendly Nameplates everywhere"],
						desc = L["Hide Friendly Nameplates everywhere"],
						width = 'full',
						disabled = function() return (E.db.ElvUI_EltreumUI.friendlynameplatetoggle.friendlynames or E.db.ElvUI_EltreumUI.friendlynameplatetoggle.disablefriendly) end,
						get = function() return E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly end,
						set = function(_, value) E.db.ElvUI_EltreumUI.friendlynameplatetoggle.hidefriendly = value E:StaticPopup_Show('CONFIG_RL') end,
					},
					header33 = {
						order = 909,
						type = "description",
						name = L["Smart Classbar"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					classbarautohide = {
						order = 910,
						type = 'toggle',
						name = L["Enable Smart Classbar"],
						desc = L["Automatically hide the Classbar if the Target is Friendly, show if it is an enemy"],
						get = function() return E.db.ElvUI_EltreumUI.nameplateOptions.classbarautohide end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplateOptions.classbarautohide = value end,
					},
					header3 = {
						order = 911,
						type = "description",
						name = L["Wide nameplate debuffs and buffs"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					verywidenameplate = {
						order = 912,
						type = 'toggle',
						name = L["Make Buffs and Debuffs Wide on Nameplates"],
						desc = L["Toggle On and Off"],
						width = 'full',
						get = function() return E.db.ElvUI_EltreumUI.widenameplate.enable end,
						set = function(_, value) E.db.ElvUI_EltreumUI.widenameplate.enable = value end,
					},
					header4 = {
						order = 913,
						type = "description",
						name = L["Enemy Nameplate Level"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					dynamiclevel = {
						order = 914,
						type = 'toggle',
						name = L["Hide level on enemy nameplates when you are max level"],
						desc = L["Toggle On and Off"],
						width = 'full',
						get = function() return E.db.ElvUI_EltreumUI.nameplatelevel.enable end,
						set = function(_, value) E.db.ElvUI_EltreumUI.nameplatelevel.enable = value end,
					},
					headerrestore = {
						order = 917,
						type = "description",
						name = L["Restore Hidden Names"],
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					restorenames = {
						order = 918,
						type = 'execute',
						name = L["Restore Unit Names Hidden during install"],
						width = 'full',
						desc = L["Use this button to restore names"],
						func = function() ElvUI_EltreumUI:RestoreNameplateNames() end,
					},
				},
			},
			powerbar = {
				order = 2,
				type = 'group',
				name= L["Nameplate Power Bar"],
				args = {
					header5 = {
						order = 10,
						type = "description",
						name = "",
						width = 'full',
						image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
					},
					nameplatepower = {
						order = 11,
						type = 'group',
						inline = true,
						name = L["Nameplate Power Bar"],
						args = {
							enablepowerbar = {
								order = 1,
								type = 'toggle',
								name = L["Enable Nameplate Power Bar"],
								desc = L["Enable an extra Power Bar on Nameplates for missing powers"],
								width = 'full',
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.enable = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
							enableadjust = {
								order = 2,
								type = 'toggle',
								name = L["Enable Auto-adjusting Buffs/Debuffs"],
								desc = L["Enable Auto-adjusting the position of Buffs/Debuffs"],
								width = 'full',
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.adjust end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.adjust = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
							header998747 = {
								order = 3,
								type = "description",
								name = L["Nameplate Powerbar Position"],
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
							},
							enableautoadjust = {
								order = 91,
								type = 'toggle',
								name = L["Enable Auto-adjusting the Vertical Position of the Power Bar"],
								desc = L["Power Bar will move automatically based on class/spec/druid form"],
								width = 'full',
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition end,
								set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition = value end,
							},
							powerbarYoffset = {
								type = 'range',
								name = L["Select the Y Offset for the Power Bar (Default 16)"],
								desc = L["Set Y Offset"],
								order = 92,
								min = -100,
								max = 100,
								step = 1,
								width = "full",
								disabled = function() return E.db.ElvUI_EltreumUI.nameplatepower.autoadjustposition end,
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.posy end,
								set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.posy = value end,
							},
							header98879 = {
								order = 93,
								type = "description",
								name = L["Nameplate Powerbar Size"],
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
							},
							powerbarsizeX = {
								type = 'range',
								name = L["Select the Horizontal Size of the Power Bar (Default 132)"],
								desc = L["Set Horizontal Size"],
								order = 94,
								min = 10,
								max = 300,
								step = 1,
								width = "full",
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.sizex end,
								set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.sizex = value end,
							},
							powerbarsizeY = {
								type = 'range',
								name = L["Select the Vertical Size of the Power Bar (Default 6)"],
								desc = L["Set Vertical Size"],
								order = 95,
								min = 2,
								max = 20,
								step = 1,
								width = "full",
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.sizey end,
								set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.sizey = value end,
							},
							header998 = {
								order = 96,
								type = "description",
								name = L["Nameplate Powerbar appearance"],
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
							},
							nameplatepowerfont = {
								order = 97,
								type = 'select',
								width = "double",
								dialogControl = 'LSM30_Font',
								name = L["Font"],
								desc = L["Choose a font for the Nameplate Powerbar Text"],
								values = AceGUIWidgetLSMlists.font,
								get = function()
									return E.db.ElvUI_EltreumUI.nameplatepower.font
								end,
								set = function(self,fontvalue)
									E.db.ElvUI_EltreumUI.nameplatepower.font = fontvalue
								end,
							},
							nameplatepowerfontsize = {
								type = 'range',
								name = L["Font Size"],
								desc = L["Nameplate Powerbar Font Size"],
								order = 98,
								min = 8,
								max = 36,
								step = 1,
								--width = "double",
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.fontsize end,
								set = function(_, value) E.db.ElvUI_EltreumUI.nameplatepower.fontsize = tonumber(value) end,
							},
							sharedmediatexture = {
								order = 99,
								type = 'select',
								--width = "double",
								dialogControl = 'LSM30_Statusbar',
								name = L["Choose the Power Bar Texture"],
								desc = L["Select a Texture"],
								values = AceGUIWidgetLSMlists.statusbar,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.db.ElvUI_EltreumUI.nameplatepower.texture end,
								set = function(self,key) E.db.ElvUI_EltreumUI.nameplatepower.texture = key end,
							},
							powerbarbackgroundcolor = {
								order = 100,
								type = 'color',
								name = L["Background Color"],
								hasAlpha = false,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function()
									local customcolorpowerbar = E.db.ElvUI_EltreumUI.nameplatepower
									local d = P.ElvUI_EltreumUI.nameplatepower
									return customcolorpowerbar.r, customcolorpowerbar.g, customcolorpowerbar.b, customcolorpowerbar.a, d.r, d.g, d.b, d.a
								end,
								set = function(_, r, g, b, a)
									local customcolorpowerbar = E.db.ElvUI_EltreumUI.nameplatepower
									customcolorpowerbar.r, customcolorpowerbar.g, customcolorpowerbar.b = r, g, b E:StaticPopup_Show('CONFIG_RL')
								end,
							},
							header9987 = {
								order = 101,
								type = "description",
								name = "",
								width = 'full',
								image = function() return 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', 3240, 1 end,
							},
							describethis = {
								order = 102,
								type = "description",
								name = L["Select the power types to be displayed:"],
							},
							addagapforspace8 = {
								order = 103,
								type = "description",
								name = "",
							},
							mana = {
								type = 'toggle',
								name = L["Mana"],
								order = 104,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.mana end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.mana = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
							rage = {
								type = 'toggle',
								name = L["Rage"],
								order = 104,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.rage end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.rage = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
							energy = {
								type = 'toggle',
								name = L["Energy"],
								order = 104,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.energy end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.energy = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
							runic = {
								type = 'toggle',
								name = L["Runic power"],
								order = 104,
								disabled = function() return not E.private.ElvUI_EltreumUI.nameplatepower.enable end,
								get = function() return E.private.ElvUI_EltreumUI.nameplatepower.runic end,
								set = function(_, value) E.private.ElvUI_EltreumUI.nameplatepower.runic = value E:StaticPopup_Show('PRIVATE_RL') end,
							},
						}
					},
				},
			},
		},
	}
	return nameplates
end
